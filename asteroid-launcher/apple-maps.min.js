(()=>{
    var n = {
        1207: (t,e,i)=>{
            var n = i(6217)
              , o = i(2221)
              , s = i(6426)
              , a = i(4891)
              , r = (i(7664),
            i(9728))
              , l = i(1486)
              , h = i(811)
              , c = {
                OK: 200,
                MULTIPLE_CHOICES: 300,
                BAD_REQUEST: 400,
                UNAUTHORIZED: 401,
                TOO_MANY_REQUESTS: 429
            }
              , d = ["language", "countryCode", "origin", "madabaBaseUrl", "authorizationCallback", "libraries", "_showMapsLogo", "_mirrorLegalLink", "bootstrapTimeout", "_showsTileInfo", "_distUrl", "_syrupUrl", "_previewLoCSR", "_forcedRenderingMode", "_proxyPrefixes"]
              , u = {
                READY: 0,
                PENDING: 1,
                ERROR: 2,
                UNINITIALIZED: 3
            }
              , p = {
                Initialized: "Initialized",
                Refreshed: "Refreshed"
            }
              , m = {
                BadRequest: "Bad Request",
                Unauthorized: "Unauthorized",
                TooManyRequests: "Too Many Requests",
                MalformedResponse: "Malformed Response",
                Timeout: "Timeout",
                NetworkError: "Network Error",
                Unknown: "Unknown"
            }
              , _ = "Bearer {{token}}"
              , g = {
                Apple: "Apple",
                AutoNavi: "AutoNavi"
            };
            function f() {
                this._jwtTokensToCheck = []
            }
            f.ChangeStatus = p,
            f.PROTOCOL = "https:",
            f.TileProviders = g,
            f.prototype = o.inheritPrototype(s.EventTarget, f, {
                HTTP: c,
                ErrorStatus: m,
                Events: {
                    Initialized: "configuration-init",
                    Changed: "configuration-change",
                    Error: "error"
                },
                States: u,
                state: u.UNINITIALIZED,
                authorizationCallback: null,
                tileProvider: g.Apple,
                _countryCode: null,
                _showMapsLogo: !0,
                _mirrorLegalLink: !1,
                _madabaBaseUrl: null,
                customMadabaUrl: !1,
                _madabaDomains: null,
                _accessKey: null,
                _accessToken: null,
                _distUrl: null,
                _syrupUrl: null,
                apiBaseUrl: null,
                apiBaseUrlOverride: null,
                types: {},
                _acceptLanguage: null,
                _optionsLanguage: null,
                _bootstrapRequestParams: null,
                _showsTileInfo: !1,
                _messagePrefix: "[MapKit] ",
                get _initMessagePrefix() {
                    return this._messagePrefix + "mapkit.init(): "
                },
                get proxyPrefixes() {
                    return this._proxyPrefixes
                },
                get withCredentials() {
                    return this.proxyPrefixes && /\b\.geo\.apple\.com\b/.test(this.proxyPrefixes[0])
                },
                init: function(t, e) {
                    o.required(t, this._initMessagePrefix + "`options` object is required.", {
                        checkNull: !0
                    }).checkType(t, "object", this._initMessagePrefix + "`options` object is invalid."),
                    Object.keys(t).forEach(function(t) {
                        -1 === d.indexOf(t) && console.warn(this._initMessagePrefix + "ignoring invalid option: `" + t + "`.")
                    }
                    .bind(this)),
                    e || o.required(t.authorizationCallback, this._initMessagePrefix + "`options` is missing `authorizationCallback`.", {
                        checkNull: !0
                    }).checkType(t.authorizationCallback, "function", this._initMessagePrefix + "`authorizationCallback` in `options` must be a function."),
                    t.language && (o.checkType(t.language, "string", this._initMessagePrefix + "`language` in `options` must be a string."),
                    this._optionsLanguage = t.language),
                    this._userInitializedInit ? console.warn(this._initMessagePrefix + "already initialized; ignoring.") : (e || (this._userInitializedInit = !0),
                    t && "object" == typeof t && ("_previewLoCSR"in t && t._previewLoCSR && (this._forcedRenderingMode = "HYBRID"),
                    "_forcedRenderingMode"in t && (this._forcedRenderingMode = t._forcedRenderingMode),
                    "_proxyPrefixes"in t && Array.isArray(t._proxyPrefixes) && (this._proxyPrefixes = t._proxyPrefixes),
                    "_distUrl"in t && (this._distUrl = t._distUrl),
                    "_syrupUrl"in t) && (this._syrupUrl = t._syrupUrl),
                    (e = (this.state === u.UNINITIALIZED || this.state === u.ERROR) && t.authorizationCallback) && (this.state = u.PENDING),
                    this.authorizationCallback = t.authorizationCallback,
                    this.language ? this._l10n && (this._l10n.localeId = this.language) : this.language = this._optionsLanguage,
                    "countryCode"in t && (this._countryCode = t.countryCode),
                    "_showMapsLogo"in t && (this._showMapsLogo = !!t._showMapsLogo),
                    "_mirrorLegalLink"in t && (this._mirrorLegalLink = !!t._mirrorLegalLink),
                    t.bootstrapTimeout && (this._bootstrapTimeout = t.bootstrapTimeout),
                    t.madabaBaseUrl && (this._madabaBaseUrl = t.madabaBaseUrl,
                    this.customMadabaUrl = !0),
                    t._showsTileInfo && (this._showsTileInfo = t._showsTileInfo),
                    e && this._loadFromServer(),
                    t = new s.Event(this.Events.Initialized),
                    this.dispatchEvent(t))
                },
                reloadFromServer: function() {
                    this._loadFromServer()
                },
                get accessKey() {
                    return this._accessKey
                },
                get accessToken() {
                    return this._accessToken
                },
                accessKeyHasExpired: function() {
                    this._loadFromServer(l.Highest)
                },
                get ready() {
                    return this.state === u.READY
                },
                get error() {
                    return this.state === u.ERROR
                },
                get language() {
                    return this._language
                },
                set language(t) {
                    t !== this._language && (t ? o.checkType(t, "string", "[MapKit] `language` must be a string or `null`.") : t = this._acceptLanguage || this._getClientLanguage(),
                    this._language = n.bestMatch(t, "en"),
                    this.state !== u.UNINITIALIZED) && this._l10n && (this._l10n.localeId = t)
                },
                get countryCode() {
                    return this._countryCode
                },
                set countryCode(t) {
                    t !== this._countryCode && (t && (o.checkType(t, "string", "[MapKit] `countryCode` must be a string or `null`."),
                    t = t.toUpperCase()),
                    this._countryCode = t,
                    this._loadFromServer())
                },
                get isAutoNavi() {
                    return this.tileProvider === g.AutoNavi || this.state === u.PENDING && "CN" === this._countryCode
                },
                appendAuthOptions: function(t, e) {
                    return (e || this.accessToken) && (t.headers = {
                        Authorization: o.fillTemplate(_, {
                            token: e || this.accessToken
                        })
                    }),
                    t
                },
                setL10n: function(t) {
                    this._l10n = t,
                    this.state !== u.UNINITIALIZED && (this._l10n.localeId = this.language)
                },
                loaderWillStart: function(t) {
                    this.state = u.PENDING
                },
                loaderDidSucceed: function(t, e) {
                    this._requestDidLoad(e)
                },
                loaderDidFail: function(t, e) {
                    this._parseError(t._xhr)
                },
                _loadFromServer: function(t) {
                    this._bootstrapRequestParams = {
                        apiVersion: "2",
                        countryCode: this._countryCode,
                        mkjsVersion: a.version,
                        poi: "1"
                    };
                    var e = "https://cdn.apple-mapkit.com/ma/bootstrap?" + o.toQueryString(this._bootstrapRequestParams)
                      , i = (this.proxyPrefixes && (e = this.proxyPrefixes[0] + e),
                    {
                        retry: !0,
                        delay: 0,
                        priority: t,
                        timeout: this._bootstrapTimeout,
                        withCredentials: this.withCredentials
                    });
                    this.withCredentials && /\bapple\.com\b/.test(this.proxyPrefixes[0]) && !/\bapple\.com$/.test(window.location.hostname) && console.warn("[MapKit] Request with credentials may fail if the page is not hosted on the same domain as the proxy."),
                    h(this.authorizationCallback, null, [function(t) {
                        this._checkJwtToken ? this._checkJwtToken(t) : this._jwtTokensToCheck.push(t),
                        this.appendAuthOptions(i, t),
                        this.accessToken && (i.headers["X-Maps-Access-Token"] = o.fillTemplate(_, {
                            token: this.accessToken
                        })),
                        new r(e,this,i).schedule()
                    }
                    .bind(this)])
                },
                _requestDidLoad: function(t) {
                    if (!this._parseError(t))
                        try {
                            var e = JSON.parse(t.responseText);
                            this._processLoadedData(e)
                        } catch (t) {
                            this._loadFailed(m.MalformedResponse, "Initialization failed because of incorrect server response.")
                        }
                },
                _resetReloadTimer: function(t) {
                    clearTimeout(this._reloadTimerId),
                    this._reloadTimerId = setTimeout(function() {
                        delete this._reloadTimerId,
                        this.accessKeyHasExpired()
                    }
                    .bind(this), t)
                },
                _loadSucceeded: function(e) {
                    setTimeout(function() {
                        this.state = u.READY;
                        var t = new s.Event(this.Events.Changed);
                        t.status = e ? p.Refreshed : p.Initialized,
                        this.dispatchEvent(t)
                    }
                    .bind(this), 0)
                },
                _loadFailed: function(e, i) {
                    console.error(this._messagePrefix + i),
                    setTimeout(function() {
                        this.state = u.ERROR;
                        var t = new s.Event(this.Events.Error);
                        t.status = e,
                        t.message = this._messagePrefix + i,
                        this.dispatchEvent(t)
                    }
                    .bind(this), 0)
                },
                _processLoadedData: function(t) {
                    var e = !!this._accessToken;
                    this._parseData(t),
                    this.expiresInSeconds && this._resetReloadTimer(this._adjustedExpirationInSeconds(this.expiresInSeconds)),
                    this.language || (this.language = this._optionsLanguage),
                    this._loadSucceeded(e)
                },
                _parseData: function(t) {
                    t.apiBaseUrl,
                    this._countryCode = "unknown" !== t.countryCode ? t.countryCode : null,
                    this.environment = t.environment,
                    this.apiBaseUrl = this.apiBaseUrlOverride || t.apiBaseUrl,
                    this.proxyPrefixes && (e = this.proxyPrefixes[this.proxyPrefixes.length - 1],
                    this.apiBaseUrl = e + this.apiBaseUrl),
                    t.analytics && (i = t.analytics,
                    this.proxyPrefixes && (i.analyticsUrl = e + i.analyticsUrl,
                    i.errorUrl = e + i.errorUrl),
                    this.analytics = i),
                    t.authInfo && t.authInfo.team_id && (this.teamId = t.authInfo.team_id),
                    t.locationShiftUrl && (this.proxyPrefixes ? this.locationShiftUrl = e + t.locationShiftUrl : this.locationShiftUrl = t.locationShiftUrl),
                    this.expiresInSeconds = t.expiresInSeconds;
                    var e, i = t.tileSources.some(function(t) {
                        return t.needsLocationShift
                    });
                    t.accessKey && (this._accessKey = t.accessKey),
                    t.authInfo && t.authInfo.access_token && (this._accessToken = t.authInfo.access_token),
                    this.tileProvider = i ? f.TileProviders.AutoNavi : f.TileProviders.Apple,
                    this._acceptLanguage = this._parseAcceptLanguage(t.acceptLanguage),
                    this._data = t,
                    this._parseMapData && this._parseMapData()
                },
                _parseError: function(t) {
                    var e, i, n = t.status;
                    if (c.OK <= n && n < c.MULTIPLE_CHOICES)
                        return !1;
                    if (this._userInitializedInit = !1,
                    t.readyState !== t.DONE)
                        i = m.Timeout,
                        e = "Initialization failed because the request timed out after " + this._bootstrapTimeout + " ms.";
                    else if (n === c.UNAUTHORIZED) {
                        i = m.Unauthorized,
                        e = "Initialization failed because the authorization token is invalid.";
                        try {
                            var o = JSON.parse(t.responseText);
                            o.error && o.error.details && Array.isArray(o.error.details) && o.error.details.forEach(function(t) {
                                t && "ORIGIN_CHECK_FAILURE" === t.errorType && t.message && (e += " " + t.message)
                            })
                        } catch (t) {
                            if ("SyntaxError" !== t.name)
                                throw t
                        }
                    } else
                        e = n === c.TOO_MANY_REQUESTS ? (i = m.TooManyRequests,
                        "Initialization failed because the daily usage limit has exceeded.") : 0 === n ? (i = m.NetworkError,
                        "Initialization failed because of network error.") : (i = m.Unknown,
                        "Initialization failed because the server returned error " + n + " (" + t.statusText + ").");
                    return this._loadFailed(i, e),
                    !0
                },
                _getClientLanguage: function() {
                    return window.navigator.languages ? window.navigator.languages[0] : window.navigator.language
                },
                _parseAcceptLanguage: function(t) {
                    t = n.constructor.parseAcceptLanguage(t);
                    return t && t[0].langTag ? t[0].langTag.tag : null
                },
                _adjustedExpirationInSeconds: function(t) {
                    return 1e3 * t - 3e4
                },
                _restore: function() {
                    delete this._proxyPrefixes,
                    delete this._forcedRenderingMode,
                    delete this._userInitializedInit,
                    this._distUrl = null,
                    this.authorizationCallback = null,
                    this._acceptLanguage = null,
                    this._optionsLanguage = null,
                    delete this._language,
                    this.apiBaseUrl = null,
                    this.apiBaseUrlOverride = null,
                    this.state = u.UNINITIALIZED,
                    this._listeners = {},
                    clearTimeout(this._reloadTimerId),
                    delete this._reloadTimerId
                },
                _debugInfo: function() {
                    var e = {};
                    return ["ready", "state", "_countryCode", "tileProvider", "apiBaseUrl", "language", "_acceptLanguage", "_optionsLanguage", "_getClientLanguage", "types"].forEach(function(t) {
                        e[t] = "function" == typeof this[t] ? this[t]() : this[t]
                    }, this),
                    e
                }
            }),
            t.exports = f
        }
        ,
        2244: t=>{
            t.exports = function(e, i, n) {
                var o;
                return function() {
                    var t = arguments;
                    o && window.clearTimeout(o),
                    o = window.setTimeout(function() {
                        o = null,
                        e.apply(n, t)
                    }, i || 0)
                }
            }
        }
        ,
        5479: (t,e,i)=>{
            var o = i(2221)
              , s = i(5598)
              , a = Math.PI / 180
              , n = Math.PI / 4
              , r = 2 * Math.PI;
            function m(t) {
                t = o.clamp(t, 1e-8 - 90, 90 - 1e-8) * a;
                return .5 + Math.log(Math.tan(n - t / 2)) / r
            }
            function _(t) {
                t = Math.pow(Math.E, 2 * Math.PI * (t - .5));
                return -2 * (Math.atan(t) - Math.PI / 4) / Math.PI * 180
            }
            function l(t) {
                return o.mod(t / 360 + .5, 1)
            }
            function h(t) {
                return 360 * (o.mod(t, 1) - .5)
            }
            function g(t) {
                return o.mod(180 + t, 360) - 180
            }
            var f = 1e-8
              , v = _(0)
              , y = _(1);
            function c(t, e) {
                s(this, c) && (void 0 === t && (t = new w),
                void 0 === e && (e = new d),
                o.checkInstance(t, w, "[MapKit] `center` is not a Coordinate."),
                o.checkInstance(e, d, "[MapKit] `span` is not a CoordinateSpan."),
                this.center = new w(t.latitude,t.longitude),
                this.span = new d(e.latitudeDelta,e.longitudeDelta))
            }
            function d(t, e) {
                s(this, d) && (void 0 === e && (e = 0),
                o.checkType(t = void 0 === t ? 0 : t, "number", "[MapKit] `latitudeDelta` is not a number."),
                o.checkType(e, "number", "[MapKit] `longitudeDelta` is not a number."),
                this.latitudeDelta = Math.max(t, 0),
                this.longitudeDelta = Math.max(e, 0))
            }
            function w(t, e) {
                s(this, w) && (void 0 === e && (e = 0),
                o.checkType(t = void 0 === t ? 0 : t, "number", "[MapKit] `latitude` is not a number."),
                o.checkType(e, "number", "[MapKit] `longitude` is not a number."),
                this.latitude = t,
                this.longitude = e)
            }
            function u(t, e, i, n) {
                s(this, u) && (arguments.length < 4 && (n = 0,
                arguments.length < 3) && (i = 0,
                arguments.length < 2) && (e = 0,
                arguments.length < 1) && (t = 0),
                o.checkType(t, "number", "[MapKit] Expected a number for `northLatitude` in BoundingRegion constructor but got `" + t + "` instead."),
                o.checkType(e, "number", "[MapKit] Expected a number for `eastLongitude` in BoundingRegion constructor but got `" + e + "` instead."),
                o.checkType(i, "number", "[MapKit] Expected a number for `southLatitude` in BoundingRegion constructor but got `" + i + "` instead."),
                o.checkType(n, "number", "[MapKit] Expected a number for `westLongitude` in BoundingRegion constructor but got `" + n + "` instead."),
                this.northLatitude = t,
                this.eastLongitude = e,
                this.southLatitude = i,
                this.westLongitude = n)
            }
            function C(t, e) {
                s(this, C) && (arguments.length < 2 && (e = 0,
                arguments.length < 1) && (t = 0),
                o.checkType(t, "number", "[MapKit] Expected a number for `x` in MapPoint constructor but got `" + t + "` instead."),
                o.checkType(e, "number", "[MapKit] Expected a number for `y` in MapPoint constructor but got `" + e + "` instead."),
                this.x = t,
                this.y = e)
            }
            function p(t, e) {
                s(this, p) && (arguments.length < 2 && (e = 0,
                arguments.length < 1) && (t = 0),
                o.checkType(t, "number", "[MapKit] Expected a number for `width` in MapSize constructor but got `" + t + "` instead."),
                o.checkType(e, "number", "[MapKit] Expected a number for `height` in MapSize constructor but got `" + e + "` instead."),
                this.width = t,
                this.height = e)
            }
            function b(t, e, i, n) {
                s(this, b) && (arguments.length < 4 && (n = 0,
                arguments.length < 3) && (i = 0,
                arguments.length < 2) && (e = 0,
                arguments.length < 1) && (t = 0),
                o.checkType(t, "number", "[MapKit] Expected a number for `x` in MapRect constructor but got `" + t + "` instead."),
                o.checkType(e, "number", "[MapKit] Expected a number for `y` in MapRect constructor but got `" + e + "` instead."),
                o.checkType(i, "number", "[MapKit] Expected a number for `width` in MapRect constructor but got `" + i + "` instead."),
                o.checkType(n, "number", "[MapKit] Expected a number for `height` in MapRect constructor but got `" + n + "` instead."),
                this.origin = new C(t,e),
                this.size = new p(i,n))
            }
            function k(t, e) {
                if (s(this, k)) {
                    var i, n;
                    if (null == e && (e = "number" != typeof t && (i = null == t ? {} : t,
                    t = (n = Object.prototype.hasOwnProperty).call(i, "minCameraDistance") ? i.minCameraDistance : 0,
                    n.call(i, "maxCameraDistance")) ? i.maxCameraDistance : 1 / 0),
                    "number" != typeof t || t < 0)
                        throw new Error("[MapKit] The `minCameraDistance` property of CameraZoomRange must be a number >= 0");
                    if ("number" != typeof e || e < 0)
                        throw new Error("[MapKit] The `maxCameraDistance` property of CameraZoomRange must be a number >= 0");
                    if (e < t)
                        throw new Error("[MapKit] The `maxCameraDistance` property of CameraZoomRange must be greater than the `minCameraDistance` property.");
                    this._minCameraDistance = t,
                    this._maxCameraDistance = e
                }
            }
            c.prototype = {
                constructor: c,
                copy: function() {
                    return new c(this.center.copy(),this.span.copy())
                },
                toString: function() {
                    return ["CoordinateRegion(", "\tlatitude: " + this.center.latitude, "\tlongitude: " + this.center.longitude, "\tlatitudeDelta: " + this.span.latitudeDelta, "\tlongitudeDelta: " + this.span.longitudeDelta, ")"].join("\n")
                },
                equals: function(t) {
                    return this.center.equals(t.center) && this.span.equals(t.span)
                },
                toBoundingRegion: function() {
                    var t = this.span.latitudeDelta / 2
                      , e = this.span.longitudeDelta / 2;
                    return new u(this.center.latitude + t,g(this.center.longitude + e),this.center.latitude - t,g(this.center.longitude - e))
                },
                toMapRect: function() {
                    this.span.latitudeDelta < 0 ? this.span.latitudeDelta = 0 : (t = m(Math.abs(this.center.latitude)),
                    t = v - _(2 * t),
                    this.span.latitudeDelta > t && (this.span.latitudeDelta = t));
                    var t = g(this.center.longitude)
                      , e = this.span.longitudeDelta / 2
                      , i = t - e
                      , t = t + e
                      , e = !1
                      , n = (i < -180 && (i += 360,
                    e = !0),
                    !1)
                      , i = (180 < t && (t -= 360,
                    n = !0),
                    new w(this.center.latitude,i))
                      , t = new w(this.center.latitude,t)
                      , o = i.toMapPoint()
                      , s = t.toMapPoint()
                      , a = (e && --o.x,
                    n && (s.x += 1),
                    new b);
                    if (0 === this.center.latitude)
                        d = new w(this.center.latitude + this.span.latitudeDelta / 2,this.center.longitude),
                        u = new w(this.center.latitude - this.span.latitudeDelta / 2,this.center.longitude),
                        a.origin.x = o.x,
                        a.size.width = s.x - a.origin.x,
                        a.origin.y = d.toMapPoint().y,
                        a.size.height = u.toMapPoint().y - a.origin.y;
                    else {
                        var r, l = this.copy(), h = (l.center.latitude = y + this.span.latitudeDelta / 2,
                        10), c = (new w,
                        new C), d = new w, u = new w, p = (d.longitude = this.center.longitude,
                        u.longitude = this.center.longitude,
                        0);
                        do {
                            if (l.center.latitude > v && l.center.latitude > this.center.latitude || l.center.latitude < y && l.center.latitude < this.center.latitude)
                                l.center.latitude -= h,
                                h *= .1;
                            else if (l.center.latitude > v || l.center.latitude < y)
                                return new b(0,0,1,1);
                            if (500 < p)
                                return new b(0,0,1,1)
                        } while (d.latitude = l.center.latitude + l.span.latitudeDelta / 2,
                        u.latitude = l.center.latitude - l.span.latitudeDelta / 2,
                        a.origin.x = o.x,
                        a.size.width = s.x - a.origin.x,
                        a.origin.y = d.toMapPoint().y,
                        a.size.height = u.toMapPoint().y - a.origin.y,
                        c.x = a.midX(),
                        c.y = a.midY(),
                        r = c.toCoordinate(),
                        (0 < h && r.latitude > this.center.latitude || h < 0 && r.latitude < this.center.latitude) && (h *= -.1),
                        l.center.latitude += h,
                        p++,
                        Math.abs(r.latitude - this.center.latitude) >= f)
                    }
                    return a
                },
                get radius() {
                    var t, e, i, n, o, s = this.toMapRect(), s = s.size.width > s.size.height ? (t = new C(s.minX(),s.midY()),
                    new C(s.maxX(),s.midY())) : (t = new C(s.midX(),s.minY()),
                    new C(s.midX(),s.maxY()));
                    return s = s,
                    e = (e = t).toCoordinate(),
                    s = s.toCoordinate(),
                    i = e.latitude,
                    e = e.longitude,
                    n = s.latitude,
                    s = s.longitude,
                    o = i,
                    i = 6378160 - 21e3 * Math.sin(i * a),
                    s = (s - e) * a,
                    e = Math.pow(Math.sin((n - o) * a / 2), 2) + Math.cos(o * a) * Math.cos(n * a) * Math.pow(Math.sin(s / 2), 2),
                    i * (2 * Math.atan2(Math.sqrt(e), Math.sqrt(1 - e))) / 2
                }
            },
            d.prototype = {
                constructor: d,
                copy: function() {
                    return new d(this.latitudeDelta,this.longitudeDelta)
                },
                equals: function(t) {
                    return Math.abs(this.latitudeDelta - t.latitudeDelta) < f && Math.abs(this.longitudeDelta - t.longitudeDelta) < f
                },
                toString: function() {
                    return ["CoordinateSpan(", "\tlatitudeDelta: " + this.latitudeDelta, "\tlongitudeDelta: " + this.longitudeDelta, ")"].join("\n")
                }
            },
            w.prototype = {
                constructor: w,
                copy: function() {
                    return new w(this.latitude,this.longitude)
                },
                equals: function(t) {
                    return Math.abs(this.latitude - t.latitude) < f && Math.abs(this.longitude - t.longitude) < f
                },
                toMapPoint: function() {
                    return new C(l(this.longitude),m(this.latitude))
                },
                toUnwrappedMapPoint: function() {
                    return new C(this.longitude / 360 + .5,m(this.latitude))
                },
                toString: function() {
                    return ["Coordinate(", "latitude:" + this.latitude.toFixed(12), ",longitude:" + this.longitude.toFixed(12), ")"].join("")
                }
            },
            u.prototype = {
                constructor: u,
                copy: function() {
                    return new u(this.northLatitude,this.eastLongitude,this.southLatitude,this.westLongitude)
                },
                toString: function() {
                    return ["BoundingRegion(", "\tnorthLatitude: " + this.northLatitude, "\teastLongitude: " + this.eastLongitude, "\tsouthLatitude: " + this.southLatitude, "\twestLongitude: " + this.westLongitude, ")"].join("\n")
                },
                toCoordinateRegion: function() {
                    var t = g(this.eastLongitude)
                      , e = g(this.westLongitude)
                      , i = (t < e && (t += 360),
                    this.northLatitude - this.southLatitude)
                      , t = t - e;
                    return new c(new w(this.southLatitude + i / 2,g(e + t / 2)),new d(i,t))
                }
            },
            C.prototype = {
                constructor: C,
                z: 0,
                w: 1,
                toString: function() {
                    return "MapPoint(" + this.x + ", " + this.y + ")"
                },
                copy: function() {
                    return new C(this.x,this.y)
                },
                equals: function(t) {
                    return this.x === t.x && this.y === t.y
                },
                toCoordinate: function() {
                    return new w(_(this.y),g(h(this.x)))
                }
            },
            p.prototype = {
                constructor: p,
                toString: function() {
                    return "MapSize(" + this.width + ", " + this.height + ")"
                },
                copy: function() {
                    return new p(this.width,this.height)
                },
                equals: function(t) {
                    return this.width === t.width && this.height === t.height
                }
            },
            b.prototype = {
                constructor: b,
                toString: function() {
                    return "MapRect(" + [this.origin.x.toFixed(12), this.origin.y.toFixed(12), this.size.width.toFixed(12), this.size.height.toFixed(12)].join(", ") + ")"
                },
                copy: function() {
                    return new b(this.origin.x,this.origin.y,this.size.width,this.size.height)
                },
                equals: function(t) {
                    return this.origin.equals(t.origin) && this.size.equals(t.size)
                },
                minX: function() {
                    return this.origin.x
                },
                minY: function() {
                    return this.origin.y
                },
                midX: function() {
                    return this.origin.x + this.size.width / 2
                },
                midY: function() {
                    return this.origin.y + this.size.height / 2
                },
                maxX: function() {
                    return this.origin.x + this.size.width
                },
                maxY: function() {
                    return this.origin.y + this.size.height
                },
                scale: function(t, e) {
                    if (o.required(t, "[MapKit] Missing `scaleFactor` parameter in call to `MapRect.scale()`."),
                    "number" != typeof t || isNaN(t))
                        throw new TypeError("[MapKit] The `scaleFactor` parameter passed to `MapRect.scale()` is not a number.");
                    var i = this.size.width * t
                      , n = this.size.height * t;
                    return e ? (o.checkInstance(e, C, "[MapKit] The `scaleCenter` parameter passed to `MapRect.scale()` is not a MapPoint."),
                    new b(e.x - t * (e.x - this.origin.x),e.y - t * (e.y - this.origin.y),i,n)) : new b(this.midX() - i / 2,this.midY() - n / 2,i,n)
                },
                toCoordinateRegion: function() {
                    var t = this.origin.toCoordinate()
                      , e = new C(this.maxX(),this.maxY()).toCoordinate()
                      , i = Math.abs(e.latitude - t.latitude)
                      , n = e.longitude - t.longitude;
                    return e.longitude < t.longitude && (n += 360),
                    new c(new C(this.midX(),this.midY()).toCoordinate(),new d(i,n))
                }
            },
            k.prototype = {
                get minCameraDistance() {
                    return this._minCameraDistance
                },
                get maxCameraDistance() {
                    return this._maxCameraDistance
                },
                copy: function() {
                    return new k(this._minCameraDistance,this._maxCameraDistance)
                }
            },
            t.exports = {
                tileSize: 256,
                convertLatitudeToY: m,
                convertYToLatitude: _,
                convertLongitudeToX: l,
                convertXToLongitude: h,
                wrapLongitude: g,
                wrapX: function(t, e) {
                    for (var i, n = 1.5, o = -1; o <= 1; ++o) {
                        var s = Math.abs(t + o - e);
                        s < n && (n = s,
                        i = t + o)
                    }
                    return i
                },
                zoomLevelForMapRectInViewport: function(t, e, i) {
                    var n = e.width / (i * t.size.width)
                      , e = e.height / (i * t.size.height);
                    return o.log2(Math.min(n, e))
                },
                mapUnitsPerMeterAtLatitude: function(t) {
                    var e = t * a
                      , e = 111132.92 + -559.82 * Math.cos(2 * e) + 1.175 * Math.cos(4 * e) + -.0023 * Math.cos(6 * e)
                      , i = m(t - .5)
                      , t = m(t + .5);
                    return Math.abs(i - t) / e
                },
                pointsPerAxis: function(t) {
                    return 256 * Math.pow(2, t)
                },
                CameraZoomRange: k,
                CoordinateRegion: c,
                CoordinateSpan: d,
                Coordinate: w,
                BoundingRegion: u,
                MapPoint: C,
                MapRect: b,
                MapSize: p
            }
        }
        ,
        8086: (t,e,i)=>{
            t.exports = {
                BackgroundGridThemes: i(3307).Themes,
                SceneGraphMapNode: i(8402),
                SyrupMapNode: i(1567),
                TileOverlay: i(1930)
            }
        }
        ,
        3307: (t,e,i)=>{
            var n = i(462)
              , o = i(2221)
              , s = {
                light: {
                    fillColor: [248, 245, 236],
                    lineColor: [149, 148, 144]
                },
                dark: {
                    fillColor: [44, 45, 47],
                    lineColor: [56, 64, 66]
                }
            };
            function a() {
                n.BaseNode.call(this),
                this._renderer = new (i(4030))(this),
                this._theme = s.light
            }
            a.prototype = o.inheritPrototype(n.BaseNode, a, {
                initialRendering: !1,
                get size() {
                    return this.parent.size
                },
                get zoom() {
                    return this.parent.zoomLevel
                },
                get origin() {
                    return this.parent.visibleMapRect.origin
                },
                get theme() {
                    return this._theme
                },
                updateThemeFromTint: function(t) {
                    t = s[t];
                    t !== this._theme && (this._theme = t,
                    this.needsDisplay = !0)
                },
                stringInfo: function() {
                    return "BackgroundGridNode" + (this.initialRendering ? "!" : "") + (this._theme === s.light ? "" : "<dark>")
                }
            }),
            t.exports = a
        }
        ,
        2764: (t,e,i)=>{
            var s = i(462)
              , a = i(5479)
              , l = i(2221)
              , r = i(4701)
              , h = i(6376)
              , c = i(1369)
              , n = i(5814)
              , o = i(2801)
              , d = i(5534)
              , u = i(9653)
              , p = i(1930)
              , m = i(9839)
              , _ = 1 - Math.pow(2, -52)
              , i = Math.PI / 3
              , g = Math.tan(i / 2);
            function f(t) {
                this.node = t,
                this._configuration = null,
                this._debug = !1,
                this._language = null,
                this.allowWheelToZoom = !1,
                this._pointOfInterestFilter = null,
                this._showsDefaultTiles = !0,
                this._tileOverlays = [],
                this.camera = new h,
                this._element = document.createElement("div"),
                this.currentMinZoomLevel = this.minZoomLevel,
                this.currentMaxZoomLevel = this.maxZoomLevel
            }
            f.prototype = {
                constructor: f,
                get element() {
                    return this._element
                },
                deactivate: function() {
                    this.pannable = !1,
                    this.zoomable = !1,
                    this.node.delegate = null
                },
                destroy: function(t) {
                    !t && this.cameraAnimation && this.cameraAnimation.cancel(),
                    this._tileOverlays.forEach(function(t) {
                        t.removeEventListener(m.RELOAD_EVENT, this)
                    }, this),
                    this._initialInteractionController && (this._initialInteractionController.destroy(),
                    this._initialInteractionController = null),
                    this._panController && (this._panController.destroy(),
                    this._panController = null),
                    this._zoomController && (this._zoomController.destroy(),
                    this._zoomController = null),
                    this._rotationController && (this._rotationController.destroy(),
                    this._rotationController = null),
                    delete this.node.delegate
                },
                minZoomLevel: 3,
                maxZoomLevel: 1 / 0,
                staysCenteredDuringZoom: !1,
                cameraAnimation: null,
                isRotationEnabled: !1,
                isRotationLocked: !0,
                snapsToIntegralZoomLevels: !1,
                get configuration() {
                    return this._configuration
                },
                set configuration(t) {
                    this._configuration !== t && this.updateConfiguration(t)
                },
                get tint() {
                    return this._tint
                },
                get emphasis() {
                    return this._emphasis
                },
                setTintAndEmphasis: function(t, e, i) {
                    t === this._tint && e === this._tileTint && i === this._emphasis || (this._tint = t,
                    this._tileTint = e,
                    this._emphasis = i,
                    this.updateTintAndEmphasis(t, i))
                },
                get language() {
                    return this._language
                },
                set language(t) {
                    this._language !== t && (this._language = t,
                    this.refresh())
                },
                get pointOfInterestFilter() {
                    return this._pointOfInterestFilter
                },
                set pointOfInterestFilter(t) {
                    this._pointOfInterestFilter !== t && (this._pointOfInterestFilter = t,
                    this.updatePointOfInterestFilter())
                },
                get size() {
                    return this.camera.viewportSize.copy()
                },
                set size(t) {
                    this.adjustForSize(t.copy()),
                    0 < t.width && 0 < t.height && this._updateZoom(!1)
                },
                adjustForSize: function(t) {
                    var e, i;
                    this._visibleMapRect && 0 < this._visibleMapRect.size.width && 0 < this._visibleMapRect.size.height && 0 < t.width && 0 < t.height ? (e = this._visibleMapRect,
                    delete this._visibleMapRect,
                    this.setCameraAnimated(this.camera.withNewMapRect(e, this.snapsToIntegralZoomLevels, t))) : (e = null,
                    Object.prototype.hasOwnProperty.call(this, "_pendingCameraDistance") && (e = this._pendingCameraDistance),
                    i = this.camera,
                    this.setCameraAnimated(new h(i.center,i.zoom,t,i.rotation)),
                    null !== e && this.setCameraDistanceAnimated(e, !1))
                },
                get cameraIsPanning() {
                    return !!this._panning
                },
                get pannable() {
                    return !!this._panController
                },
                set pannable(t) {
                    !t && this._panController ? (this._panController.destroy(),
                    delete this._panController) : t && !this._panController && (this._initialInteractionController || (this._initialInteractionController = new n(this)),
                    this._panController = new d(this))
                },
                get cameraIsZooming() {
                    return !!this._zooming || !!this._suspendedZoom
                },
                get zoomable() {
                    return !!this._zoomController
                },
                set zoomable(t) {
                    !t && this._zoomController ? (this._zoomController.destroy(),
                    delete this._zoomController) : t && !this._zoomController && (this._initialInteractionController || (this._initialInteractionController = new n(this)),
                    this._zoomController = new o(this))
                },
                get cameraIsRotating() {
                    return !!this._rotating
                },
                get visibleMapRect() {
                    return this._visibleMapRect || this.camera.toMapRect()
                },
                set visibleMapRect(t) {
                    this.setVisibleMapRectAnimated(t)
                },
                setVisibleMapRectAnimated: function(t, e) {
                    this.camera.viewportSize.equals(s.Size.Zero) ? this._visibleMapRect = t.copy() : ((t = this.camera.withNewMapRect(t, this.snapsToIntegralZoomLevels)).rotation = 0,
                    this.setCameraAnimated(t, !!e))
                },
                setCenterAnimated: function(t, e) {
                    var i, t = t.toMapPoint();
                    this._visibleMapRect ? this._visibleMapRect = new a.MapRect(t.x - this._visibleMapRect.size.width / 2,t.y - this._visibleMapRect.size.height / 2,this._visibleMapRect.size.width,this._visibleMapRect.size.height) : ((i = this.camera.copy()).center = t,
                    this.setCameraAnimated(i, e))
                },
                setCameraBoundaryAnimated: function(t, e) {
                    t ? (this._cameraBeforeBoundaryChange = this.camera,
                    this._cameraBoundaryRect = new a.MapRect(t.origin.x,t.origin.y,l.clamp(t.size.width, 0, 1),Math.max(t.size.height, 0)),
                    this.setCameraAnimated(this.camera.copy(), e),
                    delete this._cameraBeforeBoundaryChange) : delete this._cameraBoundaryRect
                },
                constrainCamera: function(t) {
                    this._cameraBoundaryRect && (t.center = this._constrainCenterWithinBounds(t.center)),
                    this._updateMinAndMaxZoomLevelsAtY(t.center.y),
                    t.zoom = l.clamp(t.zoom, this.currentMinZoomLevel, this.currentMaxZoomLevel)
                },
                constrainCameraRotation: function(t) {
                    var e = this.isRotationLocked;
                    if (this.isRotationLocked = t.zoom < 7,
                    0 !== t.rotation && this.isRotationLocked)
                        return t.rotation = 0,
                        !e && 0 !== this.camera.rotation
                },
                get transformCenter() {
                    var t = this.node.delegate;
                    return t && "function" == typeof t.mapTransformCenter ? t.mapTransformCenter(this.node) : this.camera.center
                },
                get zoomLevel() {
                    return this.camera.zoom
                },
                set zoomLevel(t) {
                    this.setZoomLevelAnimated(t)
                },
                setZoomLevelAnimated: function(t, e) {
                    var i, n, o, s;
                    delete this._cameraDistance,
                    this._suspendedZoom ? (this._suspendedZoom.animated = this._suspendedZoom.animated || this._suspendedZoom.level !== t,
                    this._suspendedZoom.level = t) : !this.cameraAnimation || e ? (i = this.zoomLevel) !== (n = l.clamp(t, this.currentMinZoomLevel, this.currentMaxZoomLevel)) && (o = this.transformCenter,
                    s = this.camera,
                    o.equals(s.center) ? this.setCameraAnimated(new h(s.center,n,s.viewportSize,s.rotation), e) : this.scaleCameraAroundMapPoint(Math.pow(2, n - i), this.transformCenter, e)) : this.cameraAnimation.additiveZoom = t
                },
                setCameraDistanceAnimated: function(t, e) {
                    var i;
                    0 !== this.camera.viewportSize.width ? (i = this.zoomLevelForCameraDistanceAtY(t, this.camera.center.y),
                    this.snapsToIntegralZoomLevels && (i = r.getIntegralZoom(i)),
                    this.setZoomLevelAnimated(i, e),
                    this._cameraDistance = t) : this._pendingCameraDistance = t
                },
                getCurrentCameraDistance: function() {
                    return this.visibleMapRect.size.width / 2 / a.mapUnitsPerMeterAtLatitude(this.camera.center.toCoordinate().latitude) / g
                },
                get cameraZoomRange() {
                    return this._cameraZoomRange ? this._cameraZoomRange.copy() : new a.CameraZoomRange
                },
                setCameraZoomRangeAnimated: function(t, e) {
                    t ? this._cameraZoomRange = t.copy() : delete this._cameraZoomRange,
                    this._updateZoom(e)
                },
                zoomLevelForCameraDistanceAtY: function(t, e) {
                    return this._zoomLevelForCameraDistanceAtLatitude(t, a.convertYToLatitude(e))
                },
                adjustMapItemPoint: function(t) {
                    var e, i, n, o;
                    return this.cameraIsZooming || this._pendingCameraDrawingReadiness || (this._pointAdjustmentReference || (n = this.camera.zoom,
                    e = this.visibleMapRect.origin,
                    o = (i = new u(this.camera)).zoom,
                    i = i.mapRect.origin,
                    n = Math.pow(2, n - o),
                    o = a.pointsPerAxis(o) * n,
                    this._pointAdjustmentReference = new s.Point((i.x - e.x) * o,(i.y - e.y) * o)),
                    t.x = r.roundToDevicePixel(this._pointAdjustmentReference.x) + r.roundToDevicePixel(t.x - this._pointAdjustmentReference.x),
                    t.y = r.roundToDevicePixel(this._pointAdjustmentReference.y) + r.roundToDevicePixel(t.y - this._pointAdjustmentReference.y)),
                    t
                },
                scaleCameraAroundMapPoint: function(t, e, i) {
                    var n = a.pointsPerAxis(this.currentMinZoomLevel)
                      , o = this.camera.viewportSize.width / (this.visibleMapRect.size.width * n)
                      , n = this.camera.viewportSize.height / (this.visibleMapRect.size.height * n)
                      , t = Math.min(1 / t, o, n)
                      , o = e.x + (e.x < 1 ? 1 : -1)
                      , n = this.visibleMapRect
                      , o = (o >= n.origin.x && o <= n.maxX() && (e = new a.MapPoint(o,e.y)),
                    this.camera.withNewMapRect(n.scale(t, e), !1));
                    this.setCameraAnimated(o, i)
                },
                setCameraAnimated: function(t, e, i, n) {
                    var o, s, a, r;
                    0 === t.viewportSize.width || 0 === t.viewportSize.height ? (this._pendingCameraDrawingReadiness = !0,
                    this.camera = t) : (delete this._pendingCameraDistance,
                    o = this.camera,
                    t.viewportSize.equals(o.viewportSize) || (this._updateMinAndMaxZoomLevels(t.viewportSize),
                    !e && this.cameraAnimation && this.cameraAnimation.updateViewportSize(t.viewportSize)),
                    n || this.constrainCamera(t),
                    n = this.constrainCameraRotation(t),
                    a = (r = t.toMapRect().size).width / 2,
                    r = r.height / 2,
                    t.center.x = l.mod(t.center.x - a, 1) + a,
                    t.center.y = l.clamp(t.center.y, r, _ - r),
                    !this._pendingCameraDrawingReadiness && t.equals(o) || (delete this._pendingCameraDrawingReadiness,
                    this._cameraWillChange(!!e),
                    !e && !n || this.cameraAnimation ? (delete this._pointAdjustmentReference,
                    this.camera = t,
                    this.cameraZoomWasSet(),
                    this._cameraDidChange()) : (e ? s = this._cameraBeforeBoundaryChange || o : (s = t.copy()).rotation = o.rotation,
                    this._cameraChangesMayHaveStarted(),
                    this.cameraAnimation = new c(this,s,t,i),
                    this._cameraBeforeBoundaryChange && (this.cameraAnimation.unconstrained = !0),
                    this.cameraAnimation.rotating && (this._rotating = !0),
                    this.cameraAnimation.zooming && this.cameraZoomWasSet(t))))
                },
                cameraWillStartZooming: function(t, e, i) {
                    var n = this.node.delegate
                      , o = function() {
                        return !!n && "function" == typeof n.mapCanStartZooming && !n.mapCanStartZooming(this.node)
                    }
                    .bind(this);
                    return this.cameraAnimation ? !(this._zoomController.active || this.cameraAnimation.zooming || o() || (this._suspendedZoom = {
                        animated: !!e,
                        offCenter: !!i,
                        level: this.zoomLevel,
                        completed: !1
                    },
                    0)) : o() ? (this._zoomController.interrupt(),
                    !1) : (this._cameraWillStartZooming(n, t, e, i),
                    !0)
                },
                _cameraWillStartZooming: function(t, e, i, n) {
                    t && "function" == typeof t.mapWillStartZooming && t.mapWillStartZooming(this.node, e, i, n),
                    this._cameraChangesMayHaveStarted(),
                    this._zooming = !0,
                    this.beforeCameraZoomChange(!0),
                    this._cameraWillChange(!!i)
                },
                cameraDidStopZooming: function() {
                    var t;
                    this.snapsToIntegralZoomLevels && (this.camera.zoom = Math.round(this.camera.zoom)),
                    this._suspendedZoom ? this._suspendedZoom.complete = !0 : (delete this._zooming,
                    this.beforeCameraZoomChange(!1),
                    this._cameraDidChange(),
                    this._cameraChangesMayHaveEnded(),
                    (t = this.node.delegate) && "function" == typeof t.mapDidStopZooming && t.mapDidStopZooming(this.node))
                },
                cameraWillStartRotating: function() {
                    var t = this.node.delegate;
                    t && "function" == typeof t.mapCanStartRotating && !t.mapCanStartRotating(this.node) || (this._cameraChangesMayHaveStarted(),
                    this._rotating = !0,
                    this._cameraWillChange())
                },
                cameraDidStopRotating: function() {
                    var t;
                    this._rotating && (delete this._rotating,
                    this._cameraDidChange(),
                    this._cameraChangesMayHaveEnded(),
                    t = this.node.delegate) && "function" == typeof t.mapDidStopRotating && t.mapDidStopRotating(this.node)
                },
                migrateStateTo: function(t) {
                    t.configuration = this.node.configuration,
                    t.setTintAndEmphasis(this.node.tint, this.node.emphasis),
                    t.language = this.node.language,
                    t.pannable = this.node.pannable,
                    t.allowWheelToZoom = this.node.allowWheelToZoom,
                    t.pointOfInterestFilter = this.node._impl.pointOfInterestFilter,
                    t.showsDefaultTiles = this.node.showsDefaultTiles,
                    t.tileOverlays = this.node.tileOverlays,
                    t.size = this.node.size,
                    t.staysCenteredDuringZoom = this.node.staysCenteredDuringZoom;
                    var e = this.node.visibleMapRect;
                    0 < e.size.width && 0 < e.size.height && (t.visibleMapRect = e),
                    t.zoomable = this.node.zoomable,
                    t.isRotationEnabled = this.isRotationEnabled,
                    t.rotation = this.rotation,
                    this._cameraZoomRange && t.setCameraZoomRangeAnimated(this._cameraZoomRange, !1),
                    0 <= this._cameraDistance && t.setCameraDistanceAnimated(this._cameraDistance, !1),
                    this._cameraBoundaryRect && t.setCameraBoundaryAnimated(this._cameraBoundaryRect, !1),
                    t._impl.debug = this.debug,
                    t._impl.isRotationLocked = this.isRotationLocked,
                    this.cameraAnimation && (this.cameraAnimation.map = t._impl,
                    t._impl.cameraAnimation = this.cameraAnimation,
                    this.cameraChangesHaveStarted) && (t._impl.cameraChangesHaveStarted = !0)
                },
                createLabelRegion: l.noop,
                updatedLabelRegion: l.noop,
                unregisterLabelRegion: l.noop,
                get debug() {
                    return this._debug
                },
                set debug(t) {
                    this._debug !== !!t && (this._debug = !!t,
                    this.refresh())
                },
                updateConfiguration: function(t) {
                    this._configuration = t,
                    this._updateMinAndMaxZoomLevels(this.camera.viewportSize),
                    this.setCameraAnimated(this.camera),
                    this.refresh()
                },
                updatePointOfInterestFilter: function() {
                    this.refresh()
                },
                refresh: function() {},
                beforeCameraZoomChange: function() {},
                cameraZoomWasSet: function() {},
                get showsDefaultTiles() {
                    return this._showsDefaultTiles
                },
                set showsDefaultTiles(t) {
                    this._showsDefaultTiles !== t && (this._showsDefaultTiles = t,
                    this._tileOverlaysDidChange())
                },
                get tileOverlays() {
                    return this._tileOverlays
                },
                set tileOverlays(t) {
                    0 === this._tileOverlays.length && 0 === t.length || (l.checkArray(t, "[MapKit] Map.tileOverlays should be an array, got `" + t + "` instead."),
                    t.forEach(function(t) {
                        l.checkInstance(t, p, "[MapKit] Map.tileOverlays can only contain TileOverlays, but got `" + t + "` instead.")
                    }),
                    this._tileOverlays.forEach(function(t) {
                        t.removeEventListener(m.RELOAD_EVENT, this)
                    }, this),
                    this._tileOverlays = t,
                    this._tileOverlays.forEach(function(t) {
                        t.addEventListener(m.RELOAD_EVENT, this)
                    }, this),
                    this._tileOverlaysDidChange())
                },
                addTileOverlay: function(t) {
                    return l.checkInstance(t, p, "[MapKit] Map.addTileOverlay expected a TileOverlay, but got `" + t + "` instead."),
                    this.addTileOverlays([t]),
                    t
                },
                addTileOverlays: function(t) {
                    return l.checkArray(t, "[MapKit] Map.addTileOverlays expected an array, but got `" + t + "` instead."),
                    t.forEach(function(t) {
                        var e;
                        l.checkInstance(t, p, "[MapKit] Map.addTileOverlays expected only TileOverlays, but got `" + t + "` instead."),
                        "number" == typeof t.minimumZ && t.minimumZ < this.currentMinZoomLevel && (e = Math.ceil(100 * this.currentMinZoomLevel) / 100,
                        console.warn("[MapKit] This TileOverlay has its minimumZ set to " + t.minimumZ + ", but this map can only zoom to a minimum value of " + e + ". As a result, some zoom levels supported by the TileOverlay cannot be viewed on this map."))
                    }, this),
                    this.tileOverlays = this.tileOverlays.concat(t),
                    t
                },
                removeTileOverlay: function(e) {
                    return l.checkInstance(e, p, "[MapKit] Map.removeTileOverlay expected a TileOverlay, but got `" + e + "` instead."),
                    this.tileOverlays = this.tileOverlays.filter(function(t) {
                        return t !== e
                    }),
                    e
                },
                removeTileOverlays: function(t) {
                    return l.checkArray(t, "[MapKit] Map.removeTileOverlays expected an array, but got `" + t + "` instead."),
                    t.forEach(function(t) {
                        l.checkInstance(t, p, "[MapKit] Map.removeTileOverlays expected only TileOverlays, but got `" + t + "` instead."),
                        this.removeTileOverlay(t)
                    }, this),
                    t
                },
                handleEvent: function() {},
                cameraWillStartPanning: function() {
                    var t = this.node.delegate
                      , e = function() {
                        return !!t && "function" == typeof t.mapCanStartPanning && !t.mapCanStartPanning(this.node)
                    }
                    .bind(this);
                    this.cameraAnimation || e() ? this._panController.interrupt() : (t && "function" == typeof t.mapWillStartPanning && t.mapWillStartPanning(this.node),
                    this.refresh(),
                    this._cameraChangesMayHaveStarted(),
                    this._panning = !0,
                    this._cameraWillChange())
                },
                cameraWillStopPanning: function() {
                    var t = this.node.delegate;
                    t && "function" == typeof t.mapWillStopPanning && t.mapWillStopPanning(this.node)
                },
                cameraDidStopPanning: function() {
                    delete this._panning,
                    this._cameraDidChange(),
                    this._cameraChangesMayHaveEnded();
                    var t = this.node.delegate;
                    t && "function" == typeof t.mapDidStopPanning && t.mapDidStopPanning(this.node)
                },
                cameraAnimationDidProgress: function(t, e) {
                    this.setCameraAnimated(t, !1, null, e)
                },
                cameraAnimationDidEnd: function() {
                    var t = this.cameraAnimation
                      , e = (this.cameraAnimation = null,
                    !1);
                    t.zooming && !t.zoomIsAdditive && (this.cameraDidStopZooming(),
                    e = !0),
                    t.rotating && (this.cameraDidStopRotating(),
                    e = !0),
                    e || this._cameraDidChange(),
                    this._cameraChangesMayHaveEnded(),
                    this._suspendedZoom && (t = this._suspendedZoom,
                    delete this._suspendedZoom,
                    this._cameraWillStartZooming(this.node.delegate, "", t.animated),
                    t.complete) && (this.setZoomLevelAnimated(t.level, t.animated),
                    t.animated || this.cameraDidStopZooming()),
                    this._nextCameraZoomRange && (this.setCameraZoomRangeAnimated(this._nextCameraZoomRange, !1),
                    delete this._nextCameraZoomRange)
                },
                interactionDidStart: function() {
                    this._panController && this._panController.stopDecelerating(),
                    this._zoomController && this._zoomController.stopDecelerating(),
                    this._rotationController && this._rotationController.stopDecelerating()
                },
                beganRecognizingRotation: function() {
                    this._zoomController && (this._zoomController._singleTapWithTwoFingersRecognizer.enabled = !1),
                    this.isRotationLocked && (this.restrictedCamera = this.camera.copy(),
                    this.restrictIncomingRotation = !0)
                },
                finishedRecognizingRotation: function() {
                    this._zoomController && (this._zoomController._singleTapWithTwoFingersRecognizer.enabled = !0),
                    this.resetRestrictedCamera()
                },
                compassRotationWillStart: function() {
                    if (this.isRotationLocked)
                        return this.restrictedCamera = this.camera.copy(),
                        !(this.restrictIncomingRotation = !1)
                },
                compassRotationDidEnd: function() {
                    this.resetRestrictedCamera()
                },
                resetRestrictedCamera: function() {
                    this.restrictedCamera && (this.restrictedCamera.rotation = 0,
                    this.setCameraAnimated(this.restrictedCamera, !0),
                    delete this.restrictedCamera,
                    delete this.restrictIncomingRotation)
                },
                tileGridDidFinishRendering: function() {
                    var t = this.node.delegate;
                    t && "function" == typeof t.mapDidFinishRendering && t.mapDidFinishRendering(this.node)
                },
                updateMinAndMaxZoomLevelsWhenConfigurationChanges: function() {
                    this.minZoomLevel = 0,
                    this.maxZoomLevel = this.constructor.prototype.maxZoomLevel,
                    this._configuration.tileSources.forEach(function(t) {
                        this.minZoomLevel = Math.max(this.minZoomLevel, t.minZoomLevel),
                        this.maxZoomLevel = Math.min(this.maxZoomLevel, t.maxZoomLevel)
                    }, this),
                    this.minAndMaxZoomLevelsWereUpdated(),
                    this.currentMinZoomLevel = this.minZoomLevel,
                    this.currentMaxZoomLevel = this.maxZoomLevel
                },
                minAndMaxZoomLevelsWereUpdated: function() {},
                _updateMinAndMaxZoomLevels: function(t) {
                    if (t.width <= 0 || t.height <= 0)
                        return !1;
                    this._configuration && this.updateMinAndMaxZoomLevelsWhenConfigurationChanges(),
                    this.minZoomLevel = Math.max(this.minZoomLevel, this.minZoomLevelForViewportSize(t, a.tileSize)),
                    this.snapsToIntegralZoomLevels && (this.minZoomLevel = Math.ceil(this.minZoomLevel)),
                    this.currentMinZoomLevel = Math.max(this.currentMinZoomLevel, this.minZoomLevel),
                    this.adjustForSize(this.size)
                },
                _cameraChangesMayHaveStarted: function(t) {
                    var e;
                    this.cameraChangesHaveStarted || this._panning || this._zooming || this._rotating || this.cameraAnimation || (this.cameraChangesHaveStarted = !0,
                    (e = this.node.delegate) && "function" == typeof e.mapCameraChangesWillStart && e.mapCameraChangesWillStart(this.node, t))
                },
                _cameraWillChange: function(t) {
                    this._cameraChangesMayHaveStarted(t),
                    this._cameraWillChangeAnimated = !!t;
                    var e = this.node.delegate;
                    e && "function" == typeof e.mapCameraWillChange && e.mapCameraWillChange(this.node, !!t)
                },
                _cameraDidChange: function() {
                    var t = this.node.delegate;
                    t && "function" == typeof t.mapCameraDidChange && t.mapCameraDidChange(this.node, !!this._cameraWillChangeAnimated),
                    delete this._cameraWillChangeAnimated,
                    this._cameraChangesMayHaveEnded()
                },
                _cameraChangesMayHaveEnded: function(t) {
                    var e;
                    if (this.cameraChangesHaveStarted && !this._panning && !this._zooming && !this._rotating && !this.cameraAnimation)
                        return delete this.cameraChangesHaveStarted,
                        (e = this.node.delegate) && "function" == typeof e.mapCameraChangesDidEnd && e.mapCameraChangesDidEnd(this.node),
                        !0
                },
                isMapPointWithinBounds: function(t) {
                    var e;
                    return !this._cameraBoundaryRect || (e = this._constrainCenterWithinBounds(t),
                    t.x === e.x && t.y === e.y)
                },
                _constrainCenterWithinBounds: function(t) {
                    var e, i, n, o, s;
                    return 0 !== this.camera.viewportSize.width && 0 !== this.camera.viewportSize.height && (e = this.camera.center,
                    i = this.transformCenter,
                    n = e.x - i.x,
                    e = e.y - i.y,
                    n = (i = l.mod(this._cameraBoundaryRect.origin.x + n, 1)) + this._cameraBoundaryRect.size.width,
                    (o = l.mod(t.x, 1)) < i && (o += 1),
                    n < o && (o = (s = .5 < (s = o - i) ? 1 - s : s) < (s = .5 < (s = o - n) ? 1 - s : s) ? i : n),
                    s = l.clamp(t.y, this._cameraBoundaryRect.minY() + e, this._cameraBoundaryRect.maxY() + e),
                    o !== t.x || s !== t.y) ? new a.MapPoint(o,s) : t
                },
                _updateMinAndMaxZoomLevelsAtY: function(t) {
                    var e = this.minZoomLevel
                      , i = this.maxZoomLevel;
                    this._cameraZoomRange && (t = a.convertYToLatitude(t),
                    e = l.clamp(this._zoomLevelForCameraDistanceAtLatitude(this._cameraZoomRange.maxCameraDistance, t), e, i),
                    i = l.clamp(this._zoomLevelForCameraDistanceAtLatitude(this._cameraZoomRange.minCameraDistance, t), e, i),
                    this.snapsToIntegralZoomLevels) && (e = Math.ceil(e),
                    i = Math.floor(i)),
                    this.currentMinZoomLevel = e,
                    this.currentMaxZoomLevel = i
                },
                _updateZoom: function(t) {
                    this._updateMinAndMaxZoomLevelsAtY(this.camera.center.y);
                    var e = l.clamp(this.camera.zoom, this.currentMinZoomLevel, this.currentMaxZoomLevel);
                    e !== this.camera.zoom ? (t && (this._nextCameraZoomRange = this._cameraZoomRange,
                    delete this._cameraZoomRange),
                    this.setZoomLevelAnimated(e, t)) : (e = this.node.delegate) && "function" == typeof e.mapMinAndMaxZoomLevelsDidChange && e.mapMinAndMaxZoomLevelsDidChange(this.node)
                },
                _zoomLevelForCameraDistanceAtLatitude: function(t, e) {
                    t = g * t * 2 * a.mapUnitsPerMeterAtLatitude(e);
                    return l.log2(this.camera.viewportSize.width / t / a.tileSize)
                }
            },
            t.exports = f
        }
        ,
        3299: (t,e,i)=>{
            var n = i(462)
              , o = i(2221)
              , i = i(6426);
            function s() {
                n.GroupNode.call(this)
            }
            s.prototype = o.inheritPrototype(n.GroupNode, s, {
                delegate: null,
                deactivate: function() {
                    this._impl.deactivate()
                },
                destroy: function(t) {
                    this._impl.destroy(t)
                },
                get element() {
                    return this._impl.element
                },
                get camera() {
                    return this._impl.camera
                },
                get minZoomLevel() {
                    return this._impl.currentMinZoomLevel
                },
                get maxZoomLevel() {
                    return this._impl.currentMaxZoomLevel
                },
                get staysCenteredDuringZoom() {
                    return this._impl.staysCenteredDuringZoom
                },
                set staysCenteredDuringZoom(t) {
                    this._impl.staysCenteredDuringZoom = t
                },
                get configuration() {
                    return this._impl.configuration
                },
                set configuration(t) {
                    this._impl.configuration = t
                },
                get tint() {
                    return this._impl.tint
                },
                get emphasis() {
                    return this._impl.emphasis
                },
                get language() {
                    return this._impl.language
                },
                set language(t) {
                    this._impl.language = t
                },
                get allowWheelToZoom() {
                    return this._impl.allowWheelToZoom
                },
                set allowWheelToZoom(t) {
                    this._impl.allowWheelToZoom = t
                },
                get pointOfInterestFilter() {
                    return this._impl.pointOfInterestFilter
                },
                set pointOfInterestFilter(t) {
                    this._impl.pointOfInterestFilter = t
                },
                get backgroundGridTheme() {
                    return this._impl.backgroundGridTheme
                },
                set backgroundGridTheme(t) {
                    this._impl.backgroundGridTheme = t
                },
                get size() {
                    return this._impl.size
                },
                set size(t) {
                    this._impl.size = t
                },
                get rotation() {
                    return this._impl.rotation
                },
                set rotation(t) {
                    this._impl.rotation = t
                },
                getRotation: function() {
                    return this._impl.rotation
                },
                get isRotationEnabled() {
                    return this._impl.isRotationEnabled
                },
                set isRotationEnabled(t) {
                    this._impl.isRotationEnabled = t
                },
                get isRotationLocked() {
                    return this._impl.isRotationLocked
                },
                get cameraIsPanning() {
                    return this._impl.cameraIsPanning
                },
                get pannable() {
                    return this._impl.pannable
                },
                set pannable(t) {
                    this._impl.pannable = t
                },
                get cameraIsZooming() {
                    return this._impl.cameraIsZooming
                },
                get zoomable() {
                    return this._impl.zoomable
                },
                set zoomable(t) {
                    this._impl.zoomable = t
                },
                get cameraIsRotating() {
                    return this._impl.cameraIsRotating
                },
                get cameraIsAnimating() {
                    return !!this._impl.cameraAnimation
                },
                get zoomLevel() {
                    return this._impl.zoomLevel
                },
                set zoomLevel(t) {
                    this._impl.setZoomLevelAnimated(t)
                },
                setZoomLevelAnimated: function(t, e) {
                    this._impl.setZoomLevelAnimated(t, e)
                },
                setCameraDistanceAnimated: function(t, e) {
                    this._impl.setCameraDistanceAnimated(t, e)
                },
                getCurrentCameraDistance: function() {
                    return this._impl.getCurrentCameraDistance()
                },
                get cameraZoomRange() {
                    return this._impl.cameraZoomRange
                },
                setCameraZoomRangeAnimated: function(t, e) {
                    this._impl.setCameraZoomRangeAnimated(t, e)
                },
                zoomLevelForCameraDistanceAtY: function(t, e) {
                    return this._impl.zoomLevelForCameraDistanceAtY(t, e)
                },
                get visibleMapRect() {
                    return this._impl.visibleMapRect
                },
                set visibleMapRect(t) {
                    this._impl.setVisibleMapRectAnimated(t)
                },
                setVisibleMapRectAnimated: function(t, e) {
                    this._impl.setVisibleMapRectAnimated(t, e)
                },
                setCenterAnimated: function(t, e) {
                    this._impl.setCenterAnimated(t, e)
                },
                setCameraBoundaryAnimated: function(t, e) {
                    this._impl.setCameraBoundaryAnimated(t, e)
                },
                isMapPointWithinBounds: function(t) {
                    return this._impl.isMapPointWithinBounds(t)
                },
                get showsDefaultTiles() {
                    return this._impl.showsDefaultTiles
                },
                set showsDefaultTiles(t) {
                    this._impl.showsDefaultTiles = t
                },
                get tileOverlays() {
                    return this._impl.tileOverlays
                },
                set tileOverlays(t) {
                    this._impl.tileOverlays = t
                },
                addTileOverlay: function(t) {
                    return this._impl.addTileOverlay(t)
                },
                addTileOverlays: function(t) {
                    return this._impl.addTileOverlays(t)
                },
                removeTileOverlay: function(t) {
                    return this._impl.removeTileOverlay(t)
                },
                removeTileOverlays: function(t) {
                    return this._impl.removeTileOverlays(t)
                },
                adjustMapItemPoint: function(t) {
                    return this._impl.adjustMapItemPoint(t)
                },
                cameraWillStartZooming: function(t, e, i) {
                    return this._impl.cameraWillStartZooming(t, e, i)
                },
                cameraDidStopZooming: function() {
                    this._impl.cameraDidStopZooming()
                },
                get fullyRendered() {
                    return this._impl.fullyRendered
                },
                devicePixelRatioDidChange: function() {
                    return this._impl.devicePixelRatioDidChange()
                },
                stringInfo: function() {
                    return this._impl.stringInfo()
                },
                get snapsToIntegralZoomLevels() {
                    return this._impl.snapsToIntegralZoomLevels
                },
                set snapsToIntegralZoomLevels(t) {
                    this._impl.snapsToIntegralZoomLevels = t
                },
                migrateStateTo: function(t) {
                    return this._impl.migrateStateTo(t)
                },
                needsReplacing: function(t) {
                    return this._impl.needsReplacing(t)
                },
                createLabelRegion: function() {
                    return this._impl.createLabelRegion()
                },
                updatedLabelRegion: function() {
                    this._impl.updatedLabelRegion()
                },
                unregisterLabelRegion: function(t) {
                    this._impl.unregisterLabelRegion(t)
                },
                setCameraAnimated: function(t, e, i) {
                    this._impl.setCameraAnimated(t, e, i)
                },
                setTintAndEmphasis: function(t, e, i) {
                    this._impl.setTintAndEmphasis(t, e, i)
                },
                compassRotationWillStart: function() {
                    return this._impl.compassRotationWillStart()
                },
                compassRotationDidEnd: function() {
                    this._impl.compassRotationDidEnd()
                }
            }),
            i.EventTarget(s.prototype),
            t.exports = s
        }
        ,
        1369: (t,e,i)=>{
            var n = i(6376)
              , c = i(5479)
              , o = i(5097);
            function s(t, e, i, n) {
                this.map = t,
                this._startCamera = e,
                this._endCamera = i,
                this._duration = 250,
                this._rotationCenter = n,
                t.snapsToIntegralZoomLevels && (i.zoom = Math.round(i.zoom)),
                this._updateAnimationRects(),
                this._startTime = Date.now(),
                this._schedule()
            }
            s.prototype = {
                constructor: s,
                cancel: function() {
                    this._canceled = !0
                },
                get zooming() {
                    return this._startCamera.zoom !== this._endCamera.zoom
                },
                set additiveZoom(t) {
                    this._zoomIsAdditive = !0,
                    this._endCamera.zoom = t,
                    this._updateAnimationRects()
                },
                get zoomIsAdditive() {
                    return this._zoomIsAdditive
                },
                get rotating() {
                    return this._startCamera.rotation !== this._endCamera.rotation
                },
                adjustRotation: function(t, e) {
                    this._startCamera.rotateAroundCenter(t, e),
                    this._endCamera.rotateAroundCenter(t, e),
                    this._updateAnimationRects()
                },
                unconstrained: !1,
                updateViewportSize: function(t) {
                    this._startCamera = new n(this._startCamera.center,this._startCamera.zoom,t,this._startCamera.rotation),
                    this._endCamera = new n(this._endCamera.center,this._endCamera.zoom,t,this._endCamera.rotation),
                    this._updateAnimationRects()
                },
                performScheduledUpdate: function() {
                    this._canceled || this._animationDidProgress(Math.min((Date.now() - this._startTime) / this._duration, 1))
                },
                _zoomIsAdditive: !1,
                _updateAnimationRects: function() {
                    var t;
                    this._rotationDelta = this._endCamera.rotation - this._startCamera.rotation,
                    180 < Math.abs(this._rotationDelta) && (this._rotationDelta = this._endCamera.rotation + 360 - this._startCamera.rotation),
                    this._rotationCenter || (this._startRect = this._startCamera.toMapRect(),
                    this._animatedEndRect = this._endCamera.toMapRect(),
                    t = this._startCamera.center.x - this._endCamera.center.x,
                    .5 < Math.abs(t) && (t < 0 ? this._startRect.origin.x += 1 : this._animatedEndRect.origin.x += 1))
                },
                _schedule: function() {
                    o.scheduleOnNextFrame(this)
                },
                _animationDidProgress: function(t) {
                    1 === t ? (this.map.snapsToIntegralZoomLevels && (this._endCamera.zoom = Math.round(this._endCamera.zoom)),
                    this.map.cameraAnimationDidProgress(this._endCamera),
                    this.map.cameraAnimationDidEnd()) : (this._rotationCenter ? this._animateAroundCenter(t) : this._animateRects(t),
                    this._schedule())
                },
                _animateAroundCenter: function(t) {
                    var e = this._startCamera.copy();
                    e.rotateAroundCenter(this._rotationCenter, t * this._rotationDelta),
                    this.map.cameraAnimationDidProgress(e)
                },
                _animateRects: function(t) {
                    var e = this._startRect
                      , i = this._animatedEndRect
                      , n = e.origin.x
                      , o = e.origin.y
                      , s = e.size.width
                      , a = e.size.height
                      , r = i.origin.x - e.origin.x
                      , l = i.origin.y - e.origin.y
                      , h = i.size.width - e.size.width
                      , i = i.size.height - e.size.height
                      , e = this._endCamera.rotation - this._startCamera.rotation
                      , e = (180 < Math.abs(e) && (this._endCamera.rotation,
                    this._startCamera.rotation),
                    new c.MapRect(n + r * t,o + l * t,s + h * t,a + i * t))
                      , n = this._startCamera.withNewMapRect(e);
                    this.map.cameraAnimationDidProgress(n, this.unconstrained),
                    this.map.rotation = this._startCamera.rotation + this._rotationDelta * t
                }
            },
            t.exports = s
        }
        ,
        6376: (t,e,i)=>{
            var c = i(5479)
              , o = i(3045)
              , n = i(2221)
              , d = i(8756)
              , u = i(5348);
            function s(t, e, i, n) {
                this.center = t || new c.MapPoint(.5,.5),
                this.zoom = e || 3,
                this.viewportSize = i || new o,
                this.rotation = n || 0
            }
            s.prototype = {
                constructor: s,
                get zoom() {
                    return this._zoom
                },
                set zoom(t) {
                    this._zoom !== t && (this._zoom = t || 3,
                    this._pointsPerAxis = c.pointsPerAxis(this._zoom))
                },
                get worldSize() {
                    return this._pointsPerAxis
                },
                get rotation() {
                    return this._rotation
                },
                set rotation(t) {
                    t = n.mod(t, 360);
                    this._rotation = t
                },
                minX: function() {
                    var t = this.viewportSize.width / this._pointsPerAxis;
                    return this.center.x - t / 2
                },
                minY: function() {
                    var t = this.viewportSize.height / this._pointsPerAxis;
                    return this.center.y - t / 2
                },
                maxX: function() {
                    var t = this.viewportSize.width / this._pointsPerAxis;
                    return this.center.x + t / 2
                },
                maxY: function() {
                    var t = this.viewportSize.height / this._pointsPerAxis;
                    return this.center.y + t / 2
                },
                equals: function(t) {
                    return this.zoom === t.zoom && this.center.equals(t.center) && this.viewportSize.equals(t.viewportSize) && this.rotation === t.rotation
                },
                copy: function() {
                    return new s(this.center,this.zoom,this.viewportSize,this.rotation)
                },
                toString: function() {
                    return "Camera(" + ["center: [" + this.center.x + ", " + this.center.y + "]", "zoom: " + this.zoom, "viewportSize: " + this.viewportSize.toString(), "rotation: " + this.rotation].join(", ") + ")"
                },
                toMapRect: function() {
                    var t = this.viewportSize.width / this._pointsPerAxis
                      , e = this.viewportSize.height / this._pointsPerAxis
                      , i = Object.create(c.MapPoint.prototype)
                      , n = (i.x = this.center.x - t / 2,
                    i.y = this.center.y - e / 2,
                    Object.create(c.MapSize.prototype))
                      , t = (n.width = t,
                    n.height = e,
                    Object.create(c.MapRect.prototype));
                    return t.origin = i,
                    t.size = n,
                    t
                },
                toRenderingMapRect: function() {
                    var e, t = [new d(this.minX(),this.minY()), new d(this.maxX(),this.minY()), new d(this.maxX(),this.maxY()), new d(this.minX(),this.maxY())];
                    0 !== this.rotation && (e = (new u).rotate(this.rotation),
                    t = t.map(function(t) {
                        return e.transformPoint(t)
                    }));
                    for (var i = t[0].x, n = t[0].y, o = t[0].x, s = t[0].y, a = 1; a < t.length; ++a) {
                        var r = t[a];
                        r.x < i && (i = r.x),
                        r.x > o && (o = r.x),
                        r.y < n && (n = r.y),
                        r.y > s && (s = r.y)
                    }
                    var l = o - i
                      , h = s - n;
                    return new c.MapRect(this.center.x - l / 2,this.center.y - h / 2,l,h)
                },
                translate: function(t) {
                    0 !== this.rotation && (t = (new u).rotate(-this.rotation).transformPoint(t));
                    var e = Math.round(t.x) / this._pointsPerAxis
                      , t = Math.round(t.y) / this._pointsPerAxis
                      , i = Object.create(c.MapPoint.prototype)
                      , e = (i.x = n.mod(this.center.x - e, 1),
                    i.y = n.mod(this.center.y - t, 1),
                    Object.create(s.prototype));
                    return e.center = i,
                    e._zoom = this._zoom,
                    e._pointsPerAxis = this._pointsPerAxis,
                    e.viewportSize = this.viewportSize,
                    e._rotation = this._rotation,
                    e
                },
                transformMapPoint: function(t) {
                    var e = this.viewportSize.width
                      , i = this.viewportSize.height
                      , t = this.toScreenSpace(t);
                    return (new u).translate(e / 2, i / 2).rotate(this.rotation).translate(e / -2, i / -2).transformPoint(t)
                },
                transformGestureCenter: function(t) {
                    var e, i;
                    return 0 === this.rotation ? t : (e = this.viewportSize.width,
                    i = this.viewportSize.height,
                    (new u).translate(e / 2, i / 2).rotate(-this.rotation).translate(-e / 2, -i / 2).transformPoint(t))
                },
                toScreenSpace: function(t) {
                    var e = this._pointsPerAxis;
                    return (new u).translate(-this.minX() * e, -this.minY() * e).scale(e).transformPoint(t)
                },
                rotateAroundCenter: function(t, e) {
                    t = (new u).translate(t.x, t.y).rotate(-e).translate(-t.x, -t.y).transformPoint(new d(this.center.x,this.center.y));
                    this.center = new c.MapPoint(t.x,t.y),
                    this.rotation += e
                },
                withNewMapRect: function(t, e, i) {
                    i = i || this.viewportSize;
                    var n = c.zoomLevelForMapRectInViewport(t, i, c.tileSize);
                    return new s(new c.MapPoint(t.midX(),t.midY()),e ? Math.floor(n) : n,i,this.rotation)
                }
            },
            t.exports = s
        }
        ,
        764: t=>{
            t.exports = {
                Tints: {
                    Dark: "dark",
                    Light: "light"
                },
                FallbackType: {
                    SPILE: "TEST_FAILURE",
                    FETCH: "TEST_FETCH_FAILURE",
                    CACHE: "TEST_CACHE_FALLBACK",
                    WEBGL: "TEST_WEBGL_FALLBACK",
                    FEATURE: "BOOTSTRAP_FEATURE_FAILURE",
                    SUFFICIENT: "BOOTSTRAP_FEATURE_SUFFICIENT",
                    RENDER: "SYRUP_RENDER_FAILURE",
                    INIT: "SYRUP_INIT_FAILURE",
                    CONFIG_CHANGE: "CONFIGURATION_CHANGE_FALLBACK",
                    CONFIG_MISSING: "CONFIGURATION_MISSING_FALLBACK"
                },
                WheelEventTimeout: 100,
                WheelZoomFactor: .0075
            }
        }
        ,
        2394: (t,e,i)=>{
            var n = i(462)
              , o = i(2221)
              , s = i(6794);
            function a(t) {
                n.BaseNode.call(this),
                this._tile = t,
                this._renderer = new s(this)
            }
            a.prototype = o.inheritPrototype(n.BaseNode, a, {
                get tile() {
                    return this._tile
                },
                stringInfo: function() {
                    return "DebugNode<x:" + this.tile.x + ",y:" + this.tile.y + ",z:" + this.tile.z + ">"
                }
            }),
            t.exports = a
        }
        ,
        80: (t,e,i)=>{
            var n = i(4701);
            function o(t) {
                this._map = t,
                this._recognizers = []
            }
            o.prototype = {
                constructor: o,
                get map() {
                    return this._map
                },
                canTrustGestureCenter: function(t) {
                    return 1 === t.numberOfTouchesRequired || !(n.supportsGestureEvents && !n.supportsTouches && n.insideIframe)
                },
                addRecognizer: function(t) {
                    return this._recognizers.push(t),
                    t.target = this.map.node.element,
                    t.addEventListener("statechange", this),
                    t
                },
                interrupt: function() {
                    this._recognizers.forEach(function(t) {
                        t.enabled = !1,
                        t.enabled = !0
                    })
                },
                centerForGesture: function(t) {
                    var e = this.map;
                    return e.staysCenteredDuringZoom || !this.canTrustGestureCenter(t) ? e.transformCenter : this._centerWithRecognizer(t)
                },
                destroy: function() {
                    for (; this._recognizers.length; ) {
                        var t = this._recognizers.pop();
                        t.enabled = !1,
                        t.target = null,
                        t.removeEventListener("statechange", this)
                    }
                }
            },
            t.exports = o
        }
        ,
        5814: (t,e,i)=>{
            var n = i(5323);
            function o(t, e) {
                this._map = t,
                n.SupportsPointerEvents ? (this._startEventType = "pointerdown",
                this._touchCount = 0) : n.SupportsTouches ? this._startEventType = "touchstart" : this._startEventType = "mousedown",
                this._map.element.addEventListener(this._startEventType, this),
                n.SupportsPointerEvents && (window.addEventListener("pointerup", this),
                window.addEventListener("pointercancel", this))
            }
            o.prototype = {
                constructor: o,
                handleEvent: function(t) {
                    "pointerup" !== t.type && "pointercancel" !== t.type ? ("pointerdown" === t.type && this._touchCount++,
                    ("mousedown" === t.type || "touchstart" === t.type && t.touches.length === t.changedTouches.length || "pointerdown" === t.type && 1 === this._touchCount) && this._map.interactionDidStart()) : this._touchCount--
                },
                destroy: function() {
                    this._map.element.removeEventListener(this._startEventType, this),
                    window.removeEventListener("pointerup", this),
                    window.removeEventListener("pointercancel", this)
                }
            },
            t.exports = o
        }
        ,
        6234: (t,e,i)=>{
            var n = i(1840)
              , o = i(5097)
              , s = i(2221)
              , a = i(764)
              , r = s.log2(1.03) / (1e3 / 60)
              , l = s.log2(.97) / (1e3 / 60)
              , h = s.log2(1.06) / (1e3 / 60)
              , c = s.log2(.94) / (1e3 / 60)
              , d = s.log2(1 + a.WheelZoomFactor)
              , u = s.log2(1 - a.WheelZoomFactor);
            function p(t) {
                this.map = t,
                this._previousZoomLevelDelta = []
            }
            p.prototype = {
                constructor: p,
                _animating: !1,
                zoomToScale: function(t, e) {
                    var i = Date.now()
                      , t = (this._lastUpdateTime = i,
                    s.log2(t));
                    this.zoomsIn = 0 < t,
                    this._lastScaleCenter = e,
                    this._previousZoomLevelDelta.push({
                        delta: t,
                        timestamp: i
                    }),
                    this._animating ? this._accumulatedDesiredZoomLevelDelta += t : (this._cleanupPreviousZoomLevelDelta(),
                    u <= t && t <= d && this._previousZoomLevelDelta.length <= 1 || (this._animating = !0,
                    this._accumulatedZoomLevelDelta = 0,
                    this._accumulatedDesiredZoomLevelDelta = t,
                    this._timeAtLastFrame = i,
                    this._animationEndingTimeoutId ? (clearTimeout(this._animationEndingTimeoutId),
                    this._animationEndingTimeoutId = void 0) : this.map.cameraWillStartZooming(n.ZoomTypes.Scroll),
                    o.scheduleOnNextFrame(this)))
                },
                destroy: function() {
                    this.map = null,
                    this._animationEndingTimeoutId && clearTimeout(this._animationEndingTimeoutId)
                },
                performScheduledUpdate: function() {
                    var t, e, i;
                    this.map && (e = Date.now(),
                    i = this.zoomsIn ? Math.ceil(this._accumulatedDesiredZoomLevelDelta) : Math.floor(this._accumulatedDesiredZoomLevelDelta),
                    t = e - this._timeAtLastFrame,
                    t = this._getEstimatedSpeedPerMS() * t,
                    this._accumulatedZoomLevelDelta += t,
                    this._timeAtLastFrame = e,
                    this.zoomsIn && this._accumulatedZoomLevelDelta < i || !this.zoomsIn && this._accumulatedZoomLevelDelta > i ? (this.map.scaleCameraAroundMapPoint(Math.pow(2, t), this._lastScaleCenter),
                    o.scheduleOnNextFrame(this)) : (e = this.map.zoomLevel,
                    i = Math.round(this.map.zoomLevel),
                    this.map.scaleCameraAroundMapPoint(Math.pow(2, i - e), this._lastScaleCenter),
                    this._animating = !1,
                    this._previousEstimatedSpeedPerMS = void 0,
                    this._animationEndingTimeoutId = setTimeout(function() {
                        this._animationEndingTimeoutId = void 0,
                        this.map.cameraDidStopZooming()
                    }
                    .bind(this), a.WheelEventTimeout)))
                },
                _cleanupPreviousZoomLevelDelta: function() {
                    for (var t = Date.now() - 100, e = this.zoomsIn ? 1 : -1, i = 0; i < this._previousZoomLevelDelta.length; i++)
                        (this._previousZoomLevelDelta[i].timestamp < t || this._previousZoomLevelDelta[i].delta * e < 0) && this._previousZoomLevelDelta.splice(i, 1)
                },
                _getEstimatedSpeedPerMS: function() {
                    var t;
                    return this._cleanupPreviousZoomLevelDelta(),
                    this._previousZoomLevelDelta.length <= 1 ? this._previousEstimatedSpeedPerMS || (this.zoomsIn ? h : c) : (t = this._previousZoomLevelDelta.reduce(function(t, e) {
                        return t + e.delta
                    }, 0) / 100,
                    l < t && t < r && (t = this.zoomsIn ? r : l),
                    this._previousEstimatedSpeedPerMS = t)
                }
            },
            t.exports = p
        }
        ,
        5534: (t,e,i)=>{
            var n = i(5323)
              , o = i(8756)
              , s = i(5097)
              , a = i(80)
              , i = i(2221);
            function r(t) {
                a.call(this, t),
                this.addRecognizer(new n.Pan).maximumNumberOfTouches = 2
            }
            r.prototype = i.inheritPrototype(a, r, {
                decelerating: !1,
                stopDecelerating: function() {
                    this.decelerating && this._decelerationEnded()
                },
                destroy: function() {
                    a.prototype.destroy.call(this),
                    this.stopDecelerating()
                },
                handleEvent: function(t) {
                    var t = t.target
                      , e = this.map;
                    e.staysCenteredDuringZoom && e.cameraIsZooming || (t.state === n.States.Began ? e.cameraWillStartPanning() : t.state !== n.States.Ended && t.state !== n.States.Changed || (this._panMapCameraBy(t.translation),
                    t.translation = new o),
                    t.state === n.States.Ended && (this._startDeceleratingWithVelocity(t.velocity),
                    this.decelerating || e.cameraDidStopPanning()))
                },
                performScheduledUpdate: function() {
                    var t, e, i;
                    this.decelerating && (e = (t = Date.now()) - this._timeAtPreviousFrame,
                    e = Math.exp(Math.log(.995) * e),
                    this._panMapCameraBy(new o(this._velocity.x / 1e3 * (i = (1 - e) / .0050000000000000044 * .995),this._velocity.y / 1e3 * i)),
                    this._velocity.x *= e,
                    this._velocity.y *= e,
                    Math.abs(this._velocity.x) <= 10 && Math.abs(this._velocity.y) <= 10 ? this._decelerationEnded() : (this._timeAtPreviousFrame = t,
                    this._schedule()))
                },
                _panMapCameraBy: function(t) {
                    var e = this.map;
                    e.setCameraAnimated(e.camera.translate(t)),
                    window.animateOverlay(!0)
                },
                _startDeceleratingWithVelocity: function(t) {
                    this._velocity = t,
                    this.map.cameraWillStopPanning(),
                    Math.pow(t.x, 2) + Math.pow(t.y, 2) < 62500 || (this.decelerating = !0,
                    this._timeAtPreviousFrame = Date.now(),
                    this._schedule())
                },
                _schedule: function() {
                    s.scheduleOnNextFrame(this)
                },
                _decelerationEnded: function() {
                    this.decelerating = !1,
                    this.map.cameraDidStopPanning()
                }
            }),
            t.exports = r
        }
        ,
        4030: (t,e,i)=>{
            var d = i(462)
              , u = i(5479)
              , p = i(2221)
              , m = Math.log(10) / Math.log(2);
            function n(t) {
                d.RenderItem.call(this, t)
            }
            function _(t, e, i, n, o, s) {
                i = p.mod(i, e),
                n = p.mod(n, e),
                o = Math.ceil(o),
                s = Math.ceil(s);
                for (var a = Math.ceil(o / e), r = Math.ceil(s / e), l = 0; l < a; ++l)
                    t.fillRect(i + l * e, 0, 1, s);
                for (l = 0; l < r; ++l)
                    t.fillRect(0, n + l * e, o, 1)
            }
            function g(t) {
                return "rgb(" + t.join(",") + ")"
            }
            function f(t, e, i) {
                return Math.round(e * i + t * (1 - i))
            }
            n.prototype = p.inheritPrototype(d.RenderItem, n, {
                draw: function(t, e) {
                    var i, n, o = this.node, s = o.zoom, a = 100 * Math.pow(2, s % m), r = a / 10, l = Math.min(r, 100), l = r < 10 ? 0 : (l - 10) / 90, h = o.origin, s = u.pointsPerAxis(s), h = new d.Point(-h.x * s,-h.y * s), s = p.mod(h.x, a) - a, h = p.mod(h.y, a) - a, c = this.node.theme;
                    t.fillStyle = g(c.fillColor),
                    t.fillRect(0, 0, o.size.width, o.size.height),
                    o.initialRendering || (0 < (l = 1 - Math.pow(1 - l, 2)) && (t.fillStyle = g((i = c.fillColor,
                    n = c.lineColor,
                    0 == (l = l) ? i : 1 == l ? n : [f(i[0], n[0], l), f(i[1], n[1], l), f(i[2], n[2], l)])),
                    _(t, r, s, h, o.size.width, o.size.height)),
                    t.fillStyle = g(c.lineColor),
                    _(t, a, s, h, o.size.width, o.size.height))
                }
            }),
            t.exports = n
        }
        ,
        6794: (t,e,i)=>{
            var n = i(462)
              , i = i(2221);
            function o(t) {
                n.RenderItem.call(this, t)
            }
            o.prototype = i.inheritPrototype(n.RenderItem, o, {
                draw: function(i) {
                    var n, o = this._node.size.width, t = "standard" === this._node.tile.settings.configuration.name, e = (i.fillStyle = t ? "rgba(0, 0, 0, 0.5)" : "rgba(255, 255, 255, 0.75)",
                    i.fillRect(0, 0, o, 1),
                    i.fillRect(0, 1, 1, o - 1),
                    ["x", "y", "z"].map(function(t) {
                        return t + " = " + this._node.tile[t]
                    }, this)), s = (i.font = "12px -apple-system-font",
                    i.beginPath(),
                    i.moveTo(1, 1),
                    1);
                    e.forEach(function(t, e) {
                        t = i.measureText(t).width;
                        n = 1 + t + 16,
                        i.lineTo(n, s),
                        s += 20,
                        0 === e && (s += 8),
                        i.lineTo(n, s)
                    }),
                    i.lineTo(1, s),
                    i.closePath(),
                    i.fill(),
                    i.fillStyle = t ? "white" : "black",
                    i.textBaseline = "hanging",
                    e.forEach(function(t, e) {
                        i.fillText(t, 9, 9 + 20 * e, o)
                    })
                }
            }),
            t.exports = o
        }
        ,
        4464: (t,e,i)=>{
            var n = i(764).FallbackType
              , o = i(4701);
            function s(t) {
                this.node = t,
                this._state = 0,
                this._unregisteredLabelRegions = []
            }
            var a = "mapkit-re-bootstrap-notification"
              , r = "mapkit-csr-fallback-notification"
              , l = "mapkit-zoom-support-notification";
            s.prototype = {
                constructor: s,
                init: function(t, e, i, n, o, s) {
                    this._state = 1,
                    this.Camera = i,
                    this.Camera.hasRotationLock = !0,
                    this._initialDisplayOptions = o,
                    this.initRenderer(e, t, n).then(this.syrupInitHandler.bind(this, s)).catch(this.syrupInitErrorHandler.bind(this, s))
                },
                initRenderer: function(t, e, i) {
                    t = this._syrupRenderer = new t({
                        startInLoCSR: i
                    });
                    return t.on("invalid-access-key", function() {
                        e.accessKeyHasExpired()
                    }, a),
                    t.on("fallback", function() {
                        e.syrupRequestedFallback(n.RENDER)
                    }, r),
                    t.on("zoom-support-did-change", function() {
                        this.node.didReconfigure()
                    }
                    .bind(this), l),
                    t.init(e)
                },
                syrupInitErrorHandler: function(t) {
                    4 === this._state ? (this._state = 0,
                    this.destroy()) : t(!(this._state = 0))
                },
                syrupInitHandler: function(t) {
                    var e;
                    4 === this._state ? (this._state = 3,
                    this.destroy()) : (this._state = 2,
                    (e = this._syrupRenderer).setDeterministicCollisions(!0),
                    e.setLanguage(this.node.language),
                    e.setDeterministicCollisions(!1),
                    e.setPixelRatio(o.devicePixelRatio),
                    this._canvas = e.element(),
                    this.updateConfiguration(this.node.configuration, this._initialDisplayOptions),
                    this._initialDisplayOptions = null,
                    this.performScheduledDraw(),
                    this._unregisteredLabelRegions.forEach(function(t) {
                        e.registerLabelRegion(t)
                    }),
                    delete this._unregisteredLabelRegions,
                    t())
                },
                deactivate: function() {
                    1 !== this._state ? 4 !== this._state && (this._state = 3) : this._state = 4
                },
                destroy: function() {
                    1 !== this._state ? 4 !== this._state && 5 !== this._state && (this._state = 5,
                    this._syrupRenderer) && (this._syrupRenderer.off("invalid-access-key", null, a),
                    this._syrupRenderer.off("fallback", null, r),
                    this._syrupRenderer.off("zoom-support-did-change", null, l),
                    "function" == typeof this._syrupRenderer.destroy && this._syrupRenderer.destroy(),
                    this._syrupRenderer = null) : this._state = 4
                },
                get snapsToIntegralZoomLevels() {
                    return !!this._syrupRenderer && !this._syrupRenderer.supportsNonIntegralZoomLevels()
                },
                getMapFeatureRegions: function() {
                    return this._syrupRenderer && this._syrupRenderer.getMapFeatureRegions ? this._syrupRenderer.getMapFeatureRegions() : []
                },
                performScheduledDraw: function() {
                    var t, e, i, n;
                    2 === this._state && (t = [this.node.size.width, this.node.size.height],
                    e = new this.Camera(t[0] / t[1]),
                    i = this.node.zoomLevel,
                    n = [this.node.camera.center.x, 1 - this.node.camera.center.y, 0],
                    e.setTarget(n),
                    e.setZoomLevel(i),
                    this._syrupRenderer.update(e, t),
                    5 !== this._state) && (this._syrupRenderer.mapFullyRendered() ? this.node._impl.tileGridDidFinishRendering() : this.node.needsDisplay = !0)
                },
                forceRerender: function() {
                    2 === this._state && this._syrupRenderer.forceRerender()
                },
                devicePixelRatioDidChange: function() {
                    this._syrupRenderer && this._syrupRenderer.setPixelRatio(o.devicePixelRatio)
                },
                frozen: !1,
                get element() {
                    return this.canvas
                },
                get canvas() {
                    return this._canvas
                },
                get fullyRendered() {
                    return this._syrupRenderer && this._syrupRenderer.mapFullyRendered()
                },
                set language(t) {
                    this._syrupRenderer && this._syrupRenderer.setLanguage(t)
                },
                updateNetworkConfiguration: function(t) {
                    this._syrupRenderer && this._syrupRenderer.updateNetworkConfiguration(t)
                },
                updateConfiguration: function(t, e) {
                    this._syrupRenderer && (e.mode = t.name,
                    this._syrupRenderer.setDisplayOptions(e))
                },
                updatePointOfInterestFilter: function(t, e) {
                    this.updateConfiguration(t, {
                        poiFilter: e
                    })
                },
                createLabelRegion: function() {
                    var t;
                    if (this._syrupRenderer)
                        return t = this._syrupRenderer.createLabelRegion(),
                        this._unregisteredLabelRegions ? this._unregisteredLabelRegions.push(t) : this._syrupRenderer.registerLabelRegion(t),
                        t
                },
                unregisterLabelRegion: function(t) {
                    this._unregisteredLabelRegions ? this._unregisteredLabelRegions.splice(this._unregisteredLabelRegions.indexOf(t), 1) : this._syrupRenderer && this._syrupRenderer.unregisterLabelRegion(t)
                }
            },
            Math.PI;
            t.exports = s
        }
        ,
        3747: (t,e,i)=>{
            var n = i(5479)
              , o = i(5323)
              , s = i(5097)
              , a = i(2221)
              , r = i(80)
              , i = 180 / Math.PI
              , l = 3 * i
              , h = 1e-4 * i * 1e3;
            function c(t) {
                r.call(this, t),
                this._recognizer = this.addRecognizer(new o.Rotation)
            }
            c.prototype = a.inheritPrototype(r, c, {
                decelerating: !1,
                stopDecelerating: function() {
                    this.decelerating && this._decelerationEnded()
                },
                destroy: function() {
                    r.prototype.destroy.call(this),
                    this.stopDecelerating(),
                    delete this._recognizer
                },
                handleEvent: function(t) {
                    var e = t.target;
                    e === this._recognizer && (e.state === o.States.Began && (this.map.beganRecognizingRotation(),
                    this.map.cameraWillStartRotating()),
                    e.state === o.States.Ended && (delete this._restricted,
                    this.map.finishedRecognizingRotation(),
                    this._startDeceleratingWithVelocity(e.velocity)),
                    this._handleRotationChange(t.target))
                },
                _handleRotationChange: function(t) {
                    this._lastRotationCenter = this.centerForGesture(t),
                    this.map.cameraIsRotating && t.state === o.States.Changed && (this.map.rotateCameraAroundMapPoint(this._lastRotationCenter, t.rotation),
                    t.rotation = 0)
                },
                _centerWithRecognizer: function(t) {
                    var e = this.map
                      , t = t.locationInElement()
                      , t = this.map.node.convertPointFromPage(t)
                      , t = e.camera.transformGestureCenter(t)
                      , i = e.visibleMapRect
                      , e = e.camera.viewportSize;
                    return new n.MapPoint(i.minX() + t.x / e.width * i.size.width,i.minY() + t.y / e.height * i.size.height)
                },
                performScheduledUpdate: function() {
                    var t, e, i;
                    this.decelerating && (e = (t = Date.now()) - this._timeAtPreviousFrame,
                    i = .995 * (this._velocity / 1e3) * ((e = Math.pow(.995, e)) - 1) / -.0050000000000000044,
                    this.map.cameraAnimation ? this.map.cameraAnimation.adjustRotation(this._lastRotationCenter, i) : this.map.rotateCameraAroundMapPoint(this._lastRotationCenter, i),
                    this._velocity *= e,
                    Math.abs(this._velocity) <= h ? this._decelerationEnded() : (this._timeAtPreviousFrame = t,
                    this._schedule()))
                },
                _startDeceleratingWithVelocity: function(t) {
                    1440 < Math.abs(t) || isNaN(t) ? this.map.cameraDidStopRotating() : Math.abs(t) < l ? (this.decelerating = !1,
                    this.map.cameraDidStopRotating()) : (this._velocity = t,
                    this.decelerating = !0,
                    this._timeAtPreviousFrame = Date.now(),
                    this._schedule())
                },
                _schedule: function() {
                    s.scheduleOnNextFrame(this)
                },
                _decelerationEnded: function() {
                    this.decelerating = !1,
                    this.map.cameraDidStopRotating()
                }
            }),
            t.exports = c
        }
        ,
        3770: (t,e,i)=>{
            var n = i(2764)
              , o = i(3307)
              , s = i(3121)
              , a = i(2221);
            function r(t) {
                n.call(this, t),
                this._backgroundGrid = this.node.addChild(new o),
                this._tileGridsGroup = this.node.addChild(new s(this)),
                this._labels = !0,
                this.rotation = 0,
                this._backgroundGrid.initialRendering = !0,
                this._tileGridsGroup.opacity = 0,
                setTimeout(function() {
                    this._backgroundGrid.initialRendering = !1,
                    this._tileGridsGroup.opacity = 1
                }
                .bind(this), 0)
            }
            r.prototype = a.inheritPrototype(n, r, {
                stringInfo: function() {
                    return "MapNode<camera:" + this.camera.toString() + ">"
                },
                get tileSettings() {
                    return {
                        configuration: this._configuration,
                        tint: this._tileTint,
                        emphasis: this._emphasis,
                        language: this._language,
                        showsPOI: this._showsPOI(),
                        showsLabels: this._labels,
                        showsDefaultTiles: this._showsDefaultTiles,
                        showsTileInfo: this._debug,
                        tileOverlays: this._tileOverlays
                    }
                },
                get fullyRendered() {
                    return this._tileGridsGroup.fullyRendered
                },
                get cssBackgroundProperty() {
                    return this._tileGridsGroup.cssBackgroundProperty
                },
                get labels() {
                    return this._labels
                },
                set labels(t) {
                    this._labels = !!t,
                    this.refresh()
                },
                destroy: function(t) {
                    n.prototype.destroy.call(this, t),
                    this._tileGridsGroup.destroy()
                },
                updateTintAndEmphasis: function(t, e) {
                    this._backgroundGrid.updateThemeFromTint(t),
                    this.refresh()
                },
                refresh: function() {
                    this._tileGridsGroup.scheduleRefresh()
                },
                cameraZoomWasSet: function(t) {
                    t ? this._tileGridsGroup.cameraWillStartZooming(t) : this._tileGridsGroup.invalidate()
                },
                tileGridDidFinishRendering: function() {
                    this._tileOverlays.forEach(function(t) {
                        t._impl.reloadComplete()
                    }, this),
                    n.prototype.tileGridDidFinishRendering.call(this)
                },
                handleEvent: function() {
                    this._tileGridsGroup.scheduleRefresh()
                },
                beforeCameraZoomChange: function(t) {
                    t ? this._tileGridsGroup.cameraWillStartZooming() : this._tileGridsGroup.cameraDidStopZooming()
                },
                devicePixelRatioDidChange: function() {
                    return this._tileGridsGroup.scheduleRefresh(),
                    !0
                },
                minZoomLevelForViewportSize: function(t, e) {
                    t = Math.max(t.width, t.height),
                    t = Math.ceil(t / e);
                    return a.log2(t)
                },
                minAndMaxZoomLevelsWereUpdated: function() {
                    this.tileOverlays.forEach(function(t) {
                        "number" != typeof t.minimumZ || isNaN(t.minimumZ) || (this.minZoomLevel = Math.min(this.minZoomLevel, t.minimumZ)),
                        "number" != typeof t.maximumZ || isNaN(t.maximumZ) || (this.maxZoomLevel = Math.max(this.maxZoomLevel, t.maximumZ))
                    }, this)
                },
                _tileOverlaysDidChange: function() {
                    this._updateMinAndMaxZoomLevels(this.camera.viewportSize),
                    this._tileGridsGroup.scheduleRefresh()
                },
                _showsPOI: function() {
                    return (null == this._pointOfInterestFilter || null == this._pointOfInterestFilter._includes && 0 === this._pointOfInterestFilter._excludes.length) && this.labels
                },
                needsReplacing: function(t) {
                    return t
                }
            }),
            t.exports = r
        }
        ,
        8402: (t,e,i)=>{
            var n = i(3299)
              , o = i(3770)
              , s = i(2221)
              , a = i(863);
            function r() {
                n.call(this),
                Object.defineProperty(this, "_impl", {
                    value: new o(this)
                })
            }
            r.prototype = s.inheritPrototype(n, r, {
                get cssBackgroundProperty() {
                    return this._impl.cssBackgroundProperty
                },
                get labels() {
                    return this._impl.labels
                },
                set labels(t) {
                    this._impl.labels = t
                },
                get pointOfInterestFilter() {
                    return null === this._impl._pointOfInterestFilter ? null : null === this._impl._pointOfInterestFilter._includes && 0 === this._impl._pointOfInterestFilter._excludes.length ? this._impl._pointOfInterestFilter : a.filterExcludingAllCategories
                },
                set pointOfInterestFilter(t) {
                    this._impl.pointOfInterestFilter = t
                },
                get rotation() {
                    return 0
                },
                set rotation(t) {
                    this._impl.rotation = t
                },
                rotateCameraAroundMapPoint: function(t, e) {
                    this._impl.rotation += e
                }
            }),
            t.exports = r
        }
        ,
        222: (t,e,i)=>{
            var o = i(4701)
              , s = i(2244)
              , a = i(2221)
              , r = {
                fontFamily: "-apple-system-font, sans-serif",
                margin: "2em auto",
                width: "20em",
                borderRadius: "0.5em",
                color: "#f8f9f0",
                backgroundColor: "rgba(0, 0, 0, 0.7)",
                padding: "1em",
                textAlign: "center",
                position: "relative"
            }
              , l = {
                listStyleType: "none",
                margin: 0,
                paddingLeft: 0
            }
              , h = {
                width: "1em",
                height: "1em",
                position: "absolute",
                top: "0.5em",
                left: "0.5em"
            };
            function n(t, e) {
                this._element = c(document.createElement("div"), r);
                var n = c(this._element.appendChild(document.createElement("ul")), l)
                  , i = (this._items = [function(t) {
                    t = t.center.toCoordinate();
                    return "Center: " + t.latitude.toFixed(6) + ", " + t.longitude.toFixed(6)
                }
                , function(t) {
                    return "Zoom: " + t.zoom.toFixed(6) + ", rotation: " + t.rotation.toFixed(6)
                }
                , function(t) {
                    var e = Math.floor(t.zoom)
                      , i = Math.pow(2, e);
                    return "Center tile: x=" + Math.floor(a.mod(t.center.x, 1) * i) + ", y=" + Math.floor(t.center.y * i) + ", z=" + e
                }
                , function(t) {
                    return "Viewport: " + t.viewportSize.width + "×" + t.viewportSize.height
                }
                ].map(function(e) {
                    var i = n.appendChild(document.createElement("li"));
                    return function(t) {
                        i.textContent = e(t)
                    }
                }),
                o.svgElement("svg", {
                    viewBox: "-16 -16 32 32"
                }, o.svgElement("circle", {
                    r: 16,
                    fill: "#ccc"
                }), o.svgElement("g", {
                    "stroke-width": 4,
                    stroke: "#222"
                }, o.svgElement("line", {
                    x1: -8,
                    y1: -8,
                    x2: 8,
                    y2: 8
                }), o.svgElement("line", {
                    x1: 8,
                    y1: -8,
                    x2: -8,
                    y2: 8
                }))));
                this._element.appendChild(c(i, h)),
                i.addEventListener("click", t),
                this.update(e),
                this.update = s(this.update, 50, this)
            }
            function c(t, e) {
                for (var i in e)
                    t.style[i] = e[i];
                return t
            }
            n.prototype = {
                constructor: n,
                attachTo: function(t) {
                    t.appendChild(this._element)
                },
                detach: function() {
                    this._element.remove()
                },
                update: function(e) {
                    this._items.forEach(function(t) {
                        t(e)
                    })
                }
            },
            t.exports = n
        }
        ,
        5702: (t,e,i)=>{
            var n = i(2764)
              , o = i(222)
              , s = i(2221)
              , a = i(4701)
              , r = i(3747)
              , l = i(5814)
              , h = i(764).FallbackType;
            function c(t) {
                n.call(this, t),
                this._renderer = t._renderer,
                this._requiresFallback = !1,
                this._fallback = function() {
                    this._requiresFallback = !0
                }
                .bind(this)
            }
            c.prototype = s.inheritPrototype(n, c, {
                init: function(t, e, i, n, o) {
                    var s;
                    this._requiresFallback ? t.syrupRequestedFallback(h.FEATURE) : (this._fallback = t.syrupRequestedFallback.bind(t, h.FEATURE),
                    s = {
                        poiFilter: this._convertPointOfInterestFilter(this.pointOfInterestFilter),
                        tint: this.tint,
                        emphasis: this.emphasis
                    },
                    this._renderer.init(this.networkConfigurationFor(t), e, i, n, s, function(t) {
                        this._updateMinAndMaxZoomLevels(this.camera.viewportSize),
                        o(t, this._renderer)
                    }
                    .bind(this)))
                },
                get isRotationEnabled() {
                    return this._isRotationEnabled
                },
                set isRotationEnabled(t) {
                    !t && this._rotationController ? (this._rotationController.destroy(),
                    delete this._rotationController) : t && !this._rotationController && (this._initialInteractionController || (this._initialInteractionController = new l(this)),
                    this._rotationController = new r(this),
                    this.camera._initialRotation = 0),
                    this._isRotationEnabled = t
                },
                get rotation() {
                    return this.camera.rotation
                },
                set rotation(t) {
                    this._cameraWillChange(),
                    this.camera.rotation = t,
                    this._updateDisplay(),
                    this._cameraDidChange(),
                    this.cameraAnimation && this.cameraAnimation.rotating || (t = this.node.delegate) && "function" == typeof t.mapRotationDidChange && t.mapRotationDidChange(this.node)
                },
                updateNetworkConfiguration: function(t) {
                    this._renderer.updateNetworkConfiguration(this.networkConfigurationFor(t))
                },
                forceRerender: function() {
                    this._renderer.forceRerender()
                },
                adjustForSize: function(t) {
                    n.prototype.adjustForSize.call(this, t),
                    this.forceRerender()
                },
                adjustMapItemPoint: function(t) {
                    return this.cameraIsZooming || this.cameraIsPanning || this.cameraIsRotating || (t.x = a.roundToDevicePixel(t.x),
                    t.y = a.roundToDevicePixel(t.y)),
                    t
                },
                networkConfigurationFor: function(t) {
                    var e, i;
                    return t ? (e = null,
                    t.proxyPrefixes && !t.customMadabaUrl && (e = t.proxyPrefixes.slice(0)),
                    i = !(!t.withCredentials || t.customMadabaUrl),
                    {
                        madabaDomains: t.madabaDomains.slice(0),
                        rasterTiles: t.rasterTilesForSyrup,
                        proxyPrefixes: e,
                        withCredentials: i,
                        tileGroup: t.tileGroup,
                        accessKey: t.accessKey,
                        accessKeyHasExpired: t.accessKeyHasExpired.bind(t),
                        syrupRequestedFallback: t.syrupRequestedFallback.bind(t)
                    }) : {}
                },
                rotateCameraAroundMapPoint: function(t, e) {
                    if (this.isRotationLocked) {
                        if (!this.restrictedCamera)
                            return;
                        var i;
                        this.restrictIncomingRotation && (n = s.mod(this.camera.rotation + e, 360),
                        (i = a.restrictRotation(n)) !== n) && (e = i - this.camera.rotation)
                    }
                    var n;
                    0 !== e && (this._cameraWillChange(),
                    this.camera.rotateAroundCenter(t, e),
                    this.constrainCamera(this.camera),
                    this._updateDisplay(),
                    this._cameraDidChange(),
                    n = this.node.delegate) && "function" == typeof n.mapRotationDidChange && n.mapRotationDidChange(this.node)
                },
                deactivate: function() {
                    n.prototype.deactivate.call(this),
                    this.isRotationEnabled = !1,
                    this._renderer.deactivate()
                },
                getMapFeatureRegions: function() {
                    return this._renderer.getMapFeatureRegions()
                },
                destroy: function(t) {
                    n.prototype.destroy.call(this, t),
                    this.customCanvas && this.customCanvas.parentNode && this.customCanvas.parentNode.removeChild(this.customCanvas),
                    this._renderer && (this._renderer.destroy(),
                    this._renderer = null)
                },
                stringInfo: function() {
                    return "SyrupNode<camera:" + this.camera.toString() + ">"
                },
                get backgroundGridTheme() {
                    return this._backgroundGridTheme
                },
                set backgroundGridTheme(t) {
                    this._backgroundGridTheme = t
                },
                get fullyRendered() {
                    return this._renderer.fullyRendered
                },
                get customCanvas() {
                    return this._renderer && this._renderer.canvas
                },
                get camera() {
                    return this._camera
                },
                set camera(t) {
                    this._camera = t,
                    this.node.needsDisplay = !0
                },
                get language() {
                    return this._language
                },
                set language(t) {
                    this._language !== t && (this._language = t,
                    this._renderer) && (this._renderer.language = t,
                    this.node.needsDisplay = !0)
                },
                updateConfiguration: function(t) {
                    var e = this._configuration && (t.name !== this._configuration.name || t.provider !== this._configuration.provider);
                    n.prototype.updateConfiguration.call(this, t),
                    e && this._renderer && (this._renderer.updateConfiguration(t, {
                        poiFilter: this._convertPointOfInterestFilter(this._pointOfInterestFilter)
                    }),
                    this.node.needsDisplay = !0)
                },
                updateTintAndEmphasis: function(t, e) {
                    this._renderer.node.pendingConfigurationUpdates ? (this._renderer.node.pendingConfigurationUpdates.tint = t,
                    this._renderer.node.pendingConfigurationUpdates.emphasis = e) : this._renderer && this._configuration && (this._renderer.updateConfiguration(this._configuration, {
                        poiFilter: this._convertPointOfInterestFilter(this._pointOfInterestFilter),
                        tint: t,
                        emphasis: e
                    }),
                    this.node.needsDisplay = !0)
                },
                updatePointOfInterestFilter: function() {
                    var t;
                    this._renderer.node.pendingConfigurationUpdates ? this._renderer.node.pendingConfigurationUpdates.poiFilterUpdate = !0 : this._renderer && this._configuration && (t = this._convertPointOfInterestFilter(this._pointOfInterestFilter),
                    this._renderer.updatePointOfInterestFilter(this._configuration, t),
                    this.node.needsDisplay = !0)
                },
                makePendingConfigurationUpdates: function() {
                    var t = this._renderer.node.pendingConfigurationUpdates;
                    t && (delete this._renderer.node.pendingConfigurationUpdates,
                    t.tint && t.emphasis && this.updateTintAndEmphasis(t.tint, t.emphasis),
                    t.poiFilter) && this.updatePointOfInterestFilter()
                },
                devicePixelRatioDidChange: function() {
                    return !this._renderer
                },
                forcedSnapsToIntegralZoomLevels: !1,
                get snapsToIntegralZoomLevels() {
                    return this.forcedSnapsToIntegralZoomLevels || this._renderer && this._renderer.snapsToIntegralZoomLevels
                },
                set snapsToIntegralZoomLevels(t) {},
                get debug() {
                    return this._debug
                },
                set debug(t) {
                    this._debug !== !!t && (this._debug = !!t,
                    this._debug ? this._showDebugPanel() : this._hideDebugPanel())
                },
                minZoomLevelForViewportSize: function(t, e) {
                    return this._renderer && this._renderer.Camera ? this._renderer.Camera.getMinZoomLevel([t.width, t.height], e) : this.minZoomLevel
                },
                needsReplacing: function(t) {
                    return !t
                },
                createLabelRegion: function() {
                    return this._renderer.createLabelRegion()
                },
                updatedLabelRegion: function() {
                    this.forceRerender(),
                    this.node.needsDisplay = !0
                },
                unregisterLabelRegion: function(t) {
                    this._renderer.unregisterLabelRegion(t),
                    this.node.needsDisplay = !0
                },
                _tileOverlaysDidChange: function() {
                    this._fallback()
                },
                _showDebugPanel: function() {
                    this._debugPanel = new o(function() {
                        this.debug = !1
                    }
                    .bind(this),this.camera),
                    this._debugPanel.attachTo(this._element),
                    this._cameraDidChange = function() {
                        n.prototype._cameraDidChange.call(this),
                        this._debugPanel && this._debugPanel.update(this.camera)
                    }
                },
                _hideDebugPanel: function() {
                    this._debugPanel.detach(),
                    delete this._debugPanel,
                    delete this._cameraDidChange
                },
                _updateDisplay: function() {
                    this.forceRerender(),
                    this.node.needsDisplay = !0
                },
                _convertPointOfInterestFilter: function(t) {
                    return null === t ? null : {
                        includes: t._includes,
                        excludes: t._excludes
                    }
                }
            }),
            t.exports = c
        }
        ,
        1567: (t,e,i)=>{
            var n = i(3299)
              , o = i(4464)
              , s = i(5702)
              , a = i(2221)
              , r = i(5097)
              , l = i(6426);
            function h() {
                n.call(this),
                this._renderer = new o(this),
                Object.defineProperty(this, "_impl", {
                    value: new s(this)
                })
            }
            h.prototype = a.inheritPrototype(n, h, {
                get isRotationEnabled() {
                    return this._impl.isRotationEnabled
                },
                set isRotationEnabled(t) {
                    this._impl.isRotationEnabled = t
                },
                get customCanvas() {
                    return this._impl.customCanvas
                },
                set needsDisplay(t) {
                    t && r.scheduleDraw(this._renderer)
                },
                get forcedSnapsToIntegralZoomLevels() {
                    return this._impl.forcedSnapsToIntegralZoomLevels
                },
                set forcedSnapsToIntegralZoomLevels(t) {
                    this._impl.forcedSnapsToIntegralZoomLevels = t
                },
                init: function(t, e, i, n, o) {
                    this._impl.init(t, e, i, n, o)
                },
                updateNetworkConfiguration: function(t) {
                    this._impl.updateNetworkConfiguration(t)
                },
                forceRerender: function() {
                    this._impl.forceRerender()
                },
                rotateCameraAroundMapPoint: function(t, e) {
                    this._impl.rotateCameraAroundMapPoint(t, e)
                },
                makePendingConfigurationUpdates: function() {
                    this._impl.makePendingConfigurationUpdates()
                },
                didReconfigure: function() {
                    this.dispatchEvent(new l.Event("reconfigured"))
                },
                getMapFeatureRegions: function() {
                    return this._impl.getMapFeatureRegions()
                }
            }),
            t.exports = h
        }
        ,
        9653: (t,e,i)=>{
            var l = i(5479)
              , h = i(2221)
              , c = i(4701)
              , n = i(3270)
              , d = i(8570)
              , u = i(8756);
            function o(t, e) {
                var i = c.getIntegralZoom(t.zoom)
                  , n = Math.pow(2, i)
                  , o = Math.pow(2, t.zoom) * l.tileSize
                  , s = t.viewportSize.width / o / 2
                  , o = t.viewportSize.height / o / 2
                  , a = new l.MapPoint(t.center.x - s,t.center.y - o)
                  , s = new l.MapPoint(t.center.x + s,t.center.y + o)
                  , t = n - 1
                  , o = Math.floor(a.x * n)
                  , r = Math.floor(s.x * n)
                  , a = h.clamp(Math.floor(a.y * n), 0, t)
                  , s = h.clamp(Math.floor(s.y * n), 0, t);
                this.range = new d(new u(o,a,i),new u(r,s,i)),
                this.settings = e,
                this.resolution = c.devicePixelRatio,
                this.zoom = i,
                this.mapRect = new l.MapRect(o / n,a / n,(r - o) / n,(s - a) / n),
                this.mapRect.size.width < 0 && this.mapRect.size.width++
            }
            o.prototype = {
                constructor: o,
                equals: function(t) {
                    return this.sameSettings(t) && this.resolution === t.resolution && this.range.equals(t.range)
                },
                sameSettings: function(t) {
                    var e = this.settings
                      , i = t.settings;
                    return e.configuration === i.configuration && e.tint === i.tint && e.emphasis === i.emphasis && e.showsPOI === i.showsPOI && e.showsLabels === i.showsLabels && e.language === i.language && e.showsDefaultTiles === i.showsDefaultTiles && e.showsTileInfo === i.showsTileInfo && this.sameTileOverlays(t)
                },
                sameTileOverlays: function(i) {
                    return this.settings.tileOverlays.length === i.settings.tileOverlays.length && this.settings.tileOverlays.every(function(t, e) {
                        return t === i.settings.tileOverlays[e] & !t._impl.stale
                    }, this)
                },
                sharesTileSourcesWithTileData: function(t) {
                    var e, i;
                    return this.settings.tint === t.settings.tint && this.settings.emphasis === t.settings.emphasis && (e = this.settings.configuration.tileSources,
                    i = t.settings.configuration.tileSources,
                    !("AutoNavi" !== this.settings.configuration.provider || "AutoNavi" !== t.settings.configuration.provider || 1 !== e.length || 1 !== i.length || "satellite" !== e[0].name && "hybrid" !== e[0].name || "satellite" !== i[0].name && "hybrid" !== i[0].name) || i.some(function(t) {
                        return -1 !== e.indexOf(t)
                    }))
                },
                load: function() {
                    this._tiles || (this._tiles = n.tilesForTileData(this))
                },
                cancel: function() {
                    if (!this._canceled && (this._canceled = !0,
                    this._tiles))
                        for (var t = 0, e = this._tiles, i = e.length; t < i; ++t)
                            e[t].unschedule()
                },
                releaseTiles: function() {
                    if (this._tiles)
                        for (var t = 0, e = this._tiles, i = e.length; t < i; ++t)
                            n.releaseTile(e[t], this)
                },
                get tiles() {
                    return this.load(),
                    this._tiles
                }
            },
            t.exports = o
        }
        ,
        9705: (t,e,i)=>{
            var c = i(5479)
              , d = i(462)
              , u = i(2221)
              , n = i(5097)
              , o = i(2394)
              , p = i(1199)
              , s = i(2933)
              , a = i(7095).State
              , r = new d.Matrix
              , l = new d.Size(c.tileSize,c.tileSize);
            function h(t) {
                d.GroupNode.call(this),
                this._scale = 1,
                this._nodesByTileKey = {},
                this._fadingNodes = [],
                this._debug = !!t
            }
            function m(t) {
                var e = new s(t.tileSource);
                return e.size = l,
                t.loaderState === a.Succeeded && (e.image = t.image,
                e.opacity = t.preferredOpacity),
                e
            }
            h.prototype = u.inheritPrototype(d.GroupNode, h, {
                stale: !1,
                fullyRendered: !1,
                _pendingTileCount: 0,
                _tileData: null,
                get locked() {
                    return this.wantsLayerBacking
                },
                set locked(t) {
                    t !== this.wantsLayerBacking && (t && 0 < this._fadingNodes.length ? this.wantsLayerBacking = !0 : !t && this._wantsLayerBacking ? this.wantsLayerBacking = !1 : this.frozen = t)
                },
                get tileData() {
                    return this._tileData
                },
                setTileDataAnimated: function(t, n) {
                    this._fadingNodes = [],
                    delete this._failedTileAndImage;
                    var i = t.tiles
                      , o = t.range.min
                      , s = Math.pow(2, o.z)
                      , a = (this._tileData && this._tileData.tiles.forEach(function(t) {
                        var e;
                        t.removeEventListener(p.Events.LoadSuccess, this),
                        t.removeEventListener(p.Events.LoadFail, this),
                        -1 === i.indexOf(t) && (t = t.key,
                        e = this._nodesByTileKey[t]) && (e.remove(),
                        delete this._nodesByTileKey[t])
                    }, this),
                    this._tileData = t,
                    this.fullyRendered = !1,
                    this._pendingTileCount = i.length,
                    this.childCount)
                      , r = t.range.min.x
                      , l = t.range.max.x - r === s
                      , h = s * c.tileSize;
                    i.forEach(function(t) {
                        var e = new d.Point(u.mod(t.x - o.x, s) * c.tileSize,(t.y - o.y) * c.tileSize)
                          , i = this._ensureNodeForTile(t);
                        i.position = e,
                        i.opacity = 0,
                        l && t.x === r && (i.repeatOffset = h),
                        this.addChild(i),
                        t.loaded ? ((0 < a || !n) && (i.opacity = 1),
                        this._tileDidLoad(t)) : (n || (i.opacity = 1),
                        t.addEventListener(p.Events.LoadSuccess, this),
                        t.addEventListener(p.Events.LoadFail, this))
                    }, this)
                },
                get pendingTileCount() {
                    return this._pendingTileCount
                },
                set scale(t) {
                    t !== this._scale && (this._scale = t,
                    this.transform = 1 === t ? r : (new d.Matrix).scale(t))
                },
                get debug() {
                    return this._debug
                },
                stringInfo: function() {
                    return "TileGridNode" + (this.tileData ? "<range:(" + this.tileData.range.toString() + ")>" : "")
                },
                get cssBackgroundProperty() {
                    var o;
                    return this.fullyRendered ? (o = this.position,
                    Array.prototype.concat.apply([], this._tileData.tiles.map(function(t) {
                        var n = this._nodesByTileKey[t.key];
                        return t.tileImages.reduce(function(t, e, i) {
                            return "url(" + e.image.src + ") " + (o.x + n.position.x) + "px " + (o.y + n.position.y) + "px / " + c.tileSize + "px no-repeat" + (0 === i ? "" : ", ") + t
                        }, "")
                    }, this)).join(", ")) : ""
                },
                handleEvent: function(t) {
                    var e = t.target;
                    switch (t.type) {
                    case p.Events.LoadSuccess:
                        e.removeEventListener(p.Events.LoadSuccess, this),
                        this._tileDidLoad(e);
                        break;
                    case p.Events.LoadFail:
                        this._tileLoadFail(e, t.tileImage)
                    }
                },
                performScheduledUpdate: function() {
                    this._updateFadingNodes(),
                    0 === this._pendingTileCount && 0 === this._fadingNodes.length && this._allTilesDidDraw()
                },
                _tileDidLoad: function(t) {
                    this._pendingTileCount--,
                    0 === this._pendingTileCount && this._failedTileAndImage && (this._failedTileAndImage.tile._requestTileImageLoadStatus(this._failedTileAndImage.tileImage, this._handleTileImageLoadStatus.bind(this)),
                    delete this._failedTileAndImage);
                    var e, i = this._nodesByTileKey[t.key];
                    0 === i.childCount && (e = t.tileImages,
                    i.children = e.map(m),
                    this.debug) && ((e = new o(t)).size = l,
                    i.addChild(e)),
                    i.opacity < 1 ? (this._fadingNodes.push(i),
                    n.scheduleASAP(this)) : 0 === this._pendingTileCount && this._allTilesDidDraw()
                },
                _tileLoadFail: function(t, e) {
                    this._failedTileAndImage = {
                        tile: t,
                        tileImage: e
                    }
                },
                _handleTileImageLoadStatus: function(t) {
                    403 === t.target.status && (t = this.parent._map.node.delegate) && t.tileAccessForbidden()
                },
                _updateFadingNodes: function() {
                    var e = Date.now();
                    this._fadingNodes = this._fadingNodes.filter(function(t) {
                        return t._startTime ? t.opacity = Math.min(1, (e - t._startTime) / 150) : 0 === t.opacity && (t._startTime = e),
                        1 !== t.opacity || (delete t._startTime,
                        !1)
                    }),
                    0 < this._fadingNodes.length ? n.scheduleOnNextFrame(this) : this._wantsLayerBacking && (this.wantsLayerBacking = !1,
                    this.frozen = !0)
                },
                _allTilesDidDraw: function() {
                    this.fullyRendered = !0,
                    this.parent && this.parent.tileGridDidFinishRendering(this)
                },
                _ensureNodeForTile: function(t) {
                    var t = t.key
                      , e = this._nodesByTileKey[t];
                    return e ? delete e.repeatOffset : e = this._nodesByTileKey[t] = new d.GroupNode,
                    e
                }
            }),
            t.exports = h
        }
        ,
        3121: (t,e,i)=>{
            var w = i(5479)
              , s = i(5097)
              , C = i(462)
              , a = i(9705)
              , b = i(9653)
              , n = i(2221)
              , k = i(4701);
            function o(t) {
                C.GroupNode.call(this),
                this._map = t
            }
            o.prototype = n.inheritPrototype(C.GroupNode, o, {
                fullyRendered: !1,
                scheduleRefresh: function() {
                    this.children.forEach(function(t) {
                        t.stale = !0
                    }),
                    this.invalidate()
                },
                destroy: function() {
                    this._releaseChildren(!0)
                },
                invalidate: function() {
                    this.fullyRendered = !1,
                    s.scheduleASAP(this)
                },
                stringInfo: function() {
                    return "TileGridsGroupNode"
                },
                get cssBackgroundProperty() {
                    return this.fullyRendered ? this.lastChild.cssBackgroundProperty : ""
                },
                handleEvent: function(t) {
                    this.scheduleRefresh()
                },
                performScheduledUpdate: function() {
                    if (this._canDraw()) {
                        var e, t = this._map, i = t.camera, n = this.lastChild, o = !!n && n.debug !== this._map.debug, s = !!n && n.tileData.settings.showsDefaultTiles !== this._map.showsDefaultTiles;
                        if (!this._tileDataAtZoomCompletion) {
                            if (Math.round(i.zoom) !== i.zoom && t.tileSettings.showsLabels) {
                                if (!n)
                                    return;
                                e = n.tileData
                            } else
                                e = new b(i,t.tileSettings);
                            n ? !n.stale && n.locked || e.equals(n.tileData) && !o && !s || ((s = n.tileData).tiles.forEach(function(t) {
                                e.tiles.indexOf(t) < 0 && t.unschedule()
                            }),
                            r = e.settings.configuration === s.settings.configuration,
                            o = e.sameSettings(s) && e.resolution === s.resolution && !o,
                            (r ? !o : e.sharesTileSourcesWithTileData(s)) ? (n.locked = !0,
                            this._addNewTileGridAnimated(e, !0)) : n.locked || (o = r && 1 < this._children.length,
                            delete n.stale,
                            n.setTileDataAnimated(e, o),
                            (s = this._children[this._children.length - 2]) && !e.sharesTileSourcesWithTileData(s.tileData) && (this._releaseChildren(!1),
                            this._children = [n]))) : this._addNewTileGridAnimated(e, !1)
                        }
                        for (var a = i.zoom, r = t.visibleMapRect, l = r.origin, h = r.size, c = 0, d = this.children, u = d.length; c < u; ++c) {
                            var p, m = d[c], _ = m.tileData, g = _.zoom, f = _.mapRect.origin, v = Math.pow(2, a - g), g = Math.pow(2, g) * (w.tileSize * v), y = f.x - l.x;
                            y > h.width ? y-- : 0 < (p = _.mapRect.size.width) && y + p < 0 && y++,
                            m.scale = v,
                            m.position = new C.Point(k.roundToDevicePixel(y * g),k.roundToDevicePixel((f.y - l.y) * g)),
                            c < u - 1 && _.cancel()
                        }
                        this.fullyRendered = 0 < u && this.children[u - 1].fullyRendered
                    }
                },
                cameraWillStartZooming: function(t) {
                    var e;
                    this._canDraw() && (e = this._map,
                    t && (this._tileDataAtZoomCompletion = new b(t,e.tileSettings),
                    this._tileDataAtZoomCompletion.load()),
                    this.children.forEach(function(t) {
                        t.locked = !0
                    }))
                },
                cameraDidStopZooming: function() {
                    var t, e;
                    this._canDraw() && (this._tileDataAtZoomCompletion ? (this._addNewTileGridAnimated(this._tileDataAtZoomCompletion, !0, !0),
                    delete this._tileDataAtZoomCompletion) : (t = this._map,
                    (e = this.lastChild) && t.camera.zoom === e.tileData.zoom ? e.locked = !1 : (e = new b(t.camera,t.tileSettings),
                    this._addNewTileGridAnimated(e, !0, !0))))
                },
                tileGridDidFinishRendering: function(t) {
                    var e = this.children
                      , i = e.length
                      , n = e[i - 1];
                    if (n.fullyRendered && !n.locked) {
                        for (var o = 0; o < i - 1; ++o)
                            e[o].tileData.releaseTiles();
                        1 < i && (this.children = [n]),
                        this.fullyRendered = !0,
                        this._map.tileGridDidFinishRendering()
                    }
                },
                _canDraw: function() {
                    var t = this._map;
                    return t && !!t.configuration && !!t.language
                },
                _addNewTileGridAnimated: function(t, e, i) {
                    var n = new a(this._map.debug)
                      , o = this.lastChild;
                    o && !t.sharesTileSourcesWithTileData(o.tileData) ? (this._releaseChildren(!0),
                    this.children = [n]) : this.addChild(n),
                    n.setTileDataAnimated(t, e),
                    i && s.scheduleASAP(this)
                },
                _releaseChildren: function(t) {
                    for (var e = this.childCount - (t ? 1 : 2); 0 <= e; --e) {
                        var i = this.children[e].tileData;
                        i.cancel(),
                        i.releaseTiles()
                    }
                }
            }),
            t.exports = o
        }
        ,
        2933: (t,e,i)=>{
            var n = i(462)
              , o = i(9839)
              , i = i(2221);
            function s(t) {
                n.ImageNode.call(this),
                this._tileSource = t._public,
                this._tileSource && "function" == typeof this._tileSource.addEventListener && this._tileSource.addEventListener(o.OPACITY_EVENT, this)
            }
            s.prototype = i.inheritPrototype(n.ImageNode, s, {
                handleEvent: function() {
                    this._tileSource && (this.opacity = this._tileSource.opacity)
                },
                wasRemoved: function() {
                    setTimeout(function() {
                        this.parent && this.parent.scene || this._tileSource && "function" == typeof this._tileSource.removeEventListener && this._tileSource.removeEventListener(o.OPACITY_EVENT, this)
                    }
                    .bind(this), 0)
                }
            }),
            t.exports = s
        }
        ,
        2100: (t,e,i)=>{
            var n = i(4701)
              , o = i(7095)
              , l = i(2221)
              , h = {}
              , s = [];
            function a(t, e, i, n, o, s, a, r, l, h, c) {
                this.x = t,
                this.y = e,
                this.z = i,
                this.tileSource = n,
                this.tint = o,
                this.emphasis = s,
                this.language = a,
                this.poi = r ? 1 : 0,
                this.labels = l ? 1 : 0,
                this.resolution = h,
                this._priority = c,
                this._loader = d(c, this),
                this._setLoaderCrossOriginMode()
            }
            function d(t, e) {
                var i;
                return 0 < s.length ? (i = s.shift()).reuse(t, e) : i = new o.ImageLoader(t,e),
                i
            }
            a.prototype = {
                constructor: a,
                get preferredOpacity() {
                    return "number" == typeof this.tileSource.opacity ? this.tileSource.opacity : 1
                },
                get loaderState() {
                    return this._loader ? this._loader.state : o.State.Unscheduled
                },
                schedule: function() {
                    this._loader || (this._loader = d(this._priority, this),
                    this._setLoaderCrossOriginMode()),
                    this._loader.state > o.State.Unscheduled || this._loader.schedule()
                },
                unschedule: function() {
                    this._loader && this._loader.unschedule() && (s.push(this._loader),
                    this._loader = null)
                },
                whenDoneLoading: function(t) {
                    this._doneLoadingCallback = t
                },
                get urlForImageLoader() {
                    var t, e, i, n, o, s, a, r = this.tileSource;
                    return "function" == typeof r.urlForImageLoader ? r.urlForImageLoader(this.x, this.y, this.z, this.resolution) : (t = r.domains,
                    e = r.proxyPrefixes,
                    i = r.protocol,
                    s = r.supportedResolutions[0],
                    n = r.supportedResolutions[r.supportedResolutions.length - 1],
                    s = l.clamp(this.resolution, s, n),
                    n = 1,
                    "satellite" === r.name && (a = r.supportedSizes.length - 1,
                    o = r.supportedSizes[0],
                    a = r.supportedSizes[a],
                    n = l.clamp(this.resolution, o, a)),
                    o = l.fillTemplate(r.path, {
                        x: this.x,
                        y: this.y,
                        z: this.z,
                        resolution: s,
                        tileSizeIndex: n,
                        lang: this.language,
                        poi: this.poi
                    }),
                    "satellite" !== r.name && (0 === this.labels ? o += "&labels=0&tint=" + this.tint + "&emphasis=" + this.emphasis : o += "&emphasis=" + this.emphasis + "&tint=" + this.tint),
                    (a = h[o]) || (a = i + "//" + t[s = Math.floor(76731.36742 * (this.x + this.y)) % t.length] + o,
                    e && (a = e[s % e.length] + a),
                    h[o] = a),
                    a)
                },
                loaderDidSucceed: function(t) {
                    this._loaderDidComplete()
                },
                loaderDidFail: function(t) {
                    this._loaderDidComplete()
                },
                _setLoaderCrossOriginMode: function() {
                    this.tileSource.crossOrigin && (this._loader.crossOrigin = n.getCorsAttribute(this.tileSource.withCredentials))
                },
                _loaderDidComplete: function() {
                    this.image = this._loader.image,
                    "function" == typeof this._doneLoadingCallback && (this._doneLoadingCallback(this),
                    delete this._doneLoadingCallback)
                }
            },
            t.exports = a
        }
        ,
        3270: (t,e,i)=>{
            var d = i(7095)
              , u = i(8756)
              , p = i(2221)
              , m = i(1199)
              , _ = {};
            function g(e, i, n, t) {
                return t.settings.configuration.provider + t.settings.configuration.name + e + "-" + i + "-" + n + t.settings.tint + t.settings.emphasis + t.settings.language + t.settings.showsPOI + t.settings.showsLabels + t.settings.showsDefaultTiles + t.settings.showsTileInfo + t.resolution + t.settings.tileOverlays.map(function(t) {
                    return t._impl.keyForTile(e, i, n)
                }).join("-")
            }
            function f(t) {
                t = t.target;
                t.removeEventListener(m.Events.LoadSuccess, f),
                t.removeEventListener(m.Events.LoadFail, v)
            }
            function v(t) {
                t = t.target;
                delete _[t.key],
                t.removeEventListener(m.Events.LoadSuccess, f),
                t.removeEventListener(m.Events.LoadFail, v)
            }
            t.exports = {
                tilesForTileData: function(r) {
                    for (var t = r.range, l = t.min.z, h = Math.pow(2, l), e = t.min, i = t.denormalize().max, n = new u((e.x + i.x) / 2,(e.y + i.y) / 2), o = [], s = Math.min(i.x, e.x + h - 1), a = e.x; a <= s; ++a)
                        for (var c = e.y; c <= i.y; ++c)
                            o.push(new u(a,c));
                    return o.sort(function(t, e) {
                        var i = t.distanceToPoint(n) - e.distanceToPoint(n);
                        return 0 == i ? t.x - e.x == 0 ? t.y - e.y : t.x - e.x : i
                    }),
                    o.map(function(t) {
                        return e = p.mod(t.x, h),
                        t = t.y,
                        i = l,
                        n = r,
                        o = d.Priority.High,
                        s = g(e, t, i, n),
                        (a = _[s]) ? a.schedule() : ((a = new m(s,e,t,i,n.settings,n.resolution,o)).addEventListener(m.Events.LoadSuccess, f),
                        a.addEventListener(m.Events.LoadFail, v),
                        (_[s] = a)._refCount = 0,
                        a._loadTileImages()),
                        a._refCount++,
                        a;
                        var e, i, n, o, s, a
                    })
                },
                releaseTile: function(t, e) {
                    t._refCount--,
                    0 === t._refCount && (t.unschedule(),
                    t = g(t.x, t.y, t.z, e),
                    delete _[t])
                }
            }
        }
        ,
        9839: (t,e,i)=>{
            var a = i(2221)
              , n = i(6814)
              , r = i(811)
              , o = ["minimumZ", "maximumZ", "opacity", "data"];
            function s(t, e, i) {
                this._public = t,
                i = a.checkOptions(i),
                o.forEach(function(t) {
                    t in i && (this[t] = i[t])
                }, this),
                Object.keys(i).forEach(function(t) {
                    o.indexOf(t) < 0 && console.warn("[MapKit] Unknown option: " + t + ". Use the data property to store custom data.")
                }),
                this.urlTemplate = e,
                void 0 === this.opacity && (this.opacity = 1),
                this.stale = !1
            }
            s.RELOAD_EVENT = "tile-overlay-reload",
            s.OPACITY_EVENT = "tile-overlay-opacity-changed",
            s.ERROR_EVENT = "tile-error",
            s.prototype = {
                constructor: s,
                _minimumZ: null,
                _maximumZ: null,
                get urlTemplate() {
                    return this._urlTemplate
                },
                set urlTemplate(t) {
                    var e = typeof t;
                    if ("function" != e && "string" != e)
                        throw new TypeError("[MapKit] TileOverlay.urlTemplate expected a function or a string, but got `" + t + "` instead.");
                    this._urlTemplate = t
                },
                keyForTile: function(t, e, i) {
                    return this._minimumZ + "-" + this._maximumZ + "-" + this.urlForImageLoader(t, e, i, 1)
                },
                get minimumZ() {
                    return this._minimumZ
                },
                get minZoomLevel() {
                    return this._minimumZ
                },
                set minimumZ(t) {
                    a.checkType(t, "number", "[MapKit] TileOverlay.minimumZ expected a number, but got `" + t + "` instead."),
                    this._minimumZ = Math.floor(t)
                },
                get maximumZ() {
                    return this._maximumZ
                },
                get maxZoomLevel() {
                    return this._maximumZ
                },
                set maximumZ(t) {
                    a.checkType(t, "number", "[MapKit] TileOverlay.maximumZ expected a number, but got `" + t + "` instead."),
                    this._maximumZ = Math.ceil(t)
                },
                get opacity() {
                    return this._opacity
                },
                set opacity(t) {
                    a.checkType(t, "number", "[MapKit] TileOverlay.opacity expected a number, but got `" + t + "` instead."),
                    this._opacity = a.clamp(t, 0, 1);
                    t = new n.Event(s.OPACITY_EVENT);
                    t.tileOverlay = this,
                    t.opacity = this._opacity,
                    this._public.dispatchEvent(t)
                },
                get data() {
                    return Object.prototype.hasOwnProperty.call(this, "_data") || (this._data = {}),
                    this._data
                },
                set data(t) {
                    a.checkType(t, "object", "[MapKit] TileOverlay.data expected an Object, but got `" + t + "` instead."),
                    this._data = t
                },
                reload: function() {
                    this.stale = !0;
                    var t = new n.Event(s.RELOAD_EVENT);
                    (t.tileOverlay = this)._public.dispatchEvent(t)
                },
                reloadComplete: function() {
                    this.stale = !1
                },
                urlForImageLoader: function(t, e, i, n) {
                    var o, s;
                    if (this._urlTemplate)
                        return "function" == typeof this._urlTemplate ? r(this._urlTemplate, null, [t, e, i, n, this._data]) : (o = this._urlTemplate.replace(/\{/g, "{{").replace(/\}/g, "}}"),
                        s = {},
                        this._data && Object.keys(this._data).forEach(function(t) {
                            s[t] = this._data[t]
                        }, this),
                        s.x = t,
                        s.y = e,
                        s.z = i,
                        s.scale = n,
                        a.fillTemplate(o, s))
                },
                withCredentials: !1,
                crossOrigin: !1,
                dispatchErrorForURL: function(t) {
                    var e = new n.Event(s.ERROR_EVENT);
                    e.tileOverlay = this._public,
                    e.tileUrl = t,
                    this._public.dispatchEvent(e)
                }
            },
            t.exports = s
        }
        ,
        1930: (t,e,i)=>{
            var n = i(9839)
              , o = i(2221)
              , s = i(6814)
              , a = i(5598);
            function r(t, e) {
                a(this, r) && Object.defineProperty(this, "_impl", {
                    value: new n(this,t,e)
                })
            }
            r.prototype = o.inheritPrototype(s.EventTarget, r, {
                get urlTemplate() {
                    return this._impl.urlTemplate
                },
                set urlTemplate(t) {
                    this._impl.urlTemplate = t
                },
                get minimumZ() {
                    return this._impl.minimumZ
                },
                set minimumZ(t) {
                    this._impl.minimumZ = t
                },
                get maximumZ() {
                    return this._impl.maximumZ
                },
                set maximumZ(t) {
                    this._impl.maximumZ = t
                },
                get opacity() {
                    return this._impl.opacity
                },
                set opacity(t) {
                    this._impl.opacity = t
                },
                get data() {
                    return this._impl.data
                },
                set data(t) {
                    this._impl.data = t
                },
                reload: function() {
                    this._impl.reload()
                }
            }),
            t.exports = r
        }
        ,
        8570: t=>{
            function i(t, e) {
                this.min = t,
                this.max = e
            }
            i.prototype = {
                constructor: i,
                denormalize: function() {
                    var t = this.min.copy()
                      , e = this.max.copy();
                    return e.x < t.x && (e.x += Math.pow(2, t.z)),
                    new i(t,e)
                },
                toString: function() {
                    return this.min.toString() + " -> " + this.max.toString()
                },
                equals: function(t) {
                    var e = this.denormalize()
                      , t = t.denormalize();
                    return t.min.x === e.min.x && t.min.y === e.min.y && t.max.x === e.max.x && t.max.y === e.max.y && t.min.z === e.min.z && t.max.z === e.max.z
                }
            },
            t.exports = i
        }
        ,
        1199: (t,e,i)=>{
            var n = i(7095)
              , o = i(2221)
              , s = i(6426)
              , a = i(2100);
            function r(t, e, i, n, o, s, a) {
                this.key = t,
                this.x = e,
                this.y = i,
                this.z = n,
                this.settings = o,
                this.resolution = s,
                this.priority = a,
                this.tileImages = []
            }
            r.Events = {
                LoadSuccess: "tile-load-success",
                LoadFail: "tile-load-fail"
            },
            r.prototype = o.inheritPrototype(s.EventTarget, r, {
                loading: !1,
                loaded: !1,
                get tileSources() {
                    return (this.settings.showsDefaultTiles ? this.settings.configuration.tileSources : []).concat(this.settings.tileOverlays.map(function(t) {
                        return t._impl
                    }).filter(function(t) {
                        return !!t.urlForImageLoader(this.x, this.y, this.z, this.resolution)
                    }, this)).filter(function(t) {
                        return (this.z >= t.minZoomLevel || "number" != typeof t.minZoomLevel) && (this.z <= t.maxZoomLevel || "number" != typeof t.maxZoomLevel)
                    }, this)
                },
                schedule: function() {
                    this.loaded || (this.tileImages.forEach(function(t) {
                        t.schedule()
                    }),
                    this.loading = !0)
                },
                unschedule: function() {
                    this.tileImages.forEach(function(t) {
                        t.unschedule()
                    }),
                    this.loading = !1
                },
                _loadTileImages: function() {
                    if (!this.loading) {
                        if (this.loaded) {
                            if (!this._containsCanceledTileImages())
                                return;
                            this.tileImages = [],
                            this.loaded = !1
                        }
                        this.loading = !0;
                        var t = this.tileSources;
                        0 !== t.length ? (this._pendingTileImageLoads = t.length,
                        t.forEach(this._loadTileImage, this)) : this._allTileImagesDoneLoading()
                    }
                },
                _loadTileImage: function(t) {
                    var e = this.settings
                      , e = new a(this.x,this.y,this.z,t,e.tint,e.emphasis,e.language,e.showsPOI,e.showsLabels,this.resolution,this.priority);
                    e.schedule(),
                    this.tileImages.push(e),
                    e.whenDoneLoading(this._tileImageDoneLoading.bind(this, t))
                },
                _requestTileImageLoadStatus: function(t, e) {
                    e = o.xhr(e, t.image.src);
                    e.open("GET", t.image.src, !0),
                    e.send()
                },
                _tileImageDoneLoading: function(t, e) {
                    e._loader.state === n.State.Failed && ("function" == typeof t.dispatchErrorForURL ? t.dispatchErrorForURL(e._loader.url) : ((t = new s.Event(r.Events.LoadFail)).tileImage = e,
                    this.dispatchEvent(t))),
                    this._pendingTileImageLoads--,
                    0 === this._pendingTileImageLoads && this._allTileImagesDoneLoading()
                },
                _allTileImagesDoneLoading: function() {
                    delete this._pendingTileImageLoads,
                    this.loading = !1,
                    this.loaded = !0,
                    this._containsCanceledTileImages() || this.dispatchEvent(new s.Event(r.Events.LoadSuccess))
                },
                _containsCanceledTileImages: function() {
                    return this.tileImages.some(function(t) {
                        return t.loaderState === n.State.Canceled
                    })
                }
            }),
            t.exports = r
        }
        ,
        2801: (t,e,i)=>{
            var n = i(5479)
              , s = i(5323)
              , a = i(2221)
              , o = i(5097)
              , r = i(8756)
              , l = i(80)
              , h = i(6376)
              , c = i(1840)
              , d = i(764)
              , u = i(6234)
              , p = Math.pow(1e-4, 2.5);
            function m(t) {
                l.call(this, t),
                this._pinchRecognizer = this.addRecognizer(new s.Pinch),
                this._pinchRecognizer.scaleThreshold = .1,
                this._doubleTapWithOneFingerRecognizer = this.addRecognizer(new s.Tap),
                this._doubleTapWithOneFingerRecognizer.numberOfTouchesRequired = 1,
                this._doubleTapWithOneFingerRecognizer.numberOfTapsRequired = 2,
                this._singleTapWithTwoFingersRecognizer = this.addRecognizer(new s.Tap),
                this._singleTapWithTwoFingersRecognizer.numberOfTouchesRequired = 2,
                this._singleTapWithTwoFingersRecognizer.numberOfTapsRequired = 1,
                this.map.node.element.addEventListener("wheel", this)
            }
            function _(t) {
                return t.state === s.States.Began || t.state === s.States.Changed
            }
            m.prototype = a.inheritPrototype(l, m, {
                decelerating: !1,
                stopDecelerating: function() {
                    this.decelerating && this._decelerationEnded()
                },
                destroy: function() {
                    l.prototype.destroy.call(this),
                    this._integralZoomController && (this._integralZoomController.destroy(),
                    delete this._integralZoomController),
                    clearTimeout(this._wheelEndTimeoutId),
                    delete this._pinchRecognizer,
                    delete this._doubleTapWithOneFingerRecognizer,
                    delete this._singleTapWithTwoFingersRecognizer,
                    this.map.node.element.removeEventListener("wheel", this),
                    this.stopDecelerating()
                },
                get active() {
                    return _(this._pinchRecognizer) || _(this._doubleTapWithOneFingerRecognizer) || _(this._singleTapWithTwoFingersRecognizer)
                },
                handleEvent: function(t) {
                    if ("wheel" !== t.type) {
                        var e = t.target;
                        switch (e) {
                        case this._pinchRecognizer:
                            this._handlePinchChange(e);
                            break;
                        case this._doubleTapWithOneFingerRecognizer:
                            this._handleDoubleTapWithOneFingerChange(e);
                            break;
                        case this._singleTapWithTwoFingersRecognizer:
                            this._handleSingleTapWithTwoFingersChange(e)
                        }
                    } else
                        this._handleWheelEvent(t)
                },
                performScheduledUpdate: function() {
                    var t, e, i;
                    this.decelerating && (t = this.map,
                    (e = Date.now() - this._startTime) >= this._decelerationDuration ? (t.scaleCameraAroundMapPoint(this._adjustedScaleAtDecelerationEnd / this._scale, this._lastScaleCenter),
                    this._decelerationEnded()) : (i = ((e = this._scaleAtTime(e)) - this._initialScale) / (this._scaleAtDecelerationEnd - this._initialScale),
                    e += this._scaleAdjustment * i,
                    t.scaleCameraAroundMapPoint(e / this._scale, this._lastScaleCenter),
                    (i = t.camera.zoom) === t.currentMinZoomLevel || i === this.currentMaxZoomLevel ? this.stopDecelerating() : (this._scale = e,
                    this._schedule())))
                },
                _centerWithRecognizer: function(t) {
                    return this._mapPointFromCentroid(t.locationInElement())
                },
                _mapPointFromCentroid: function(t) {
                    var e = this.map
                      , t = e.node.convertPointFromPage(t)
                      , t = e.camera.transformGestureCenter(t)
                      , i = e.visibleMapRect
                      , e = e.camera.viewportSize;
                    return new n.MapPoint(i.minX() + t.x / e.width * i.size.width,i.minY() + t.y / e.height * i.size.height)
                },
                _handlePinchChange: function(t) {
                    var e, i = this.map, n = i.camera, o = n.zoom;
                    t.state === s.States.Began ? (this._singleTapWithTwoFingersRecognizer.enabled = !1,
                    i.cameraWillStartZooming(c.ZoomTypes.Pinch)) : (t.state === s.States.Ended || t.state === s.States.Changed) && (e = t.scale,
                    this._lastScaleCenter = this.centerForGesture(t),
                    1 < e && o !== i.currentMaxZoomLevel || e < 1 && o !== i.currentMinZoomLevel) && (i.scaleCameraAroundMapPoint(e, this._lastScaleCenter),
                    t.scale = 1),
                    t.state !== s.States.Ended && t.state !== s.States.Failed || (this._singleTapWithTwoFingersRecognizer.enabled = !0,
                    this._startDeceleratingWithVelocity(t.velocity),
                    this.decelerating) || (e = i.snapsToIntegralZoomLevels ? Math.round(o) : o,
                    o === (t = a.clamp(e, i.currentMinZoomLevel, i.currentMaxZoomLevel)) ? i.cameraDidStopZooming() : this._lastScaleCenter ? i.scaleCameraAroundMapPoint(Math.pow(2, t - o), this._lastScaleCenter, !0) : i.setCameraAnimated(new h(n.center,t,n.viewportSize,n.rotation), !0))
                },
                _handleDoubleTapWithOneFingerChange: function(t) {
                    t.state === s.States.Recognized && this._zoomWithTapRecognizer(t, t.modifierKeys.alt)
                },
                _handleSingleTapWithTwoFingersChange: function(t) {
                    t.state === s.States.Recognized && this._zoomWithTapRecognizer(t, !0)
                },
                _handleWheelEvent: function(t) {
                    if (t.ctrlKey || t.shiftKey || this.map.allowWheelToZoom) {
                        t.preventDefault();
                        var e = t.shiftKey && !!t.deltaX && !t.deltaY
                          , i = e ? t.deltaX : t.deltaY;
                        switch (t.deltaMode) {
                        case t.DOM_DELTA_LINE:
                            i *= 100 / 3 * window.devicePixelRatio;
                            break;
                        case t.DOM_DELTA_PAGE:
                            i *= 100 * window.devicePixelRatio
                        }
                        (t.ctrlKey || this.map.allowWheelToZoom && !t.shiftKey || e) && (i *= -1),
                        t.ctrlKey && t.deltaMode === t.DOM_DELTA_PIXEL && (i *= 10);
                        var e = 1 + (0 < i ? Math.sqrt(i) : -Math.sqrt(-i)) * d.WheelZoomFactor
                          , n = this.map;
                        1 < e && n.camera.zoom === n.currentMaxZoomLevel || e < 1 && n.camera.zoom === n.currentMinZoomLevel || (t = new r(t.pageX,t.pageY),
                        this._lastScaleCenter = n.staysCenteredDuringZoom ? n.transformCenter : this._mapPointFromCentroid(t),
                        n.snapsToIntegralZoomLevels ? this._wheelZoomToScaleAndIntegralZoomLevel(e) : this._wheelZoomToScale(e))
                    }
                },
                _wheelZoomToScale: function(t) {
                    var e = this.map;
                    this._wheelZooming || (e.cameraWillStartZooming(c.ZoomTypes.Scroll),
                    this._wheelZooming = !0),
                    e.scaleCameraAroundMapPoint(t, this._lastScaleCenter),
                    this._wheelEndTimeoutId && (clearTimeout(this._wheelEndTimeoutId),
                    this._wheelEndTimeoutId = null),
                    this._wheelEndTimeoutId = setTimeout(function() {
                        this._wheelEndTimeoutId = null,
                        this._wheelZooming = !1,
                        e.cameraDidStopZooming()
                    }
                    .bind(this), d.WheelEventTimeout)
                },
                _wheelZoomToScaleAndIntegralZoomLevel: function(t) {
                    this._integralZoomController || (this._integralZoomController = new u(this.map)),
                    this._integralZoomController.zoomToScale(t, this._lastScaleCenter)
                },
                _zoomWithTapRecognizer: function(t, e) {
                    var i = this.map
                      , n = i.camera.zoom
                      , o = e ? -1 : 1
                      , e = (e ? Math.floor(n + .5) : Math.ceil(n - .5)) + o
                      , o = n - a.clamp(e, i.currentMinZoomLevel, i.currentMaxZoomLevel);
                    Math.abs(o) < .5 || !i.cameraWillStartZooming(c.ZoomTypes.DoubleTap, !0, !0) || i.setCameraAnimated(i.camera.withNewMapRect(i.visibleMapRect.scale(Math.pow(2, o), this.centerForGesture(t))), !0)
                },
                _startDeceleratingWithVelocity: function(t) {
                    Math.abs(t) < 1 || (this.decelerating = !0,
                    this._startTime = Date.now(),
                    this._initialScale = this._scale = 1,
                    this._initialVelocity = t / 1e3,
                    this._decelerationFactor = .98875,
                    this._decelerationDuration = Math.log(p / Math.pow(this._initialVelocity, 2)) / (2 * Math.log(this._decelerationFactor)),
                    this._scaleAtDecelerationEnd = this._scaleAtTime(this._decelerationDuration),
                    this._adjustedScaleAtDecelerationEnd = this._adjustScaleAtDecelerationEnd(this._scaleAtDecelerationEnd / this._scale),
                    this._scaleAdjustment = this._adjustedScaleAtDecelerationEnd - this._scaleAtDecelerationEnd,
                    this._schedule())
                },
                _adjustScaleAtDecelerationEnd: function(t) {
                    var e = this.map
                      , i = e.camera.zoom
                      , t = i + a.log2(t)
                      , n = (e.snapsToIntegralZoomLevels && (n = Math.round(t),
                    i < t && n <= i ? n = Math.ceil(t) : t < i && i <= n && (n = Math.floor(t)),
                    t = n),
                    a.clamp(t, e.currentMinZoomLevel, e.currentMaxZoomLevel));
                    return Math.pow(2, n - i)
                },
                _schedule: function() {
                    o.scheduleOnNextFrame(this)
                },
                _scaleAtTime: function(t) {
                    return Math.max(this._initialScale + this._decelerationFactor * this._initialVelocity * (Math.pow(this._decelerationFactor, t) - 1) / (this._decelerationFactor - 1), 0)
                },
                _decelerationEnded: function() {
                    this.decelerating = !1;
                    var t, e, i = this.map;
                    i.snapsToIntegralZoomLevels && (t = i.camera,
                    e = i.snapsToIntegralZoomLevels ? Math.round(t.zoom) : t.zoom,
                    i.setCameraAnimated(new h(t.center,e,t.viewportSize,t.rotation))),
                    i.cameraDidStopZooming()
                }
            }),
            t.exports = m
        }
        ,
        2640: (t,e,i)=>{
            t.exports = i(4272)
        }
        ,
        6269: (t,e,i)=>{
            var n = i(5097)
              , o = i(4701)
              , s = i(2221);
            function a(t, e) {
                e ? t !== this._targetOpacity && (t !== this.opacity ? (this._targetOpacity = t,
                this._startTime = Date.now(),
                this._startOpacity = this._opacity,
                n.scheduleOnNextFrame(this)) : this._targetOpacity = t) : (this._targetOpacity = t,
                this.opacity = t)
            }
            function r() {
                var t, e, i;
                "function" == typeof this.constructor.prototype.performScheduledUpdate && this.constructor.prototype.performScheduledUpdate.call(this),
                null !== this._targetOpacity && (this._targetOpacity === this.opacity ? (this._startTime = null,
                this._startOpacity = null,
                this._targetOpacity = null) : (e = Date.now() - this._startTime,
                t = this._targetOpacity - this._startOpacity,
                i = Math.abs(t * this._totalDurationMs),
                e = Math.min(e / i, 1),
                i = o.easeInOut(e) * t + this._startOpacity,
                this.opacity = s.clamp(i, 0, 1),
                n.scheduleOnNextFrame(this)))
            }
            t.exports = function(t, e) {
                return t._targetOpacity = null,
                t._startOpacity = null,
                t._startTime = null,
                t._totalDurationMs = e || 300,
                t.setOpacityAnimated = a,
                t.performScheduledUpdate = r,
                t
            }
        }
        ,
        8650: (t,e,i)=>{
            var n = i(9858)
              , o = i(462)
              , i = i(2221);
            function s() {
                o.BaseNode.call(this),
                this._legend = null,
                this._segmentWidth = 0,
                this._segmentStart = 0,
                this._numberOfSegments = 0,
                this._fillColor = null,
                this._strokeColor = null,
                this._renderer = new n(this)
            }
            s.prototype = i.inheritPrototype(o.BaseNode, s, {
                get leftAligned() {
                    return this._leftAligned
                },
                set leftAligned(t) {
                    this._leftAligned = t,
                    this.needsDisplay = !0
                },
                get legend() {
                    return this._legend
                },
                set legend(t) {
                    this._legend = t,
                    this.needsDisplay = !0
                },
                get segmentStart() {
                    return this._segmentStart
                },
                set segmentStart(t) {
                    this._segmentStart = t,
                    this.needsDisplay = !0
                },
                get segmentWidth() {
                    return this._segmentWidth
                },
                set segmentWidth(t) {
                    this._segmentWidth = t,
                    this.needsDisplay = !0
                },
                get numberOfSegments() {
                    return this._numberOfSegments
                },
                set numberOfSegments(t) {
                    this._numberOfSegments = t,
                    this.needsDisplay = !0
                },
                get fillColor() {
                    return this._fillColor
                },
                set fillColor(t) {
                    this._fillColor = t,
                    this.needsDisplay = !0
                },
                get strokeColor() {
                    return this._strokeColor
                },
                set strokeColor(t) {
                    this._strokeColor = t,
                    this.needsDisplay = !0
                },
                stringInfo: function() {
                    var t = "~" + this.fillColor + "/" + this.strokeColor + "~ "
                      , e = this.leftAligned ? "" : ", rtl";
                    return this._legend ? "LegendNode<labels:[" + this._legend.labels.slice(0, this.numberOfSegments + 1).join(", ") + "], unit:" + this._legend.unit + e + ")> " + t : "LegendNode " + t
                },
                measureTextOverflow: function(t, e) {
                    return this._renderer.measureTextOverflow(t, e)
                }
            }),
            t.exports = s
        }
        ,
        717: (t,e,i)=>{
            var n = i(6269)
              , o = i(9849)
              , s = i(9671)
              , i = i(2221);
            function a() {
                s.call(this),
                n(this, o.InnerTransitionDuration),
                this.lineWidth = o.OutlineWidth
            }
            a.prototype = i.inheritPrototype(s, a, {
                stringInfo: function() {
                    return "OutlineNode ~" + this.strokeColor + "~ "
                }
            }),
            t.exports = a
        }
        ,
        9671: (t,e,i)=>{
            var n = i(5554)
              , o = i(462)
              , i = i(2221);
            function s() {
                o.BaseNode.call(this),
                this._fillColor = null,
                this._strokeColor = null,
                this._lineWidth = null,
                this._innerStroke = !1,
                this._renderer = new n(this)
            }
            s.prototype = i.inheritPrototype(o.BaseNode, s, {
                get fillColor() {
                    return this._fillColor
                },
                set fillColor(t) {
                    this._fillColor = t,
                    this.needsDisplay = !0
                },
                get strokeColor() {
                    return this._strokeColor
                },
                set strokeColor(t) {
                    this._strokeColor = t,
                    this.needsDisplay = !0
                },
                get innerStroke() {
                    return this._innerStroke
                },
                set innerStroke(t) {
                    this._innerStroke = t,
                    this.needsDisplay = !0
                },
                get lineWidth() {
                    return this._lineWidth
                },
                set lineWidth(t) {
                    this._lineWidth = t,
                    this.needsDisplay = !0
                }
            }),
            t.exports = s
        }
        ,
        9858: (t,e,i)=>{
            var r = i(9849)
              , n = i(462)
              , i = i(2221);
            function o(t) {
                n.RenderItem.call(this, t)
            }
            o.prototype = i.inheritPrototype(n.RenderItem, o, {
                measureTextOverflow: function(t, e) {
                    var i, n = this._node;
                    return n.legend ? (t.font = r.LegendFont,
                    i = e ? n.legend.labels[0] : n.legend.labels[n.numberOfSegments],
                    t.measureText(i).width / 2 + (e ? 0 : t.measureText(" " + n.legend.unit).width)) : 0
                },
                draw: function(t) {
                    var e = this._node;
                    if (e.legend) {
                        t.font = r.LegendFont,
                        t.textAlign = "center",
                        t.textBaseline = "bottom",
                        t.lineWidth = r.LegendOuterStrokeWidth,
                        t.fillStyle = e.fillColor,
                        t.strokeStyle = e.strokeColor;
                        for (var i = e.size.height - r.LegendMarginBottom - r.LegendSpacing, n = e.segmentStart, o = 0; o <= e.numberOfSegments; o++) {
                            var s = e.legend.labels[o];
                            t.strokeText(s, n, i),
                            t.fillText(s, n, i),
                            this.node.leftAligned ? o === e.numberOfSegments ? n += t.measureText(s).width / 2 : n += e.segmentWidth : o === e.numberOfSegments ? n -= t.measureText(s).width / 2 : n -= e.segmentWidth
                        }
                        var a = " " + e.legend.unit;
                        t.textAlign = this.node.leftAligned ? "left" : "right",
                        t.strokeText(a, n, i),
                        t.fillText(a, n, i)
                    }
                }
            }),
            t.exports = o
        }
        ,
        5554: (t,e,i)=>{
            var n = i(462)
              , o = i(2221)
              , s = i(4701);
            function a(t) {
                n.RenderItem.call(this, t)
            }
            a.prototype = o.inheritPrototype(n.RenderItem, a, {
                draw: function(t) {
                    var e = this._node
                      , i = e.fillColor
                      , n = e.strokeColor
                      , o = e.lineWidth;
                    i && (t.fillStyle = i,
                    t.fillRect(0, 0, e.size.width, e.size.height)),
                    n && o && (1 <= o || 1 < s.devicePixelRatio) && (t.lineWidth = o,
                    t.strokeStyle = n,
                    e.innerStroke ? t.strokeRect(o / 2, o / 2, e.size.width - o, e.size.height - o) : t.strokeRect(-o / 2, -o / 2, e.size.width + o, e.size.height + o))
                }
            }),
            t.exports = a
        }
        ,
        9849: t=>{
            t.exports = {
                GlobalFadeDuration: 700,
                InnerTransitionDuration: 200,
                MinimumNumberOfSegments: 2,
                MaximumNumberOfSegments: 5,
                MagicNumbers: [1.25, 2.5, 5],
                FirstMagicExponent: -3,
                LastMagicExponent: 7,
                MaximumNumberOfDisplayedSegments: 3,
                SegmentThickness: 3,
                LegendHorizontalMargin: 6,
                LegendMarginBottom: 8,
                LegendSpacing: 1,
                OutlineWidth: 1,
                LightSegmentColorRegular: "rgba(255, 255, 255, 0.7)",
                DarkSegmentColorRegular: "rgba(0, 0, 0, 0.73)",
                OutlineColorRegular: "rgba(255, 255, 255, 0.5)",
                LightSegmentColorSatellite: "rgba(255, 255, 255, 0.8)",
                DarkSegmentColorSatellite: "rgba(178, 178, 178, 0.8)",
                OutlineColorSatellite: "rgba(0, 0, 0, 1)",
                SegmentInnerStrokeColor: "rgba(0, 0, 0, 0.2)",
                SegmentInnerStrokeWidth: .5,
                LegendFont: "9px '-apple-system-font', 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif'",
                LegendColorRegular: "rgba(72, 69, 65, 1)",
                LegendOuterStrokeColorRegular: "rgba(255, 255, 255, 0.5)",
                LegendColorSatellite: "rgba(255, 255, 255, 1)",
                LegendOuterStrokeColorSatellite: "rgba(0, 0, 0, 1)",
                LegendOuterStrokeWidth: 1,
                MetersThreshold: 500,
                FeetThreshold: .25,
                MilesToMeters: 1609.344,
                MetersToMiles: 1 / 1609.344,
                MilesToFeet: 5280
            }
        }
        ,
        4272: (t,e,i)=>{
            var n = i(6269)
              , h = i(9849)
              , o = i(8650)
              , s = i(717)
              , r = i(9842)
              , a = i(5097)
              , l = i(462)
              , c = i(9338)
              , i = i(2221);
            function d() {
                l.GroupNode.call(this),
                this._needsLayout = !1,
                this._layoutCanvas = document.createElement("canvas"),
                this._layoutContext = this._layoutCanvas.getContext("2d"),
                this._distance = 0,
                this._mapWidth = 0,
                this._theme = d.Themes.light,
                this._leftAligned = !1,
                this._l10n = null,
                this._segmentWidth = 0,
                this._oldNumberOfSegments = 0,
                this._legend = {
                    labels: [],
                    unit: ""
                },
                this._legendNode = this.addChild(new o),
                this._outlineNodes = [0, 1].map(function() {
                    return this.addChild(new s)
                }, this),
                this._activeOutlineNode = this._outlineNodes[0],
                this._outlineNodes[1].opacity = 0,
                this._segmentNodes = [0, 1, 2].map(function(t) {
                    return this.addChild(new c)
                }, this),
                this._updateColors(),
                n(this, h.GlobalFadeDuration)
            }
            d.Themes = {
                light: "Light",
                dark: "Dark"
            },
            d.prototype = i.inheritPrototype(l.GroupNode, d, {
                get layerBounds() {
                    return new r(0,0,this.size.width,Math.max(this.size.height, 48))
                },
                get distance() {
                    return this._distance
                },
                set distance(t) {
                    Math.abs(t - this._distance) / this._distance < .01 || (this._distance = t,
                    this._computeSegments())
                },
                get mapWidth() {
                    return this._mapWidth
                },
                set mapWidth(t) {
                    t !== this._mapWidth && (this._mapWidth = t,
                    this._computeSegments())
                },
                get theme() {
                    return this._theme
                },
                set theme(t) {
                    this._theme = t,
                    this._updateColors()
                },
                get l10n() {
                    return this._l10n
                },
                set l10n(t) {
                    this._l10n && this._l10n.removeEventListener(this._l10n.Events.LocaleChanged, this),
                    (this._l10n = t) && t.addEventListener(t.Events.LocaleChanged, this)
                },
                get useMetric() {
                    return this._useMetric
                },
                set useMetric(t) {
                    this._useMetric !== t && (this._useMetric = t,
                    this._computeSegments())
                },
                get leftAligned() {
                    return this._leftAligned
                },
                set leftAligned(t) {
                    this._leftAligned = t,
                    this.needsLayout = !0
                },
                stringInfo: function() {
                    return "ScaleNode<distance:" + Math.round(100 * this.distance) / 100 + "m>"
                },
                get needsLayout() {
                    return this._needsLayout
                },
                set needsLayout(t) {
                    this._needsLayout !== t && (this._needsLayout = t) && a.scheduleASAP(this)
                },
                performScheduledUpdate: function() {
                    this.needsLayout && (this.layoutSubNodes(),
                    this.needsLayout = !1)
                },
                layoutSubNodes: function() {
                    for (var t = this._computeSegmentsRects(), e = 0; e < h.MaximumNumberOfDisplayedSegments; e++) {
                        var i = t[e]
                          , n = this._segmentNodes[e];
                        i ? (n.position = i.origin,
                        n.size = i.size,
                        n.setOpacityAnimated(1, !0)) : n.setOpacityAnimated(0, !0)
                    }
                    var o = r.unionOfRects(t).round()
                      , s = (t.length !== this._oldNumberOfSegments && (this._activeOutlineNode.setOpacityAnimated(0, !0),
                    s = 0 === this._outlineNodes.indexOf(this._activeOutlineNode) ? 1 : 0,
                    this._activeOutlineNode = this._outlineNodes[s],
                    this._activeOutlineNode.setOpacityAnimated(1, !0)),
                    this._activeOutlineNode.position = o.origin,
                    this._activeOutlineNode.size = o.size,
                    t[0]);
                    this._legendNode.segmentStart = this.leftAligned ? s.origin.x : s.origin.x + s.size.width,
                    this._legendNode.leftAligned = this.leftAligned,
                    this._legendNode.segmentWidth = s.size.width,
                    this._legendNode.size.width = this.size.width,
                    this._legendNode.size.height = this.size.height,
                    this._oldNumberOfSegments = t.length
                },
                handleEvent: function(t) {
                    this._computeSegments()
                },
                _updateColors: function(t) {
                    var i = this.theme === d.Themes.dark
                      , n = (this._legendNode.fillColor = i ? h.LegendColorSatellite : h.LegendColorRegular,
                    this._legendNode.strokeColor = i ? h.LegendOuterStrokeColorSatellite : h.LegendOuterStrokeColorRegular,
                    i ? [h.LightSegmentColorSatellite, h.DarkSegmentColorSatellite] : [h.DarkSegmentColorRegular, h.LightSegmentColorRegular])
                      , e = (this._segmentNodes.forEach(function(t, e) {
                        t.fillColor = n[e % 2],
                        t.strokeColor = i ? null : h.SegmentInnerStrokeColor
                    }, this),
                    i ? h.OutlineColorSatellite : h.OutlineColorRegular);
                    this._outlineNodes.forEach(function(t) {
                        t.strokeColor = e
                    })
                },
                _computeSegments: function() {
                    if (0 !== this.size.width && 0 !== this.mapWidth && this._l10n) {
                        var e, t = this.size.width, i = this.mapWidth, n = this.distance * t / i, i = !this._useMetric, o = !1, s = 1;
                        i && (n *= h.MetersToMiles) < h.FeetThreshold && (o = !0,
                        n *= h.MilesToFeet);
                        for (var a = h.FirstMagicExponent, r = !1; !r && a < h.LastMagicExponent; a++)
                            r = h.MagicNumbers.some(l);
                        this._segmentWidth = s ? t / s : 0;
                        t = e;
                        i && (o && (e /= h.MilesToFeet),
                        e *= h.MilesToMeters),
                        this._computeLegend(e, t, o)
                    }
                    function l(t) {
                        return e = t * Math.pow(10, a),
                        (s = n / e) >= h.MinimumNumberOfSegments && s < h.MaximumNumberOfSegments
                    }
                },
                _computeLegend: function(t, e, i) {
                    var n, o = 0, o = this._useMetric ? t > h.MetersThreshold ? (this._legend.unit = this._l10n.get("Scale.Kilometer.Short"),
                    t / 1e3) : (this._legend.unit = this._l10n.get("Scale.Meter.Short"),
                    t) : (this._legend.unit = i ? this._l10n.get("Scale.Feet.Short") : this._l10n.get("Scale.Mile.Short"),
                    e), s = [];
                    "object" == typeof Intl && Intl.NumberFormat && (n = new Intl.NumberFormat(this._l10n.activeLocale.localeId));
                    for (var a = 0; a < h.MaximumNumberOfSegments; a++) {
                        var r = a * o
                          , r = n ? n.format(r) : r.toString();
                        s.push(r)
                    }
                    this._legend.labels = s,
                    this._legendNode.legend = this._legend,
                    this.needsLayout = !0
                },
                _computeSegmentsRects: function() {
                    for (var t = this._layoutContext, e = this.leftAligned ? h.LegendHorizontalMargin + this._legendNode.measureTextOverflow(t, !0) : this.size.width - h.LegendHorizontalMargin - this._legendNode.measureTextOverflow(t, !0), i = this.size.height - h.LegendMarginBottom + h.LegendSpacing, n = this._segmentWidth, o = [], s = 0; s < h.MaximumNumberOfDisplayedSegments; s++) {
                        var a = new r(this.leftAligned ? e : e - n,i,n,h.SegmentThickness).round()
                          , a = (o.push(a),
                        e = this.leftAligned ? a.origin.x + a.size.width : a.origin.x,
                        this._legendNode.numberOfSegments = o.length,
                        n + this._legendNode.measureTextOverflow(t) + h.LegendHorizontalMargin);
                        if (this.leftAligned && e + a > this.size.width)
                            break;
                        if (!this.leftAligned && e - a < 0)
                            break
                    }
                    return 0 === this._oldNumberOfSegments && (this._oldNumberOfSegments = o.length),
                    o
                }
            }),
            t.exports = d
        }
        ,
        9338: (t,e,i)=>{
            var n = i(6269)
              , o = i(9849)
              , s = i(9671)
              , i = i(2221);
            function a() {
                s.call(this),
                n(this, o.InnerTransitionDuration),
                this.lineWidth = o.SegmentInnerStrokeWidth,
                this.innerStroke = !0
            }
            a.prototype = i.inheritPrototype(s, a, {
                stringInfo: function() {
                    return "SegmentNode ~" + this.fillColor + "~ "
                }
            }),
            t.exports = a
        }
        ,
        462: (t,e,i)=>{
            t.exports = {
                Scene: i(7730),
                BaseNode: i(6009),
                GroupNode: i(2514),
                ImageNode: i(4621),
                RenderItem: i(829),
                NodeAnimator: i(6490),
                Size: i(3045),
                Point: i(8756),
                Matrix: i(5348)
            }
        }
        ,
        6495: (t,e,i)=>{
            var n = i(5097)
              , s = [];
            function o() {
                var t = s;
                s = [];
                for (var e = [], i = 0, n = t.length; i < n; ++i) {
                    var o = t[i].scene;
                    o && a(e, o) && o.renderer.update()
                }
            }
            function a(t, e) {
                return -1 === t.indexOf(e) && (t.push(e),
                1)
            }
            t.exports = {
                scheduleNode: function(t) {
                    a(s, t) && 1 === s.length && n.scheduleDraw(o)
                }
            }
        }
        ,
        6009: (t,e,i)=>{
            var n = i(3045)
              , p = i(8756)
              , m = i(9842)
              , o = i(5348)
              , s = i(1055)
              , a = i(6495)
              , r = (new o).toString();
            function l() {
                this._parent = null,
                this._children = [],
                this._renderer = null,
                this._opacity = 1,
                this._size = new n,
                this._position = new p,
                this._transform = new o,
                this._frozen = !1,
                this._keyForFrozenLayer = "",
                this._wantsLayerBacking = !1
            }
            function h(t) {
                t._parent = null;
                for (var e = [t]; 0 < e.length; ) {
                    var i = e.pop();
                    i.wasRemoved(),
                    i._renderer && "function" == typeof i._renderer.nodeWasRemoved && i._renderer.nodeWasRemoved(),
                    Array.prototype.push.apply(e, i.children)
                }
            }
            function c(t) {
                for (var e = null, i = 0, n = 0; t && !e; ) {
                    var o = t.transform.transformPoint(t.position);
                    i -= o.x,
                    n -= o.y,
                    e = (t = t.parent).element
                }
                return {
                    element: e,
                    offsetX: i,
                    offsetY: n
                }
            }
            l.prototype = {
                constructor: l,
                get scene() {
                    for (var t = i(7730), e = this; e; e = e._parent)
                        if (e instanceof t)
                            return e
                },
                get renderer() {
                    return this._renderer
                },
                get wantsLayerBacking() {
                    return !!this.keyForFrozenLayer || this._frozen || this._wantsLayerBacking || this._needsLayerBacking()
                },
                set wantsLayerBacking(t) {
                    t !== this._wantsLayerBacking && (this._wantsLayerBacking = t,
                    this.needsDisplay = !0)
                },
                get frozen() {
                    return !!this.keyForFrozenLayer || this._frozen
                },
                set frozen(t) {
                    t !== this._frozen && (this._frozen = t,
                    this.needsDisplay = !0)
                },
                get keyForFrozenLayer() {
                    return this._keyForFrozenLayer
                },
                set keyForFrozenLayer(t) {
                    t !== this._keyForFrozenLayer && (this._keyForFrozenLayer = t,
                    this.needsDisplay = !0)
                },
                get opacity() {
                    return this._opacity
                },
                set opacity(t) {
                    (t = Math.min(Math.max(0, t), 1)) !== this._opacity && (this._opacity = t,
                    this.needsDisplay = !0)
                },
                get position() {
                    return this._position
                },
                set position(t) {
                    t.equals(this._position) || (this._position = t.copy(),
                    this.needsDisplay = !0)
                },
                get transform() {
                    return this._transform
                },
                set transform(t) {
                    this._transform = t,
                    this.needsDisplay = !0
                },
                get size() {
                    return this._size
                },
                set size(t) {
                    this._size = t || new n,
                    this.needsDisplay = !0
                },
                get bounds() {
                    return new m(this._position.x,this._position.y,this.size.width,this.size.height)
                },
                get layerBounds() {
                    for (var t = new m(0,0,this.size.width,this.size.height), e = this._children, i = 0, n = e.length; i < n; ++i) {
                        var o = e[i]
                          , s = o.layerBounds;
                        s.origin.x += o._position.x,
                        s.origin.y += o._position.y;
                        for (var o = o.transform, a = [o.transformPoint(new p(s.minX(),s.minY())), o.transformPoint(new p(s.maxX(),s.minY())), o.transformPoint(new p(s.maxX(),s.maxY())), o.transformPoint(new p(s.minX(),s.maxY()))], r = a[0].x, l = a[0].y, h = a[0].x, c = a[0].y, d = 1; d < a.length; ++d) {
                            var u = a[d];
                            u.x < r && (r = u.x),
                            u.x > h && (h = u.x),
                            u.y < l && (l = u.y),
                            u.y > c && (c = u.y)
                        }
                        t = t.unionWithRect(new m(r,l,h - r,c - l))
                    }
                    return t
                },
                set needsDisplay(t) {
                    t && a.scheduleNode(this)
                },
                get parent() {
                    return this._parent
                },
                get children() {
                    return this._children
                },
                set children(t) {
                    for (var e = 0, i = 0, n = [].concat(this._children); e < t.length; )
                        n[i] !== t[e] ? n[i] && -1 === t.indexOf(n[i]) ? (this.removeChild(n[i]),
                        i++) : (t[e]._parent === this && n.splice(n.indexOf(t[e]), 1),
                        this.addChild(t[e], e),
                        e++) : (e++,
                        i++);
                    for (; i < n.length; )
                        this.removeChild(n[i]),
                        i++
                },
                get childCount() {
                    return this._children.length
                },
                get firstChild() {
                    return this._children[0] || null
                },
                get lastChild() {
                    return this._children[this._children.length - 1] || null
                },
                get previousSibling() {
                    var t, e;
                    return this._parent && 0 < (e = (t = this._parent._children).indexOf(this)) ? t[e - 1] : null
                },
                get nextSibling() {
                    var t, e;
                    return this._parent && -1 !== (e = (t = this._parent._children).indexOf(this)) && e < t.length - 1 ? t[e + 1] : null
                },
                toString: function() {
                    var e = "";
                    return this.element && (e += "🏷 "),
                    this.wantsLayerBacking && (e += "🏁 "),
                    this.frozen && (e += "❄️ ",
                    this.keyForFrozenLayer) && (e += "<" + this.keyForFrozenLayer + ">"),
                    this.stringInfo && "function" == typeof this.stringInfo ? e += this.stringInfo() : e += "UnknownNode",
                    0 === this.position.x && 0 === this.position.y || (e += " (" + this.position.x + ", " + this.position.y + ")"),
                    "number" == typeof this.repeatOffset && (e += (0 < this.repeatOffset ? "+" : "") + this.repeatOffset + " "),
                    0 === this.size.width && 0 === this.size.height || (e += " " + this.size.width + "x" + this.size.height),
                    1 !== this.opacity && (e += " [opacity:" + this.opacity + "]"),
                    this.transform.toString() !== r && (e += " [" + this.transform.toString() + "]"),
                    this.animators && this.animators.forEach(function(t) {
                        e += " " + t.stringInfo()
                    }),
                    e
                },
                dump: function(t, e) {
                    return function t(e, i, n, o, s) {
                        var a = "";
                        if (a += i,
                        s && (a += n < 0 ? "" : n + ":"),
                        a = (a += e.toString()) + (e.childCount < 1 ? "" : " ⤵︎ " + e.childCount),
                        e.extraInfo && "function" == typeof e.extraInfo && e.extraInfo().forEach(function(t) {
                            a += "\n" + i + "| " + t
                        }),
                        0 !== o)
                            for (var r = e.children, l = 0, h = r.length; l < h; ++l)
                                var c = e.childCount < 1 ? -1 : l
                                  , a = (a += "\n") + t(r[l], i + "    ", c, o - 1, s);
                        return a
                    }(this, "", -1, t = void 0 === t ? 1 / 0 : t, !!e)
                },
                addChild: function(t, e) {
                    return t.remove(),
                    (void 0 === e || e < 0 || e > this._children.length) && (e = this._children.length),
                    this._children.splice(e, 0, t),
                    (t._parent = this).needsDisplay = !0,
                    t
                },
                insertBefore: function(t, e) {
                    return this.addChild(t, this._children.indexOf(e))
                },
                insertAfter: function(t, e) {
                    return this.addChild(t, this._children.indexOf(e) + 1)
                },
                removeChild: function(t) {
                    if (t._parent === this) {
                        var e = this._children.indexOf(t);
                        if (-1 !== e)
                            return this._children.splice(e, 1),
                            h(t),
                            this.needsDisplay = !0,
                            t
                    }
                },
                replaceChild: function(t, e) {
                    var i;
                    if (e && e._parent === this)
                        return i = this._children.indexOf(e),
                        t.remove(),
                        this._children.splice(i, 1, t),
                        h(e),
                        (t._parent = this).needsDisplay = !0,
                        e
                },
                remove: function() {
                    if (this._parent instanceof l)
                        return this._parent.removeChild(this)
                },
                wasRemoved: function() {},
                convertPointFromPage: function(t) {
                    var e;
                    return this.element ? s.fromPageToElement(this.element, t) : (e = c(this),
                    t = s.fromPageToElement(e.element, t),
                    new p(t.x + e.offsetX,t.y + e.offsetY))
                },
                convertPointToPage: function(t) {
                    var e;
                    return this.element ? s.fromElementToPage(this.element, t) : (e = c(this),
                    t = s.fromElementToPage(e.element, t),
                    new p(t.x - e.offsetX,t.y - e.offsetY))
                },
                _needsLayerBacking: function() {
                    return this.opacity < 1 && (1 < this._children.length || 1 === this._children.length && 0 < this._children[0]._children.length)
                }
            },
            t.exports = l
        }
        ,
        2514: (t,e,i)=>{
            var n = i(6009)
              , o = i(829)
              , i = i(2221);
            function s() {
                n.call(this),
                this._renderer = new o(this)
            }
            s.prototype = i.inheritPrototype(n, s, {
                stringInfo: function() {
                    return "GroupNode"
                }
            }),
            t.exports = s
        }
        ,
        4621: (t,e,i)=>{
            var n = i(3045)
              , o = i(2221)
              , s = i(6009)
              , a = i(7616);
            function r() {
                s.call(this),
                this._image = null,
                this._renderer = new a(this)
            }
            r.prototype = o.inheritPrototype(s, r, {
                get image() {
                    return this._image
                },
                set image(t) {
                    this._image !== t && (this._image && this._image.removeEventListener("load", this),
                    this._image = t,
                    this._imageDidLoad(),
                    !t || t.src && t.complete || t.addEventListener("load", this))
                },
                stringInfo: function() {
                    var t = this._image ? this._image.src : null;
                    return "ImageNode" + (t ? "<src:" + t + ">" : "")
                },
                handleEvent: function(t) {
                    t.target === this._image && this._image.complete && (this._image.removeEventListener("load", this),
                    this._imageDidLoad(),
                    this.needsDisplay = !0)
                },
                _imageDidLoad: function() {
                    this.size.equals(n.Zero) && (this.size = new n(this._image.width,this._image.height)),
                    this.needsDisplay = !0
                }
            }),
            t.exports = r
        }
        ,
        7730: (t,e,i)=>{
            var n = i(6009)
              , o = i(5995)
              , i = i(2221);
            function s() {
                n.call(this),
                this._renderer = new o(this)
            }
            s.prototype = i.inheritPrototype(n, s, {
                get element() {
                    return this._renderer.element
                },
                destroy: function() {
                    this.children = [],
                    this._renderer._ctx = null,
                    this._renderer._canvas.width = this._renderer._canvas.height = 0
                },
                stringInfo: function() {
                    return "Scene"
                }
            }),
            t.exports = s
        }
        ,
        6490: (t,e,i)=>{
            var n = i(8756)
              , o = i(5348)
              , s = i(5097)
              , a = i(2221);
            function r(e) {
                this.node = e.node,
                this.node.animators || (this.node.animators = []),
                this.node.animators.push(this),
                this.duration = e.duration,
                ["from", "to", "done"].forEach(function(t) {
                    t in e && null != e[t] && (this[t] = e[t])
                }, this)
            }
            function l(t) {
                r.call(this, t)
            }
            function h(t) {
                t.pop && (this.springSolver = new u(1,this.STIFFNESS,this.DAMPING,0)),
                r.call(this, t)
            }
            function c(t) {
                r.call(this, t),
                t.center && (this.center = t.center)
            }
            function d(t) {
                this.popAnimationDone = t.done || a.noop,
                delete t.done,
                t.duration *= this.FLOAT_DURATION_SCALE,
                r.call(this, t),
                t.center && (this.center = t.center),
                t.floatCenter && (this.floatCenter = t.floatCenter),
                this.popSpringSolver = new u(1,this.SCALE_STIFFNESS,this.SCALE_DAMPING,0),
                t.to > t.from && (this.swayAmplitude = (Math.random() < .5 ? -1 : 1) * (3 + 3 * Math.random()),
                this.rotateSpringSolver = new u(1,this.ROTATE_STIFFNESS,this.ROTATE_DAMPING,0))
            }
            function u(t, e, i, n) {
                this.w0 = Math.sqrt(e / t),
                this.zeta = i / (2 * Math.sqrt(e * t)),
                this.zeta < 1 ? (this.wd = this.w0 * Math.sqrt(1 - this.zeta * this.zeta),
                this.A = 1,
                this.B = (this.zeta * this.w0 - n) / this.wd) : (this.wd = 0,
                this.A = 1,
                this.B = -n + this.w0)
            }
            r.prototype = {
                from: 0,
                to: 1,
                done: a.noop,
                begin: function() {
                    return this.beginDate = Date.now(),
                    s.scheduleASAP(this),
                    this
                },
                end: function() {
                    this.node.animators.splice(this.node.animators.indexOf(this), 1),
                    0 === this.node.animators.length && delete this.node.animators,
                    delete this.beginDate,
                    this.done(this)
                },
                performScheduledUpdate: function() {
                    this.beginDate && (this._p = Math.min((Date.now() - this.beginDate) / this.duration, 1),
                    this.update(this._p),
                    this._p < 1 ? s.scheduleOnNextFrame(this) : this.end())
                },
                valueAt: function(t) {
                    return this.from + t * (this.to - this.from)
                },
                stringInfo: function(t, e) {
                    t = "🏇" + t + "<" + this.duration + "ms; " + this.from + "→" + this.to;
                    return 0 <= this._p && (t += "/" + Math.round(100 * this._p) + "%"),
                    Object.prototype.hasOwnProperty.call(this, "done") && (t += "*"),
                    t + (e || "") + ">"
                }
            },
            l.prototype = a.inheritPrototype(r, l, {
                update: function(t) {
                    this.node.opacity = this.valueAt(t)
                },
                stringInfo: function() {
                    return r.prototype.stringInfo.call(this, "opacity")
                }
            }),
            h.prototype = a.inheritPrototype(r, h, {
                from: new n(0,0),
                to: new n(0,0),
                STIFFNESS: 100,
                DAMPING: 10,
                update: function(t) {
                    this.springSolver && (t = this.springSolver.solve(t)),
                    this.node.transform = (new o).translate(this.from.x + t * (this.to.x - this.from.x), this.from.y + t * (this.to.y - this.from.y))
                },
                end: function() {
                    this.node.transform = (new o).translate(this.to.x, this.to.y),
                    r.prototype.end.call(this)
                },
                stringInfo: function() {
                    return r.prototype.stringInfo.call(this, "translation")
                }
            }),
            c.prototype = a.inheritPrototype(r, c, {
                center: new n(0,0),
                scale: function(t) {
                    var e = this.center.x
                      , i = this.center.y;
                    this.node.transform = (new o).translate(e, i).scale(t).translate(-e, -i)
                },
                update: function(t) {
                    this.scale(this.valueAt(t))
                },
                stringInfo: function() {
                    var t = "";
                    return 0 === this.center.x && 0 === this.center.y || (t += " (" + this.center.x + ", " + this.center.y + ")"),
                    r.prototype.stringInfo.call(this, "scale", t)
                }
            }),
            d.prototype = a.inheritPrototype(r, d, {
                center: new n(0,0),
                SCALE_STIFFNESS: 100,
                SCALE_DAMPING: 10,
                FLOAT_DURATION_SCALE: 4.2,
                ROTATE_DAMPING: 5,
                ROTATE_STIFFNESS: 127.15275,
                scaleAndRotate: function(t, e) {
                    var i = this.center.x
                      , n = this.center.y;
                    this.floatCenter ? this.node.transform = (new o).translate(this.floatCenter.x, this.floatCenter.y).rotate(e).translate(-this.floatCenter.x, -this.floatCenter.y).translate(i, n).scale(t).translate(-i, -n) : this.node.transform = (new o).translate(i, n).scale(t).rotate(e).translate(-i, -n)
                },
                update: function(t) {
                    var e = t * this.FLOAT_DURATION_SCALE
                      , i = this.valueAt(this.popSpringSolver.solve(e))
                      , n = 0;
                    this.rotateSpringSolver && (n = (this.rotateSpringSolver.solve(t) - 1) * this.swayAmplitude),
                    this.scaleAndRotate(i, n),
                    1 < e && !this.popAnimationDoneCalled && (this.popAnimationDoneCalled = !0,
                    this.popAnimationDone(this))
                },
                end: function() {
                    this.scaleAndRotate(this.to, 0),
                    r.prototype.end.call(this),
                    this.popAnimationDoneCalled || this.popAnimationDone(this)
                },
                stringInfo: function() {
                    var t = ""
                      , e = (0 === this.center.x && 0 === this.center.y || (t += " (" + this.center.x + ", " + this.center.y + ")"),
                    "float");
                    return this.popAnimationDoneCalled && (e += " (swing)"),
                    r.prototype.stringInfo.call(this, e, t)
                }
            }),
            u.prototype.solve = function(t) {
                return 1 - (this.zeta < 1 ? Math.exp(-t * this.zeta * this.w0) * (this.A * Math.cos(this.wd * t) + this.B * Math.sin(this.wd * t)) : (this.A + this.B * t) * Math.exp(-t * this.w0))
            }
            ,
            t.exports = {
                Basic: r,
                Opacity: l,
                Translation: h,
                Scale: c,
                Float: d
            }
        }
        ,
        7616: (t,e,i)=>{
            var n = i(829)
              , i = i(2221);
            function o(t) {
                n.call(this, t)
            }
            o.prototype = i.inheritPrototype(n, o, {
                _lastDrawnImage: null,
                draw: function(t) {
                    this._node.image && (this._node.image.complete && this._node.image.naturalWidth ? (this._lastDrawnImage = this._node.image,
                    t.drawImage(this._node.image, 0, 0, this._node.size.width, this._node.size.height)) : this._node.image === this._lastDrawnImage && (this._node.needsDisplay = !0))
                }
            }),
            t.exports = o
        }
        ,
        829: (t,e,i)=>{
            var n = i(2221)
              , o = i(4701);
            function s(t) {
                this._node = t,
                this._layer = null
            }
            var a = {}
              , r = (s.prototype = {
                constructor: s,
                get node() {
                    return this._node
                },
                get shouldDraw() {
                    var t = this._node.keyForFrozenLayer;
                    return !(this._frozenLayer && (!this._sharedLayer || this._sharedLayer.key === t) || t && a[t])
                },
                get layer() {
                    var t = this._node
                      , e = t.frozen
                      , i = t.keyForFrozenLayer;
                    if (e) {
                        if (this._frozenLayer) {
                            if (!i || !this._sharedLayer || this._sharedLayer.key === i)
                                return this._frozenLayer;
                            this.releaseLayer()
                        }
                        if (i) {
                            var n = a[i];
                            if (n && n.key === i)
                                return this._sharedLayer = n,
                                this._layer = this._frozenLayer = n.canvas,
                                ++n.count,
                                n.canvas
                        }
                    }
                    delete this._frozenLayer,
                    this._layer || (this._layer = this.createCanvas(),
                    i && (this._sharedLayer = a[i] = {
                        canvas: this._layer,
                        count: 1,
                        key: i
                    }));
                    n = o.devicePixelRatio,
                    i = t.layerBounds,
                    this._layer.width = Math.ceil(i.size.width * n),
                    this._layer.height = Math.ceil(i.size.height * n),
                    t = this._layer.getContext("2d");
                    return t && (t.scale(n, n),
                    t.translate(-i.origin.x, -i.origin.y)),
                    e && (this._frozenLayer = this._layer),
                    this._layer
                },
                releaseLayer: function(t) {
                    this._layer && (this._sharedLayer ? t || (--this._sharedLayer.count,
                    0 === this._sharedLayer.count && (delete a[this._sharedLayer.key],
                    this._layer.width = 0)) : this._layer.width = 0,
                    delete this._sharedLayer,
                    delete this._frozenLayer,
                    delete this._layer)
                },
                nodeWasRemoved: function() {
                    var t;
                    this._layer && (t = this,
                    0 === r.length && setTimeout(function() {
                        r.forEach(function(t) {
                            t._node.scene || t.releaseLayer()
                        }),
                        r = []
                    }, 0),
                    r.push(t))
                },
                createCanvas: function() {
                    return n.createCanvas()
                },
                draw: function(t) {}
            },
            []);
            s.releaseSharedLayers = function() {
                Object.keys(a).forEach(function(t) {
                    t = a[t];
                    t.canvas.width = 0,
                    delete t.key,
                    delete t.canvas
                }),
                a = {}
            }
            ,
            t.exports = s
        }
        ,
        5995: (t,e,i)=>{
            var o = i(9842)
              , n = i(2221)
              , s = i(4701)
              , a = i(829);
            function r(t) {
                a.call(this, t),
                this._canvas = this.createCanvas(),
                this._ctx = this._canvas.getContext("2d")
            }
            r.prototype = n.inheritPrototype(a, r, {
                get element() {
                    return this._canvas
                },
                update: function() {
                    var t, e, i, n;
                    this._ctx && (e = (t = this._node).size,
                    i = s.devicePixelRatio,
                    (n = !this._previousScale || this._previousScale !== i) && a.releaseSharedLayers(),
                    !n && this._previousSize && this._previousSize.equals(e) ? this._ctx.clearRect(0, 0, e.width * i, e.height * i) : (this._canvas.style.width = e.width + "px",
                    this._canvas.style.height = e.height + "px",
                    this._canvas.width = e.width * i,
                    this._canvas.height = e.height * i,
                    this._previousSize = e.copy(),
                    this._previousScale = i),
                    this._ctx.scale(i, i),
                    function s(a, r, l, h, c, d) {
                        var u, p, t, e, m, _;
                        r && 0 !== a.opacity && (e = a.renderer,
                        c && e.releaseLayer(!0),
                        u = e.shouldDraw,
                        (p = a.wantsLayerBacking ? e.layer : null) || a.frozen || e.releaseLayer(),
                        a.wantsLayerBacking && !p || (e = a.position.x,
                        m = a.position.y,
                        _ = a.transform,
                        d *= a.opacity,
                        (t = function(t) {
                            if (r.save(),
                            r.translate(t, m),
                            r.transform(_.a, _.b, _.c, _.d, _.e, _.f),
                            r.globalAlpha = d,
                            u || !a.frozen) {
                                var e = p ? p.getContext("2d") : r;
                                a.renderer.draw(e);
                                for (var i = a.children, n = 0, o = i.length; n < o; ++n)
                                    s(i[n], e, l, h, c, p ? 1 : d)
                            }
                            p && 0 !== p.width && 0 !== p.height && r.drawImage(p, a.layerBounds.origin.x, a.layerBounds.origin.y, p.width / h, p.height / h),
                            r.restore()
                        }
                        )(e),
                        a.repeatOffset && t(e + a.repeatOffset)))
                    }(this.node, this._ctx, new o(-t.position.x,-t.position.y,e.width,e.height), i, n, 1),
                    this._ctx.scale(1 / i, 1 / i))
                }
            }),
            t.exports = r
        }
        ,
        5809: t=>{
            t.exports = {
                name: "functions",
                fn: function() {
                    return !!(Array.prototype.fill && Uint8Array.from && window.btoa)
                }
            }
        }
        ,
        2241: (t,e,i)=>{
            var s = i(5809)
              , a = i(8974);
            t.exports = function(i, n) {
                i = i || 0,
                n = n || 0;
                var o = {};
                return o.shouldTryCSR = [s, a].every(function(t) {
                    var e = t.fn(i, n);
                    return "object" == typeof (o[t.name] = e) ? e.capable : e
                }),
                o
            }
        }
        ,
        8974: t=>{
            t.exports = {
                name: "webGL",
                fn: function(t, e) {
                    var i = document.createElement("canvas");
                    i.width = i.height = 0;
                    var n, i = i.getContext("webgl", {
                        antialias: !1,
                        stencil: !0,
                        failIfMajorPerformanceCaveat: !0
                    });
                    return !!i && {
                        capable: (t = t,
                        e = e,
                        4096 <= (n = i).getParameter(n.MAX_TEXTURE_SIZE) && n.getParameter(n.MAX_RENDERBUFFER_SIZE) >= 2 * t && n.getParameter(n.MAX_RENDERBUFFER_SIZE) >= 2 * e && 8 <= n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS) && 8 <= n.getParameter(n.MAX_VARYING_VECTORS) && 8 <= n.getParameter(n.STENCIL_BITS)),
                        gpuInfo: {
                            VERSION: (t = i).getParameter(t.VERSION),
                            MAX_RENDERBUFFER_SIZE: t.getParameter(t.MAX_RENDERBUFFER_SIZE)
                        }
                    }
                }
            }
        }
        ,
        5348: (t,e,i)=>{
            var n = i(8756);
            function r() {
                if (this._ = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]],
                6 === arguments.length)
                    this._setValues(["a", "b", "c", "d", "e", "f"], arguments);
                else if (16 === arguments.length)
                    this._setValues(["m11", "m12", "m13", "m14", "m21", "m22", "m23", "m24", "m31", "m32", "m33", "m34", "m41", "m42", "m43", "m44"], arguments);
                else if (1 == arguments.length) {
                    var t = arguments[0];
                    if ("string" == typeof t) {
                        if ("none" === t)
                            return;
                        t = t.match(/\bmatrix(?:3d)?\(([^)]+)\)/)[1].split(",").map(parseFloat)
                    }
                    6 === t.length ? this._setValues(["a", "b", "c", "d", "e", "f"], t) : 16 === t.length && this._setValues(["m11", "m12", "m13", "m14", "m21", "m22", "m23", "m24", "m31", "m32", "m33", "m34", "m41", "m42", "m43", "m44"], t)
                }
            }
            function l(t) {
                return t / 180 * Math.PI
            }
            function b(t, e, i, n, o, s, a, r, l) {
                return t * (o * l - s * r) - n * (e * l - i * r) + a * (e * s - i * o)
            }
            r.prototype = {
                constructor: r,
                get a() {
                    return this._[0][0]
                },
                get b() {
                    return this._[0][1]
                },
                get c() {
                    return this._[1][0]
                },
                get d() {
                    return this._[1][1]
                },
                get e() {
                    return this._[3][0]
                },
                get f() {
                    return this._[3][1]
                },
                get m11() {
                    return this._[0][0]
                },
                get m12() {
                    return this._[0][1]
                },
                get m13() {
                    return this._[0][2]
                },
                get m14() {
                    return this._[0][3]
                },
                get m21() {
                    return this._[1][0]
                },
                get m22() {
                    return this._[1][1]
                },
                get m23() {
                    return this._[1][2]
                },
                get m24() {
                    return this._[1][3]
                },
                get m31() {
                    return this._[2][0]
                },
                get m32() {
                    return this._[2][1]
                },
                get m33() {
                    return this._[2][2]
                },
                get m34() {
                    return this._[2][3]
                },
                get m41() {
                    return this._[3][0]
                },
                get m42() {
                    return this._[3][1]
                },
                get m43() {
                    return this._[3][2]
                },
                get m44() {
                    return this._[3][3]
                },
                set a(t) {
                    this._[0][0] = t
                },
                set b(t) {
                    this._[0][1] = t
                },
                set c(t) {
                    this._[1][0] = t
                },
                set d(t) {
                    this._[1][1] = t
                },
                set e(t) {
                    this._[3][0] = t
                },
                set f(t) {
                    this._[3][1] = t
                },
                set m11(t) {
                    this._[0][0] = t
                },
                set m12(t) {
                    this._[0][1] = t
                },
                set m13(t) {
                    this._[0][2] = t
                },
                set m14(t) {
                    this._[0][3] = t
                },
                set m21(t) {
                    this._[1][0] = t
                },
                set m22(t) {
                    this._[1][1] = t
                },
                set m23(t) {
                    this._[1][2] = t
                },
                set m24(t) {
                    this._[1][3] = t
                },
                set m31(t) {
                    this._[2][0] = t
                },
                set m32(t) {
                    this._[2][1] = t
                },
                set m33(t) {
                    this._[2][2] = t
                },
                set m34(t) {
                    this._[2][3] = t
                },
                set m41(t) {
                    this._[3][0] = t
                },
                set m42(t) {
                    this._[3][1] = t
                },
                set m43(t) {
                    this._[3][2] = t
                },
                set m44(t) {
                    this._[3][3] = t
                },
                translate: function(t, e, i) {
                    return this._[3][0] += (t = t || 0) * this._[0][0] + (e = e || 0) * this._[1][0] + (i = i || 0) * this._[2][0],
                    this._[3][1] += t * this._[0][1] + e * this._[1][1] + i * this._[2][1],
                    this._[3][2] += t * this._[0][2] + e * this._[1][2] + i * this._[2][2],
                    this._[3][3] += t * this._[0][3] + e * this._[1][3] + i * this._[2][3],
                    this
                },
                scale: function(t, e, i) {
                    return t = t || 1,
                    e = e || t,
                    i = i || 1,
                    this._[0][0] *= t,
                    this._[0][1] *= t,
                    this._[0][2] *= t,
                    this._[0][3] *= t,
                    this._[1][0] *= e,
                    this._[1][1] *= e,
                    this._[1][2] *= e,
                    this._[1][3] *= e,
                    this._[2][0] *= i,
                    this._[2][1] *= i,
                    this._[2][2] *= i,
                    this._[2][3] *= i,
                    this
                },
                rotate: function(t) {
                    return this.rotateAxisAngle(0, 0, 1, t)
                },
                rotateAxisAngle: function(t, e, i, n) {
                    0 === t && 0 === e && 0 === i && (i = 1);
                    var o, s = Math.sqrt(t * t + e * e + i * i), s = (1 != s && (t /= s,
                    e /= s,
                    i /= s),
                    n = l(n),
                    Math.sin(n)), n = Math.cos(n), a = new r;
                    return 1 === t && 0 === e && 0 === i ? (a._[0][0] = 1,
                    a._[0][1] = 0,
                    a._[0][2] = 0,
                    a._[1][0] = 0,
                    a._[1][1] = n,
                    a._[1][2] = s,
                    a._[2][0] = 0,
                    a._[2][1] = -s,
                    a._[2][2] = n) : 0 === t && 1 === e && 0 === i ? (a._[0][0] = n,
                    a._[0][1] = 0,
                    a._[0][2] = -s,
                    a._[1][0] = 0,
                    a._[1][1] = 1,
                    a._[1][2] = 0,
                    a._[2][0] = s,
                    a._[2][1] = 0,
                    a._[2][2] = n) : 0 === t && 0 === e && 1 === i ? (a._[0][0] = n,
                    a._[0][1] = s,
                    a._[0][2] = 0,
                    a._[1][0] = -s,
                    a._[1][1] = n,
                    a._[1][2] = 0,
                    a._[2][0] = 0,
                    a._[2][1] = 0,
                    a._[2][2] = 1) : (a._[0][0] = n + t * t * (o = 1 - n),
                    a._[0][1] = e * t * o + i * s,
                    a._[0][2] = i * t * o - e * s,
                    a._[1][0] = t * e * o - i * s,
                    a._[1][1] = n + e * e * o,
                    a._[1][2] = i * e * o + t * s,
                    a._[2][0] = t * i * o + e * s,
                    a._[2][1] = e * i * o - t * s,
                    a._[2][2] = n + i * i * o),
                    a._[0][3] = a._[1][3] = a._[2][3] = 0,
                    a._[3][0] = a._[3][1] = a._[3][2] = 0,
                    a._[3][3] = 1,
                    this.multiply(a)
                },
                multiply: function(t) {
                    var e = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
                    return e[0][0] = t._[0][0] * this._[0][0] + t._[0][1] * this._[1][0] + t._[0][2] * this._[2][0] + t._[0][3] * this._[3][0],
                    e[0][1] = t._[0][0] * this._[0][1] + t._[0][1] * this._[1][1] + t._[0][2] * this._[2][1] + t._[0][3] * this._[3][1],
                    e[0][2] = t._[0][0] * this._[0][2] + t._[0][1] * this._[1][2] + t._[0][2] * this._[2][2] + t._[0][3] * this._[3][2],
                    e[0][3] = t._[0][0] * this._[0][3] + t._[0][1] * this._[1][3] + t._[0][2] * this._[2][3] + t._[0][3] * this._[3][3],
                    e[1][0] = t._[1][0] * this._[0][0] + t._[1][1] * this._[1][0] + t._[1][2] * this._[2][0] + t._[1][3] * this._[3][0],
                    e[1][1] = t._[1][0] * this._[0][1] + t._[1][1] * this._[1][1] + t._[1][2] * this._[2][1] + t._[1][3] * this._[3][1],
                    e[1][2] = t._[1][0] * this._[0][2] + t._[1][1] * this._[1][2] + t._[1][2] * this._[2][2] + t._[1][3] * this._[3][2],
                    e[1][3] = t._[1][0] * this._[0][3] + t._[1][1] * this._[1][3] + t._[1][2] * this._[2][3] + t._[1][3] * this._[3][3],
                    e[2][0] = t._[2][0] * this._[0][0] + t._[2][1] * this._[1][0] + t._[2][2] * this._[2][0] + t._[2][3] * this._[3][0],
                    e[2][1] = t._[2][0] * this._[0][1] + t._[2][1] * this._[1][1] + t._[2][2] * this._[2][1] + t._[2][3] * this._[3][1],
                    e[2][2] = t._[2][0] * this._[0][2] + t._[2][1] * this._[1][2] + t._[2][2] * this._[2][2] + t._[2][3] * this._[3][2],
                    e[2][3] = t._[2][0] * this._[0][3] + t._[2][1] * this._[1][3] + t._[2][2] * this._[2][3] + t._[2][3] * this._[3][3],
                    e[3][0] = t._[3][0] * this._[0][0] + t._[3][1] * this._[1][0] + t._[3][2] * this._[2][0] + t._[3][3] * this._[3][0],
                    e[3][1] = t._[3][0] * this._[0][1] + t._[3][1] * this._[1][1] + t._[3][2] * this._[2][1] + t._[3][3] * this._[3][1],
                    e[3][2] = t._[3][0] * this._[0][2] + t._[3][1] * this._[1][2] + t._[3][2] * this._[2][2] + t._[3][3] * this._[3][2],
                    e[3][3] = t._[3][0] * this._[0][3] + t._[3][1] * this._[1][3] + t._[3][2] * this._[2][3] + t._[3][3] * this._[3][3],
                    this._ = e,
                    this
                },
                skewX: function(t) {
                    return this._skew(t, 0)
                },
                skewY: function(t) {
                    return this._skew(0, t)
                },
                isAffine: function() {
                    return 0 == this._[0][2] && 0 == this._[0][3] && 0 == this._[1][2] && 0 == this._[1][3] && 0 == this._[2][0] && 0 == this._[2][1] && 1 == this._[2][2] && 0 == this._[2][3] && 0 == this._[3][2] && 1 == this._[3][3]
                },
                inverse: function() {
                    var t;
                    return this._isIdentityOrTranslation() ? (0 == this._[3][0] && 0 == this._[3][1] && 0 == this._[3][2] || (this._[3][0] *= -1,
                    this._[3][1] *= -1,
                    this._[3][2] *= -1),
                    this) : function(t, e) {
                        i = e,
                        n = t._[0][0],
                        o = t._[0][1],
                        s = t._[0][2],
                        a = t._[0][3],
                        r = t._[1][0],
                        l = t._[1][1],
                        h = t._[1][2],
                        c = t._[1][3],
                        d = t._[2][0],
                        u = t._[2][1],
                        p = t._[2][2],
                        m = t._[2][3],
                        _ = t._[3][0],
                        g = t._[3][1],
                        f = t._[3][2],
                        v = t._[3][3],
                        i._[0][0] = b(l, u, g, h, p, f, c, m, v),
                        i._[1][0] = -b(r, d, _, h, p, f, c, m, v),
                        i._[2][0] = b(r, d, _, l, u, g, c, m, v),
                        i._[3][0] = -b(r, d, _, l, u, g, h, p, f),
                        i._[0][1] = -b(o, u, g, s, p, f, a, m, v),
                        i._[1][1] = b(n, d, _, s, p, f, a, m, v),
                        i._[2][1] = -b(n, d, _, o, u, g, a, m, v),
                        i._[3][1] = b(n, d, _, o, u, g, s, p, f),
                        i._[0][2] = b(o, l, g, s, h, f, a, c, v),
                        i._[1][2] = -b(n, r, _, s, h, f, a, c, v),
                        i._[2][2] = b(n, r, _, o, l, g, a, c, v),
                        i._[3][2] = -b(n, r, _, o, l, g, s, h, f),
                        i._[0][3] = -b(o, l, u, s, h, p, a, c, m),
                        i._[1][3] = b(n, r, d, s, h, p, a, c, m),
                        i._[2][3] = -b(n, r, d, o, l, u, a, c, m),
                        i._[3][3] = b(n, r, d, o, l, u, s, h, p);
                        var i, n, o, s, a, r, l, h, c, d, u, p, m, _, g, f, v, y = t._determinant();
                        if (!(Math.abs(y) < 1e-8)) {
                            for (var w = 0; w < 4; w++)
                                for (var C = 0; C < 4; C++)
                                    e._[w][C] = e._[w][C] / y;
                            return 1
                        }
                    }(this, t = new r) ? t : new r
                },
                transformPoint: function(t) {
                    return new n(this._[0][0] * t.x + this._[1][0] * t.y + this._[2][0] * t.z + this._[3][0],this._[0][1] * t.x + this._[1][1] * t.y + this._[2][1] * t.z + this._[3][1],this._[0][2] * t.x + this._[1][2] * t.y + this._[2][2] * t.z + this._[3][2])
                },
                toString: function() {
                    return this.isAffine() ? "matrix(" + [this._[0][0], this._[0][1], this._[1][0], this._[1][1], this._[3][0], this._[3][1]].join(", ") + ")" : "matrix3d(" + this._.map(function(t) {
                        return t.join(", ")
                    }).join(", ") + ")"
                },
                _setValues: function(t, i) {
                    t.forEach(function(t, e) {
                        this[t] = i[e]
                    }, this)
                },
                _isIdentityOrTranslation: function() {
                    return 1 == this._[0][0] && 0 == this._[0][1] && 0 == this._[0][2] && 0 == this._[0][3] && 0 == this._[1][0] && 1 == this._[1][1] && 0 == this._[1][2] && 0 == this._[1][3] && 0 == this._[2][0] && 0 == this._[2][1] && 1 == this._[2][2] && 0 == this._[2][3] && 1 == this._[3][3]
                },
                _skew: function(t, e) {
                    var i = new r;
                    return i._[0][1] = Math.tan(l(e)),
                    i._[1][0] = Math.tan(l(t)),
                    this.multiply(i)
                },
                _determinant: function() {
                    var t = this._[0][0]
                      , e = this._[0][1]
                      , i = this._[0][2]
                      , n = this._[0][3]
                      , o = this._[1][0]
                      , s = this._[1][1]
                      , a = this._[1][2]
                      , r = this._[1][3]
                      , l = this._[2][0]
                      , h = this._[2][1]
                      , c = this._[2][2]
                      , d = this._[2][3]
                      , u = this._[3][0]
                      , p = this._[3][1]
                      , m = this._[3][2]
                      , _ = this._[3][3];
                    return t * b(s, h, p, a, c, m, r, d, _) - e * b(o, l, u, a, c, m, r, d, _) + i * b(o, l, u, s, h, p, r, d, _) - n * b(o, l, u, s, h, p, a, c, m)
                }
            },
            t.exports = r
        }
        ,
        8760: t=>{
            function e() {
                this._operations = []
            }
            function n(t, e, i) {
                this.x = l(t),
                this.y = l(e),
                this.z = l(i)
            }
            function o(t, e, i) {
                this.x = l(t, 1),
                this.y = l(e, this.x),
                this.z = l(i, 1)
            }
            function i(t) {
                this.angle = l(t)
            }
            function s(t, e) {
                this.x = l(t),
                this.y = l(e)
            }
            function a(t, e, i, n) {
                this.x = l(t),
                this.y = l(e),
                this.z = l(i),
                this.angle = l(n)
            }
            function r(t) {
                if (1 === arguments.length)
                    return t + "px";
                for (var e = 0, i = arguments.length, n = []; e < i; ++e)
                    n.push(r(arguments[e]));
                return n.join(", ")
            }
            function l(t, e) {
                return null == t ? e || 0 : t
            }
            function h(t, e) {
                return t + "(" + e + ")"
            }
            e.prototype = {
                constructor: e,
                translate: function(t, e, i) {
                    return this._operations.push(new n(t,e,i)),
                    this
                },
                scale: function(t, e, i) {
                    return this._operations.push(new o(t,e,i)),
                    this
                },
                rotate: function(t) {
                    return this._operations.push(new i(t)),
                    this
                },
                rotate3d: function(t, e, i, n) {
                    return this._operations.push(new a(t,e,i,n)),
                    this
                },
                skew: function(t, e) {
                    return this._operations.push(new s(t,e)),
                    this
                },
                transform: function(t) {
                    return this._operations = this._operations.concat(t),
                    this
                },
                toString: function() {
                    return this._operations.map(function(t) {
                        return t.toString()
                    }).join(" ")
                }
            },
            t.exports = e,
            n.prototype = {
                constructor: n,
                toString: function() {
                    return !this.x || this.y || this.z ? !this.y || this.x || this.z ? !this.z || this.x || this.y ? this.z ? h("translate3d", r(this.x, this.y, this.z)) : h("translate", r(this.x, this.y)) : h("translateZ", r(this.z)) : h("translateY", r(this.y)) : h("translateX", r(this.x))
                }
            },
            o.prototype = {
                constructor: o,
                toString: function() {
                    return 1 !== this.x && 1 === this.y && 1 === this.z ? h("scaleX", this.x) : 1 !== this.y && 1 === this.x && 1 === this.z ? h("scaleY", this.y) : 1 !== this.z && 1 === this.x && 1 === this.y ? h("scaleZ", this.z) : 1 === this.z ? this.x === this.y ? h("scale", this.x) : h("scale", [this.x, this.y].join(", ")) : h("scale3d", [this.x, this.y, this.z].join(", "))
                }
            },
            i.prototype = {
                constructor: i,
                toString: function() {
                    return h("rotate", angle + "deg")
                }
            },
            s.prototype = {
                constructor: s,
                toString: function() {
                    return 0 !== this.x && 0 === this.y ? h("skewX", this.x + "deg") : 0 !== this.y && 0 === this.x ? h("skewY", this.y + "deg") : h("skew", [this.x + "deg", this.y + "deg"].join(", "))
                }
            },
            a.prototype = {
                constructor: i,
                toString: function() {
                    return h("rotate3d", [this.x, this.y, this.z, this.angle].join(", ") + "deg")
                }
            }
        }
        ,
        3838: t=>{
            function e(t) {
                if (t)
                    return t.addEventListener = e.prototype.addEventListener,
                    t.removeEventListener = e.prototype.removeEventListener,
                    t.dispatchEvent = e.prototype.dispatchEvent,
                    t
            }
            function i(t) {
                this.type = t,
                this.target = null,
                this.defaultPrevented = !1,
                this._stoppedPropagation = !1
            }
            e.prototype = {
                constructor: e,
                addEventListener: function(t, e, i) {
                    if (i = i || null,
                    !t)
                        return !1;
                    if (!e)
                        return !1;
                    this._listeners || (this._listeners = {});
                    for (var n = (n = this._listeners[t]) || (this._listeners[t] = []), o = 0; o < n.length; ++o)
                        if (n[o].listener === e && n[o].thisObject === i)
                            return !1;
                    return n.push({
                        thisObject: i,
                        listener: e
                    }),
                    !0
                },
                removeEventListener: function(t, e, i) {
                    if (e = e || null,
                    i = i || null,
                    !this._listeners)
                        return !1;
                    if (!(t = t || null)) {
                        for (t in this._listeners)
                            this.removeEventListener(t, e, i);
                        return !1
                    }
                    var n = this._listeners[t];
                    if (!n)
                        return !1;
                    for (var o = !1, s = n.length - 1; 0 <= s; --s)
                        if (e && n[s].listener === e && n[s].thisObject === i || !e && i && n[s].thisObject === i) {
                            n.splice(s, 1),
                            o = !0;
                            break
                        }
                    return n.length || delete this._listeners[t],
                    Object.keys(this._listeners).length || delete this._listeners,
                    o
                },
                dispatchEvent: function(t) {
                    if (!(t.target = this)._listeners || !this._listeners[t.type] || t._stoppedPropagation)
                        return !0;
                    for (var e = this._listeners[t.type].slice(0), i = 0; i < e.length; ++i) {
                        var n = e[i].thisObject
                          , o = e[i].listener;
                        if (n || "function" == typeof o || "function" != typeof o.handleEvent ? o.call(n, t) : o.handleEvent.call(o, t),
                        t._stoppedPropagation)
                            break
                    }
                    return !t.defaultPrevented
                }
            },
            i.prototype = {
                constructor: i,
                stopPropagation: function() {
                    this._stoppedPropagation = !0
                },
                preventDefault: function() {
                    this.defaultPrevented = !0
                }
            },
            t.exports = {
                EventTarget: e,
                Event: i
            }
        }
        ,
        6782: t=>{
            "use strict";
            function e(t, e, i, n) {
                1 === arguments.length && t && "object" == typeof t ? ("x"in t && (this.x = t.x),
                "y"in e && (this.y = t.y),
                "z"in t && (this.z = t.z),
                "w"in t && (this.w = t.w)) : 0 < arguments.length && (this.x = t,
                1 < arguments.length) && (this.y = e,
                2 < arguments.length) && (this.z = i,
                3 < arguments.length) && (this.w = n)
            }
            e.prototype = {
                _x: 0,
                _y: 0,
                _z: 0,
                _w: 1,
                get x() {
                    return this._x
                },
                set x(t) {
                    if (null === t || isNaN(t))
                        throw new Error("[DOMPoint] `" + t + "` set for x is not a number");
                    this._x = t
                },
                get y() {
                    return this._y
                },
                set y(t) {
                    if (null === t || isNaN(t))
                        throw new Error("[DOMPoint] `" + t + "` set for y is not a number");
                    this._y = t
                },
                get z() {
                    return this._z
                },
                set z(t) {
                    if (null === t || isNaN(t))
                        throw new Error("[DOMPoint] `" + t + "` set for z is not a number");
                    this._z = t
                },
                get w() {
                    return this._w
                },
                set w(t) {
                    if (null === t || isNaN(t))
                        throw new Error("[DOMPoint] `" + t + "` set for w is not a number");
                    this._w = t
                },
                matrixTransform: function(t) {
                    return console.warn("DOMPoint.matrixTransform is not implemented yet."),
                    this
                }
            },
            t.exports = e
        }
        ,
        8756: t=>{
            function i(t, e, i) {
                this.x = t || 0,
                this.y = e || 0,
                this.z = i || 0
            }
            (t.exports = i).Zero = new i,
            i.fromEvent = function(t) {
                t = "undefined" != typeof TouchEvent && t instanceof TouchEvent ? t.targetTouches[0] : t;
                return new i(t.pageX,t.pageY)
            }
            ,
            i.fromEventInElement = function(t, e) {
                t = "undefined" != typeof TouchEvent && t instanceof TouchEvent ? t.targetTouches[0] : t,
                e = window.webkitConvertPointFromPageToNode(e, new WebKitPoint(t.pageX,t.pageY));
                return new i(e.x,e.y)
            }
            ,
            i.prototype = {
                constructor: i,
                toString: function() {
                    return "Point[" + [this.x, this.y, this.z].join(", ") + "]"
                },
                copy: function() {
                    return new i(this.x,this.y,this.z)
                },
                equals: function(t) {
                    return this.x === t.x && this.y === t.y && this.z === t.z
                },
                distanceToPoint: function(t) {
                    return Math.sqrt(Math.pow(this.x - t.x, 2) + Math.pow(this.y - t.y, 2) + Math.pow(this.z - t.z, 2))
                }
            }
        }
        ,
        9842: (t,e,i)=>{
            t.exports = a;
            var o = i(8756)
              , s = i(3045);
            function a(t, e, i, n) {
                this.origin = new o(t || 0,e || 0),
                this.size = new s(i || 0,n || 0)
            }
            a.Zero = new a,
            a.rectFromClientRect = function(t) {
                return new a(t.left,t.top,t.width,t.height)
            }
            ,
            a.unionOfRects = function(t) {
                for (var e = t[0], i = 1; i < t.length; ++i)
                    e = e.unionWithRect(t[i]);
                return e
            }
            ,
            a.prototype = {
                constructor: a,
                toString: function() {
                    return "Rect[" + [this.origin.x, this.origin.y, this.size.width, this.size.height].join(", ") + "]"
                },
                copy: function() {
                    return new a(this.origin.x,this.origin.y,this.size.width,this.size.height)
                },
                equals: function(t) {
                    return this.origin.equals(t.origin) && this.size.equals(t.size)
                },
                inset: function(t, e, i, n) {
                    return new a(this.origin.x + t,this.origin.y + e,this.size.width - t - i,this.size.height - e - n)
                },
                pad: function(t) {
                    return new a(this.origin.x - t,this.origin.y - t,this.size.width + 2 * t,this.size.height + 2 * t)
                },
                minX: function() {
                    return this.origin.x
                },
                minY: function() {
                    return this.origin.y
                },
                midX: function() {
                    return this.origin.x + this.size.width / 2
                },
                midY: function() {
                    return this.origin.y + this.size.height / 2
                },
                maxX: function() {
                    return this.origin.x + this.size.width
                },
                maxY: function() {
                    return this.origin.y + this.size.height
                },
                intersectionWithRect: function(t) {
                    var e, i = new a, n = Math.max(this.minX(), t.minX()), o = Math.min(this.maxX(), t.maxX());
                    return o < n || (e = Math.max(this.minY(), t.minY()),
                    (t = Math.min(this.maxY(), t.maxY())) < e) || (i.origin.x = n,
                    i.origin.y = e,
                    i.size.width = o - n,
                    i.size.height = t - e),
                    i
                },
                unionWithRect: function(t) {
                    var e = Math.min(this.minX(), t.minX())
                      , i = Math.min(this.minY(), t.minY());
                    return new a(e,i,Math.max(this.maxX(), t.maxX()) - e,Math.max(this.maxY(), t.maxY()) - i)
                },
                round: function() {
                    return new a(Math.floor(this.origin.x),Math.floor(this.origin.y),Math.ceil(this.size.width),Math.ceil(this.size.height))
                }
            }
        }
        ,
        3045: t=>{
            function e(t, e) {
                this.width = t || 0,
                this.height = e || 0
            }
            (t.exports = e).Zero = new e,
            e.prototype = {
                constructor: e,
                toString: function() {
                    return "Size[" + this.width + ", " + this.height + "]"
                },
                copy: function() {
                    return new e(this.width,this.height)
                },
                equals: function(t) {
                    return this.width === t.width && this.height === t.height
                }
            }
        }
        ,
        5323: (t,e,i)=>{
            var n = i(5209);
            t.exports = {
                GestureRecognizer: n,
                SupportsTouches: n.SupportsTouches,
                SupportsPointerEvents: n.SupportsPointerEvents,
                States: n.States,
                LongPress: i(5176),
                Pan: i(1206),
                Pinch: i(2899),
                Rotation: i(7244),
                Swipe: i(1421),
                Tap: i(8026)
            }
        }
        ,
        5209: (t,e,i)=>{
            var n = i(3838)
              , a = i(8756)
              , r = i(1055)
              , i = i(2221);
            function o() {
                n.EventTarget.call(this),
                this._targetTouches = [],
                this._lastKnownEventLocation = null,
                this._shouldHandleTrackingEvents = !1,
                this._domEvents = [],
                this.mode = o.Modes.Adaptive,
                this._enabled = !0,
                this._target = null,
                this.state = o.States.Possible,
                this.delegate = null
            }
            o.Modes = {
                Adaptive: "adaptive",
                Pointer: "pointer",
                Touch: "touch",
                Mouse: "mouse"
            },
            o.SupportsPointerEvents = "PointerEvent"in window,
            o.SupportsTouches = i.supportsTouches(),
            (o.SupportsGestures = !!window.GestureEvent) ? o.SupportsPointerEvents ? o.UseGesturesForRotation = o.UseGesturesForPinch = !o.SupportsTouches : (o.UseGesturesForRotation = !o.SupportsTouches,
            o.UseGesturesForPinch = !0) : (o.UseGesturesForRotation = !1,
            o.UseGesturesForPinch = !1),
            o.States = {
                Possible: "possible",
                Began: "began",
                Changed: "changed",
                Ended: "ended",
                Cancelled: "cancelled",
                Failed: "failed",
                Recognized: "ended"
            };
            var s = {
                Start: "pointerdown",
                Move: "pointermove",
                End: "pointerup",
                Cancel: "pointercancel",
                GestureStart: "gesturestart",
                GestureChange: "gesturechange",
                GestureEnd: "gestureend",
                StateChange: "statechange"
            }
              , l = {
                Start: "touchstart",
                Move: "touchmove",
                End: "touchend",
                Cancel: "touchcancel",
                GestureStart: "gesturestart",
                GestureChange: "gesturechange",
                GestureEnd: "gestureend",
                StateChange: "statechange"
            }
              , h = {
                Start: "mousedown",
                Move: "mousemove",
                End: "mouseup",
                Cancel: void 0,
                GestureStart: "gesturestart",
                GestureChange: "gesturechange",
                GestureEnd: "gestureend",
                StateChange: "statechange"
            };
            ((o.prototype = Object.create(n.EventTarget.prototype, {
                mode: {
                    get: function() {
                        return this._mode
                    },
                    set: function(t) {
                        if (this._mode !== t) {
                            if (this._targetTouches.length)
                                throw new Error("Cannot switch between modes in the middle of gesture.");
                            switch (this._removeBaseListeners(),
                            t) {
                            case o.Modes.Adaptive:
                                this.events = o.SupportsPointerEvents ? s : o.SupportsTouches ? l : h;
                                break;
                            case o.Modes.Pointer:
                                this.events = s;
                                break;
                            case o.Modes.Touch:
                                this.events = l;
                                break;
                            case o.Modes.Mouse:
                                this.events = h
                            }
                            this._mode = t,
                            this._updateBaseListeners()
                        }
                    }
                },
                currentMode: {
                    get: function() {
                        if (this._mode === o.Modes.Adaptive)
                            switch (this.events) {
                            case s:
                                return o.Modes.Pointer;
                            case l:
                                return o.Modes.Touch;
                            case h:
                                return o.Modes.Mouse
                            }
                        return this._mode
                    }
                },
                target: {
                    get: function() {
                        return this._target
                    },
                    set: function(t) {
                        this._target !== t && (this._removeBaseListeners(),
                        t) && (this._target = t,
                        this._initRecognizer())
                    }
                },
                numberOfTouches: {
                    get: function() {
                        return this._targetTouches.length
                    }
                },
                enabled: {
                    get: function() {
                        return this._enabled
                    },
                    set: function(t) {
                        this._enabled !== t && ((this._enabled = t) || (0 === this.numberOfTouches ? (this._removeTrackingListeners(),
                        this.reset()) : this.enterCancelledState()),
                        this._updateBaseListeners())
                    }
                },
                domEvents: {
                    get: function() {
                        return this._domEvents
                    }
                }
            })).constructor = o).prototype.modifierKeys = {
                alt: !1,
                ctrl: !1,
                meta: !1,
                shift: !1
            },
            o.prototype.reset = function() {}
            ,
            o.prototype.preventDefault = function(t) {
                "touchmove" !== t.type && "pointer" !== t.type.substr(0, 7) && t.preventDefault()
            }
            ,
            o.prototype.locationInElement = function(t) {
                var e = new a
                  , i = this._targetTouches;
                if (this._lastKnownEventLocation)
                    e.x = this._lastKnownEventLocation.pageX,
                    e.y = this._lastKnownEventLocation.pageY;
                else {
                    for (var n = 0, o = i.length; n < o; ++n) {
                        var s = i[n];
                        e.x += s.pageX,
                        e.y += s.pageY
                    }
                    e.x /= o,
                    e.y /= o
                }
                return t ? r.fromPageToElement(t, e) : e
            }
            ,
            o.prototype.locationInClient = function() {
                var t = new a
                  , e = this._targetTouches;
                if (this._lastKnownEventLocation)
                    t.x = this._lastKnownEventLocation.clientX,
                    t.y = this._lastKnownEventLocation.clientY;
                else {
                    for (var i = 0, n = e.length; i < n; ++i) {
                        var o = e[i];
                        t.x += o.clientX,
                        t.y += o.clientY
                    }
                    t.x /= n,
                    t.y /= n
                }
                return t
            }
            ,
            o.prototype.locationOfTouchInElement = function(t, e) {
                var t = this._targetTouches[t];
                return t ? (t = new a(t.pageX,t.pageY),
                e ? r.fromPageToElement(e, t) : t) : new a
            }
            ,
            o.prototype.useGestures = !1,
            o.prototype.touchesBegan = function(t) {
                t.currentTarget === this._target && (this._shouldHandleTrackingEvents = !0,
                window.addEventListener(this.events.Move, this, !0),
                window.addEventListener(this.events.End, this, !0),
                this.events.Cancel && window.addEventListener(this.events.Cancel, this, !0),
                this.enterPossibleState())
            }
            ,
            o.prototype.touchesMoved = function(t) {}
            ,
            o.prototype.touchesEnded = function(t) {}
            ,
            o.prototype.touchesCancelled = function(t) {}
            ,
            o.prototype.gestureBegan = function(t) {
                t.currentTarget === this._target && (window.addEventListener(this.events.GestureChange, this, !0),
                window.addEventListener(this.events.GestureEnd, this, !0),
                this.enterPossibleState())
            }
            ,
            o.prototype.gestureChanged = function(t) {}
            ,
            o.prototype.gestureEnded = function(t) {}
            ,
            o.prototype.enterPossibleState = function() {
                this._setStateAndNotifyOfChange(o.States.Possible)
            }
            ,
            o.prototype.enterBeganState = function() {
                !this.delegate || "function" != typeof this.delegate.gestureRecognizerShouldBegin || this.delegate.gestureRecognizerShouldBegin(this) ? this._setStateAndNotifyOfChange(o.States.Began) : this.enterFailedState()
            }
            ,
            o.prototype.enterEndedState = function() {
                this._setStateAndNotifyOfChange(o.States.Ended),
                this._removeTrackingListeners(),
                this.reset()
            }
            ,
            o.prototype.enterCancelledState = function() {
                this._setStateAndNotifyOfChange(o.States.Cancelled),
                this._removeTrackingListeners(),
                this.reset()
            }
            ,
            o.prototype.enterFailedState = function() {
                this._setStateAndNotifyOfChange(o.States.Failed),
                this._removeTrackingListeners(),
                this.reset()
            }
            ,
            o.prototype.enterChangedState = function() {
                this._setStateAndNotifyOfChange(o.States.Changed)
            }
            ,
            o.prototype.enterRecognizedState = function() {
                this._setStateAndNotifyOfChange(o.States.Recognized)
            }
            ,
            o.prototype.handleEvent = function(t) {
                this._shouldCountAndHandleTouch(t) && (this._updateTargetTouches(t),
                this._updateKeyboardModifiers(t),
                this._handleTouches(t))
            }
            ,
            o.prototype._handleTouches = function(t) {
                if (this._shouldHandleTouch(t))
                    switch (t.type) {
                    case this.events.Start:
                        this.touchesBegan(t);
                        break;
                    case this.events.Move:
                        this.touchesMoved(t);
                        break;
                    case this.events.End:
                        this.touchesEnded(t);
                        break;
                    case this.events.Cancel:
                        this.touchesCancelled(t);
                        break;
                    case this.events.GestureStart:
                        this.gestureBegan(t);
                        break;
                    case this.events.GestureChange:
                        this.gestureChanged(t);
                        break;
                    case this.events.GestureEnd:
                        this.gestureEnded(t)
                    }
            }
            ,
            o.prototype._shouldCountAndHandleTouch = function(t) {
                var e;
                return !(this.events === s && t instanceof PointerEvent && (e = this._targetTouches[0]) && t.pointerType !== e.pointerType && e.pointerId !== t.pointerId)
            }
            ,
            o.prototype._shouldHandleTouch = function(t) {
                return this.events !== s || t.type === this.events.Start || t.type === this.events.GestureStart || t.type === this.events.GestureChange || t.type === this.events.GestureEnd || this._shouldHandleTrackingEvents
            }
            ,
            o.prototype._initRecognizer = function() {
                this.reset(),
                this.state = o.States.Possible,
                this._updateBaseListeners()
            }
            ,
            o.prototype._removeBaseListeners = function() {
                this._target && (this._target.removeEventListener(this.events.Start, this),
                this.useGestures && this._target.removeEventListener(this.events.GestureStart, this),
                this.events === s) && (this._targetTouches = [],
                window.removeEventListener(this.events.End, this, !0),
                window.removeEventListener(this.events.Cancel, this, !0))
            }
            ,
            o.prototype._updateBaseListeners = function() {
                this._target && (this._enabled ? (this._target.addEventListener(this.events.Start, this),
                this.useGestures && this._target.addEventListener(this.events.GestureStart, this),
                this.events === s && (window.addEventListener(this.events.End, this, !0),
                window.addEventListener(this.events.Cancel, this, !0))) : this._removeBaseListeners())
            }
            ,
            o.prototype._removeTrackingListeners = function() {
                this._shouldHandleTrackingEvents = !1,
                window.removeEventListener(this.events.Move, this, !0),
                this.events !== s && (window.removeEventListener(this.events.End, this, !0),
                window.removeEventListener(this.events.Cancel, this, !0)),
                window.removeEventListener(this.events.GestureChange, this, !0),
                window.removeEventListener(this.events.GestureEnd, this, !0)
            }
            ,
            o.prototype._setStateAndNotifyOfChange = function(t) {
                this.state = t,
                this.dispatchEvent(new n.Event(this.events.StateChange))
            }
            ,
            o.prototype._setLastKnownSinglePointLocation = function(t) {
                this._lastKnownEventLocation = {
                    clientX: t.clientX,
                    clientY: t.clientY,
                    pageX: t.pageX,
                    pageY: t.pageY
                }
            }
            ,
            o.prototype._updateTargetTouches = function(e) {
                if (e.type !== this.events.GestureStart && e.type !== this.events.GestureChange && e.type !== this.events.GestureEnd)
                    if (this.events !== h) {
                        var t;
                        if (this.events === l)
                            if (e.type === this.events.Start) {
                                for (this._targetTouches = [],
                                a = 0,
                                r = (t = e.targetTouches).length; a < r; ++a)
                                    this._targetTouches.push(t[a]);
                                this._lastKnownEventLocation = null
                            } else if (e.type === this.events.Move) {
                                var i = this._targetTouches.map(function(t) {
                                    return t.identifier
                                });
                                for (this._targetTouches = [],
                                a = 0,
                                r = (t = e.touches).length; a < r; ++a) {
                                    var n = t[a];
                                    -1 !== i.indexOf(n.identifier) && this._targetTouches.push(n)
                                }
                                this._lastKnownEventLocation = null
                            } else {
                                for (var o = e.touches, s = [], a = 0, r = o.length; a < r; ++a)
                                    s.push(o[a].identifier);
                                this._targetTouches = this._targetTouches.filter(function(t) {
                                    return -1 !== s.indexOf(t.identifier)
                                }),
                                0 === this._targetTouches.length ? this._setLastKnownSinglePointLocation(e) : this._lastKnownEventLocation = null
                            }
                        else
                            e.type === this.events.Start ? (this._targetTouches.push(e),
                            this._lastKnownEventLocation = null) : e.type === this.events.Move ? (this._targetTouches = this._targetTouches.map(function(t) {
                                return t.pointerId !== e.pointerId ? t : e
                            }),
                            this._lastKnownEventLocation = null) : (this._targetTouches = this._targetTouches.filter(function(t) {
                                return t.pointerId !== e.pointerId
                            }),
                            0 === this._targetTouches.length ? this._setLastKnownSinglePointLocation(e) : this._lastKnownEventLocation = null)
                    } else
                        e.type === this.events.End ? (this._targetTouches = [],
                        this._setLastKnownSinglePointLocation(e)) : (this._targetTouches = [e],
                        this._lastKnownEventLocation = null);
                else
                    this._setLastKnownSinglePointLocation(e)
            }
            ,
            o.prototype._updateKeyboardModifiers = function(t) {
                this.modifierKeys.alt = t.altKey,
                this.modifierKeys.ctrl = t.ctrlKey,
                this.modifierKeys.meta = t.metaKey,
                this.modifierKeys.shift = t.shiftKey
            }
            ,
            o.prototype._distance = function() {
                var t = this._targetTouches[0]
                  , t = new a(t.pageX,t.pageY)
                  , e = this._targetTouches[1]
                  , e = new a(e.pageX,e.pageY);
                return t.distanceToPoint(e)
            }
            ,
            t.exports = o
        }
        ,
        5176: (t,e,i)=>{
            var n = i(5209);
            function o() {
                this.allowableMovement = 10,
                this.minimumPressDuration = 500,
                this.numberOfTouchesRequired = 1,
                this.allowsRightMouseButton = !1,
                n.call(this)
            }
            ((o.prototype = Object.create(n.prototype)).constructor = o).prototype.touchesBegan = function(t) {
                t.currentTarget !== this.target || 2 === t.button && !this.allowsRightMouseButton || (n.prototype.touchesBegan.call(this, t),
                this.numberOfTouches === this.numberOfTouchesRequired ? (this._startPoint = this.locationInElement(),
                this._timerId = window.setTimeout(this.enterRecognizedState.bind(this), this.minimumPressDuration)) : this.enterFailedState())
            }
            ,
            o.prototype.touchesMoved = function(t) {
                this.preventDefault(t),
                this._startPoint.distanceToPoint(this.locationInElement()) > this.allowableMovement && this.enterFailedState()
            }
            ,
            o.prototype.touchesCancelled = o.prototype.touchesEnded = function(t) {
                this.state === n.States.Recognized && (this.preventDefault(t),
                this.numberOfTouches === this.numberOfTouchesRequired) || this.enterFailedState()
            }
            ,
            o.prototype.reset = function() {
                window.clearTimeout(this._timerId),
                delete this._timerId
            }
            ,
            t.exports = o
        }
        ,
        1206: (t,e,i)=>{
            var n = i(5209)
              , o = i(8756);
            function s() {
                return {
                    start: new o,
                    end: new o,
                    dt: 0
                }
            }
            function a(t) {
                return t.dt < 1 ? new o : new o((t.end.x - t.start.x) / t.dt * 1e3,(t.end.y - t.start.y) / t.dt * 1e3)
            }
            function r() {
                n.call(this)
            }
            ((r.prototype = Object.create(n.prototype, {
                velocity: {
                    get: function() {
                        var t, e;
                        return 100 < Date.now() - this._lastTouchTime ? new o : (t = a(this._velocitySample),
                        n.SupportsTouches && 0 < this._previousVelocitySample.dt && (e = a(this._previousVelocitySample),
                        t.x = .25 * t.x + .75 * e.x,
                        t.y = .25 * t.y + .75 * e.y),
                        t)
                    }
                }
            })).constructor = r).prototype.minimumNumberOfTouches = 1,
            r.prototype.maximumNumberOfTouches = 1e5,
            r.prototype.translationThreshold = 10,
            r.prototype.touchesBegan = function(t) {
                t.currentTarget !== this.target || t instanceof MouseEvent && 0 !== t.button || (n.prototype.touchesBegan.call(this, t),
                this._numberOfTouchesIsAllowed() ? (this._lastTouchTime = Date.now(),
                this._resetTrackedLocations(),
                1 === this.numberOfTouches && (this._travelledMinimumDistance = !1)) : this.enterFailedState())
            }
            ,
            r.prototype.touchesMoved = function(t) {
                this.preventDefault(t);
                var t = Date.now()
                  , e = this.locationInElement()
                  , i = t - this._lastTouchTime;
                8 < i && (this._previousVelocitySample.start = this._velocitySample.start.copy(),
                this._previousVelocitySample.end = this._velocitySample.end.copy(),
                this._previousVelocitySample.dt = this._velocitySample.dt,
                this._velocitySample.start = this._lastTouchLocation.copy(),
                this._velocitySample.end = e,
                this._velocitySample.dt = i),
                this._travelledMinimumDistance ? (this.translation.x += e.x - this._lastTouchLocation.x,
                this.translation.y += e.y - this._lastTouchLocation.y,
                this.enterChangedState()) : this._canBeginWithTravelledDistance(new o(e.x - this._translationOrigin.x,e.y - this._translationOrigin.y)) && (this._travelledMinimumDistance = !0,
                this.enterBeganState()),
                this._lastTouchTime = t,
                this._lastTouchLocation = e
            }
            ,
            r.prototype.touchesEnded = function(t) {
                this._numberOfTouchesIsAllowed() ? this._resetTrackedLocations() : this._travelledMinimumDistance ? this.enterEndedState() : this.enterFailedState()
            }
            ,
            r.prototype.reset = function() {
                this._velocitySample = s(),
                this._previousVelocitySample = s(),
                this._gestures = [],
                this.translation = new o,
                delete this._travelledMinimumDistance
            }
            ,
            r.prototype._travelledMinimumDistance = !1,
            r.prototype._previousVelocitySample = s(),
            r.prototype._velocitySample = s(),
            r.prototype._canBeginWithTravelledDistance = function(t) {
                return Math.abs(t.x) >= this.translationThreshold || Math.abs(t.y) >= this.translationThreshold
            }
            ,
            r.prototype._numberOfTouchesIsAllowed = function() {
                return this.numberOfTouches >= this.minimumNumberOfTouches && this.numberOfTouches <= this.maximumNumberOfTouches
            }
            ,
            r.prototype._resetTrackedLocations = function() {
                var t = this.locationInElement();
                this._lastTouchLocation = t,
                this._translationOrigin = t
            }
            ,
            t.exports = r
        }
        ,
        2899: (t,e,i)=>{
            var n = i(5209);
            function o() {
                n.call(this)
            }
            ((o.prototype = Object.create(n.prototype, {
                velocity: {
                    get: function() {
                        var t = this._gestures[this._gestures.length - 1];
                        return !t || (t = Date.now() - (t.timeStamp + 100)) <= 0 ? this._velocity : (t = Math.max((500 - t) / 500, 0),
                        this._velocity * t)
                    }
                }
            })).constructor = o).prototype.scaleThreshold = 0,
            o.prototype.useGestures = n.UseGesturesForPinch,
            o.prototype.touchesBegan = function(t) {
                if (t.currentTarget === this.target) {
                    if (this.useGestures) {
                        if (2 !== this.numberOfTouches)
                            return
                    } else {
                        if (2 < this.numberOfTouches)
                            return void this.enterFailedState();
                        if (2 !== this.numberOfTouches)
                            return;
                        this._startDistance = this._distance(),
                        this._recordGesture(1),
                        this._scaledMinimumAmount = !1,
                        this._updateStateWithEvent(t)
                    }
                    n.prototype.touchesBegan.call(this, t)
                }
            }
            ,
            o.prototype.touchesMoved = function(t) {
                this.useGestures || 2 === this.numberOfTouches && this._updateStateWithEvent(t)
            }
            ,
            o.prototype.touchesEnded = function(t) {
                this.useGestures || 2 <= this.numberOfTouches || !this._startDistance || (this._scaledMinimumAmount ? this.enterEndedState() : this.enterFailedState())
            }
            ,
            o.prototype.gestureBegan = function(t) {
                n.prototype.gestureBegan.call(this, t),
                this._recordGesture(t.scale),
                this._scaledMinimumAmount = !1,
                this._updateStateWithEvent(t),
                this.preventDefault(t)
            }
            ,
            o.prototype.gestureChanged = function(t) {
                this.preventDefault(t),
                this._updateStateWithEvent(t)
            }
            ,
            o.prototype.gestureEnded = function(t) {
                this._scaledMinimumAmount ? this.enterEndedState() : this.enterFailedState()
            }
            ,
            o.prototype.reset = function() {
                this.scale = 1,
                this._velocity = 0,
                this._gestures = [],
                delete this._startDistance
            }
            ,
            o.prototype._scaledMinimumAmount = !1,
            o.prototype._recordGesture = function(t) {
                var e = Date.now()
                  , t = this._gestures.push({
                    scale: t,
                    timeStamp: e
                });
                if (!(t <= 2)) {
                    for (var i = this._gestures[t - 1].scale >= this._gestures[t - 2].scale, n = t - 3; 0 <= n; --n) {
                        var o = this._gestures[n];
                        if (100 < e - o.timeStamp || this._gestures[n + 1].scale >= o.scale != i)
                            break
                    }
                    0 < n && (this._gestures = this._gestures.slice(n + 1))
                }
            }
            ,
            o.prototype._updateStateWithEvent = function(t) {
                var e, i, t = this.useGestures ? t.scale : this._distance() / this._startDistance;
                this._scaledMinimumAmount ? (this._recordGesture(t),
                e = t - (i = this._gestures[0]).scale,
                i = Date.now() - i.timeStamp,
                this._velocity = 0 == i ? 0 : e / i * 1e3,
                this.scale *= t / this._gestures[this._gestures.length - 2].scale,
                this.enterChangedState()) : Math.abs(1 - t) >= this.scaleThreshold && (this._scaledMinimumAmount = !0,
                this.scale = 1,
                this.enterBeganState())
            }
            ,
            t.exports = o
        }
        ,
        7244: (t,e,i)=>{
            var o = i(5209)
              , n = i(8756);
            function s() {
                o.call(this),
                this.rotation = 0
            }
            ((s.prototype = Object.create(o.prototype, {
                velocity: {
                    get: function() {
                        return this._velocity
                    }
                },
                rotation: {
                    get: function() {
                        return this._rotation
                    },
                    set: function(t) {
                        this._rotation = function(t) {
                            for (; 180 < t; )
                                t -= 360;
                            for (; t < -180; )
                                t += 360;
                            return t
                        }(t)
                    }
                }
            })).constructor = s).prototype.useGestures = o.UseGesturesForRotation,
            s.prototype.touchesBegan = function(t) {
                this.useGestures || t.currentTarget === this.target && 2 === this.numberOfTouches && (o.prototype.touchesBegan.call(this, t),
                2 < this.numberOfTouches ? this.enterFailedState() : (this._startAngle = this._angle(),
                this._startDistance = this._distance(),
                this.rotation = 0,
                t.rotation = 0,
                t.scale = 1,
                this._lastEvent = t))
            }
            ,
            s.prototype.touchesMoved = function(t) {
                this.useGestures || 2 === this.numberOfTouches && (t.rotation = this._angle() - this._startAngle,
                t.scale = this._distance() / this._startDistance,
                this._handleEvent(t))
            }
            ,
            s.prototype.touchesEnded = function(t) {
                this.useGestures || 2 <= this.numberOfTouches || null === this._startAngle || (this.state === o.States.Changed ? this.enterEndedState() : this.enterFailedState())
            }
            ,
            s.prototype.gestureBegan = function(t) {
                this.useGestures && (o.prototype.gestureBegan.call(this, t),
                this.preventDefault(t),
                this.rotation = 0,
                t.rotation = 0,
                t.scale = 1,
                this._lastEvent = t)
            }
            ,
            s.prototype.gestureChanged = function(t) {
                this.useGestures && (this.preventDefault(t),
                this._handleEvent(t))
            }
            ,
            s.prototype.gestureEnded = function(t) {
                this.useGestures && this.enterEndedState()
            }
            ,
            s.prototype.reset = function() {
                this.rotation = 0,
                this._velocity = 0,
                this._lastEvent = null,
                this._startAngle = null
            }
            ,
            s.prototype._handleEvent = function(t) {
                var e = this._lastEvent
                  , i = t.rotation - e.rotation
                  , n = t.scale - e.scale
                  , e = t.timeStamp - e.timeStamp;
                this._lastEvent = t,
                this.state !== o.States.Possible ? (0 < e && (this._velocity = i / e * 1e3),
                this.rotation += i,
                this.enterChangedState()) : (e = Math.abs(t.rotation) < 8,
                t = Math.abs(i / 90) < Math.abs(n),
                n = 135 <= Math.abs(i),
                e || t || n || this.enterBeganState())
            }
            ,
            s.prototype._angle = function() {
                var t = this._targetTouches[0]
                  , t = new n(t.pageX,t.pageY)
                  , e = this._targetTouches[1]
                  , e = new n(e.pageX,e.pageY);
                return 180 * Math.atan2(t.y - e.y, t.x - e.x) / Math.PI
            }
            ,
            t.exports = s
        }
        ,
        1421: (t,e,i)=>{
            var n = i(5209)
              , o = i(8756);
            function s() {
                this.numberOfTouchesRequired = 1,
                this.direction = s.Directions.Right,
                n.call(this)
            }
            s.Directions = {
                Right: 1,
                Left: 2,
                Up: 4,
                Down: 8
            },
            ((s.prototype = Object.create(n.prototype)).constructor = s).prototype.touchesBegan = function(t) {
                t.currentTarget === this.target && (this.numberOfTouchesRequired === this.numberOfTouches ? (n.prototype.touchesBegan.call(this, t),
                this._translationOrigin = this.locationInElement()) : this.enterFailedState())
            }
            ,
            s.prototype.touchesMoved = function(t) {
                this.numberOfTouchesRequired === this.numberOfTouches ? (this.preventDefault(t),
                t = this.locationInElement(),
                t = new o(t.x - this._translationOrigin.x,t.y - this._translationOrigin.y),
                this.state !== n.States.Recognized && this.direction === s.Directions.Right && 100 < t.x && Math.abs(t.x) > Math.abs(t.y) && this.enterRecognizedState(),
                this.state !== n.States.Recognized && this.direction === s.Directions.Left && t.x < -100 && Math.abs(t.x) > Math.abs(t.y) && this.enterRecognizedState(),
                this.state !== n.States.Recognized && this.direction === s.Directions.Up && t.y < -100 && Math.abs(t.y) > Math.abs(t.x) && this.enterRecognizedState(),
                this.state !== n.States.Recognized && this.direction === s.Directions.Down && 100 < t.y && Math.abs(t.y) > Math.abs(t.x) && this.enterRecognizedState()) : this.enterFailedState()
            }
            ,
            s.prototype.touchesEnded = function(t) {
                this.enterFailedState()
            }
            ,
            t.exports = s
        }
        ,
        8026: (t,e,i)=>{
            var n = i(5209)
              , o = i(1055)
              , s = i(8756);
            function a() {
                this.numberOfTapsRequired = 1,
                this.numberOfTouchesRequired = 1,
                this.allowsRightMouseButton = !1,
                n.call(this)
            }
            ((a.prototype = Object.create(n.prototype)).constructor = a).prototype.touchesBegan = function(t) {
                t.currentTarget !== this.target || 2 === t.button && !this.allowsRightMouseButton || (n.prototype.touchesBegan.call(this, t),
                this.numberOfTouches === this.numberOfTouchesRequired ? (this._domEvents.push(t),
                this._startPoint = n.prototype.locationInElement.call(this),
                this._startClientPoint = n.prototype.locationInClient.call(this),
                this._rewindTimer(750)) : this.enterFailedState())
            }
            ,
            a.prototype.touchesMoved = function(t) {
                var e;
                switch (this.preventDefault(t),
                this.currentMode) {
                case n.Modes.Pointer:
                    e = "touch" === t.pointerType ? 40 : 2;
                    break;
                case n.Modes.Touch:
                    e = 40;
                    break;
                case n.Modes.Mouse:
                    e = 2
                }
                this._startPoint.distanceToPoint(n.prototype.locationInElement.call(this)) > e && this.enterFailedState()
            }
            ,
            a.prototype.touchesEnded = function(t) {
                this._taps++,
                this._domEvents.push(t),
                this._taps === this.numberOfTapsRequired && (this.preventDefault(t),
                this.enterRecognizedState(),
                this.reset()),
                this._rewindTimer(350)
            }
            ,
            a.prototype.reset = function() {
                this._taps = 0,
                this._clearTimer(),
                this._domEvents = []
            }
            ,
            a.prototype.locationInElement = function(t) {
                var e = this._startPoint || new s;
                return t ? o.fromPageToElement(t, e) : e
            }
            ,
            a.prototype.locationInClient = function() {
                return this._startClientPoint || new s
            }
            ,
            a.prototype._clearTimer = function() {
                window.clearTimeout(this._timerId),
                delete this._timerId
            }
            ,
            a.prototype._rewindTimer = function(t) {
                this._clearTimer(),
                this._timerId = window.setTimeout(this._timerFired.bind(this), t)
            }
            ,
            a.prototype._timerFired = function() {
                this.enterFailedState()
            }
            ,
            t.exports = a
        }
        ,
        2221: t=>{
            var e = Math.log(2)
              , i = [/MSIE [5-9]\./, /Firefox\/[1-9]\./, /Firefox\/[1-2][0-9]\./, /Firefox\/3[0-1]\./, /Firefox\/[0-9]\./, /Firefox\/[1-2][0-9]\./, /Firefox\/3[0-6]\./, /Android [0-3]\./, /Android 4\.[0-3]\./]
              , n = [/\(Macintosh; Intel Mac OS X 11_??\)*/, /\(Macintosh; Intel Mac OS X 10.9*\)*/, /\(Macintosh; Intel Mac OS X 10_9*\)*/, /\(Macintosh; Intel Mac OS X 10_??;*\)*/, /\(Macintosh; Intel Mac OS X 10.??;*\)*/, /\(Macintosh; Intel Mac OS X 10_??_*\)*/, /\(Macintosh; Intel Mac OS X 10.??.*\)*/, /\(Macintosh; Intel Mac OS X 10_??\)*/, /\(Macintosh; Intel Mac OS X 10.??\)*/, /iP(hone|od|ad)/];
            t.exports = {
                KeyCodes: {
                    Tab: 9,
                    Enter: 13,
                    Escape: 27,
                    SpaceBar: 32,
                    LeftArrow: 37,
                    UpArrow: 38,
                    RightArrow: 39,
                    DownArrow: 40
                },
                get iOSVersion() {
                    var t;
                    return /iP(hone|od|ad)/.test(navigator.platform) ? (t = navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/),
                    [parseInt(t[1], 10), parseInt(t[2], 10), parseInt(t[3] || 0, 10)]) : null
                },
                noop: function() {},
                isEdge: function() {
                    return /Edge\//i.test(navigator.userAgent)
                },
                isIEAndNotEdge: function() {
                    return /MSIE|Trident\//i.test(navigator.userAgent)
                },
                isNode: function() {
                    return !1
                },
                isUnsupportedBrowser: function(e) {
                    return i.some(function(t) {
                        return t.test(e)
                    })
                },
                hasMapsApp: function(e) {
                    return n.some(function(t) {
                        return t.test(e)
                    })
                },
                mod: function(t, e) {
                    return t - e * Math.floor(t / e)
                },
                log2: function(t) {
                    return Math.log(t) / e
                },
                clamp: function(t, e, i) {
                    return Math.max(e, Math.min(t, i))
                },
                inheritPrototype: function(t, e, i) {
                    var n = {
                        constructor: {
                            enumerable: !0,
                            value: e
                        }
                    };
                    return Object.keys(i).forEach(function(t) {
                        var e = Object.getOwnPropertyDescriptor(i, t);
                        e && (n[t] = e)
                    }),
                    Object.create(t.prototype, n)
                },
                checkValueIsInEnum: function(e, i) {
                    return Object.keys(i).some(function(t) {
                        return i[t] === e
                    })
                },
                required: function(t, e, i) {
                    if ("checkNull"in (i = i || {}) || (i.checkNull = !0),
                    void 0 === t || i.checkNull && null === t)
                        throw new Error(e || "Missing parameter");
                    return this
                },
                checkType: function(t, e, i) {
                    if (typeof t !== e)
                        throw new TypeError(i || "Expected `" + e + "` but got `" + typeof t + "`");
                    if ("number" === e && isNaN(t))
                        throw new TypeError(i || "Expected `" + e + "` but got `NaN`");
                    if ("object" === e && t instanceof Array)
                        throw new TypeError(i || "Expected a non-array object but got an array");
                    return this
                },
                checkInstance: function(t, e, i) {
                    if (t instanceof e)
                        return this;
                    throw new Error(i || "Unexpected object instance")
                },
                checkElement: function(t, e) {
                    if (this.isElement(t))
                        return this;
                    throw new Error(e || "Expected an Element")
                },
                checkArray: function(t, e) {
                    if (Array.isArray(t))
                        return this;
                    throw new Error(e || "Expected an array")
                },
                checkOptions: function(t, e) {
                    return null != t ? this.checkType(t, "object", e || "[MapKit] The `options` parameter is not a valid object.") : t = {},
                    t
                },
                isElement: function(t) {
                    return t instanceof window.Node && t.nodeType === window.Node.ELEMENT_NODE
                },
                get supportsLocalStorage() {
                    if (!("_supportsLocalStorage"in this)) {
                        this._supportsLocalStorage = !1;
                        try {
                            if (!window.localStorage)
                                return !1;
                            if ("function" != typeof window.localStorage.setItem || "function" != typeof window.localStorage.getItem || "function" != typeof window.localStorage.removeItem)
                                return !1;
                            var t = "storageTest";
                            if (window.localStorage.setItem(t, t),
                            window.localStorage.getItem(t) !== t)
                                return !1;
                            window.localStorage.removeItem(t),
                            this._supportsLocalStorage = !0
                        } catch (t) {
                            return !1
                        }
                    }
                    return this._supportsLocalStorage
                },
                fillTemplate: function(t, n, o) {
                    return t.replace(/{{(.*?)}}/g, function(t, e) {
                        var i = n[e];
                        if (o && null == i)
                            throw new Error("fillTemplate: Missing value for parameter: " + e);
                        return i
                    })
                },
                generateSrcSetString: function(t) {
                    var e = [];
                    if (Array.isArray(t) && 3 === t.length)
                        for (var i = 0; i < 3; i++)
                            e.push(t[i] + " " + (i + 1) + "x");
                    else
                        for (var n = t, o = 1; o <= 3; o++)
                            e.push(this.fillTemplate(n, {
                                scale: o
                            }) + " " + o + "x");
                    return e.join(", ")
                },
                xhr: function(t) {
                    var e;
                    return (e = new XMLHttpRequest).addEventListener("load", t),
                    e.addEventListener("error", t),
                    e.addEventListener("timeout", t),
                    e
                },
                parseURL: function(t) {
                    var i = document.createElement("a");
                    return i.href = t,
                    i.protocol || (i.protocol = location.protocol),
                    ["href", "protocol", "hostname", "port", "pathname", "search", "hash"].reduce(function(t, e) {
                        return t[e] = i[e],
                        t
                    }, {})
                },
                toQueryString: function(n, t) {
                    return null === n || "object" != typeof n ? "" : (t || Object.keys(n)).reduce(function(t, e) {
                        var i = n[e];
                        return i && t.push(encodeURIComponent(e) + "=" + encodeURIComponent(i)),
                        t
                    }, []).join("&")
                },
                splitStringAtSubStringAndReplace: function(t) {
                    var e, i = [], n = t.text.toLowerCase().indexOf(t.subString.toLowerCase());
                    if (t.text && !(n < 0) && t.replaceSubString)
                        return (e = t.text.substr(0, n)) && i.push(t.replacePre ? t.replacePre(e) : e),
                        e = t.text.substr(n, t.subString.length),
                        i.push(t.replaceSubString(t.subString, e)),
                        (e = t.text.substr(n + t.subString.length)) && i.push(t.replacePost ? t.replacePost(e) : e),
                        i
                },
                isSameOrigin: function(t, e) {
                    return t = this.parseURL(t),
                    e = this.parseURL(e),
                    t.hostname === e.hostname && t.protocol === e.protocol
                },
                capitalize: function(t) {
                    return t && t[0].toUpperCase() + t.substr(1).toLowerCase()
                },
                generateSessionIdValue: function() {
                    return Math.floor(1e15 * (9 * Math.random() + 1))
                },
                doNotTrack: function() {
                    var t = window && (window.navigator && (navigator.doNotTrack || navigator.msDoNotTrack) || window.doNotTrack);
                    return "1" === t || "yes" === t
                },
                supportsTouches: function() {
                    return "ontouchmove"in document
                },
                isSpaceKey: function(t) {
                    return t.keyCode === this.KeyCodes.SpaceBar
                },
                isEnterKey: function(t) {
                    return t.keyCode === this.KeyCodes.Enter
                },
                isTabKey: function(t) {
                    return t.keyCode === this.KeyCodes.Tab
                },
                isEscapeKey: function(t) {
                    return t.keyCode === this.KeyCodes.Escape
                },
                createCanvas: function() {
                    return document.createElement("canvas")
                },
                atob: function(t) {
                    return window.atob(t)
                }
            }
        }
        ,
        7095: (t,e,i)=>{
            t.exports = {
                Priority: i(1486),
                State: i(2380),
                Loader: i(3801),
                ImageLoader: i(2510),
                XHRLoader: i(9728)
            }
        }
        ,
        2510: (t,e,i)=>{
            var n = i(2221)
              , o = i(3801);
            function s(t, e) {
                o.call(this, t, e),
                this._image = null
            }
            s.prototype = n.inheritPrototype(o, s, {
                get image() {
                    return this._image
                },
                get url() {
                    return this._image.src
                },
                reuse: function(t, e) {
                    this.init(t, e)
                },
                crossOrigin: null,
                loaderWillStart: function() {
                    o.prototype.loaderWillStart.call(this),
                    this._image || (this._image = document.createElement("img")),
                    this._image.crossOrigin = this.crossOrigin,
                    this._image.src = this._delegate.urlForImageLoader,
                    this._image.addEventListener("load", this),
                    this._image.addEventListener("error", this)
                },
                handleEvent: function(t) {
                    switch (t.type) {
                    case "error":
                        this.loaderDidFail(t.target);
                        break;
                    case "load":
                        this.loaderDidSucceed()
                    }
                },
                _reset: function() {
                    this._image && (this._image.removeEventListener("load", this),
                    this._image.removeEventListener("error", this)),
                    o.prototype._reset.call(this)
                }
            }),
            t.exports = s
        }
        ,
        3801: (t,e,i)=>{
            var n = i(1135)
              , o = i(2380);
            function s(t, e) {
                this.init(t, e)
            }
            s.prototype = {
                constructor: s,
                get state() {
                    return this._state
                },
                schedule: function() {
                    this._state || (this._state = o.Waiting,
                    n.schedule(this))
                },
                unschedule: function() {
                    var t = !1;
                    if (this._state === o.Waiting)
                        t = n.unschedule(this);
                    else {
                        if (this._state !== o.Loading)
                            return !1;
                        n.loaderDidComplete(this),
                        t = !0
                    }
                    return this._unscheduled = t,
                    this._state = o.Canceled,
                    "function" == typeof this._delegate.loaderDidCancel && this._delegate.loaderDidCancel(this),
                    this._reset(),
                    t
                },
                loaderWillStart: function() {
                    this._state = o.Loading,
                    "function" == typeof this._delegate.loaderWillStart && this._delegate.loaderWillStart(this)
                },
                loaderDidSucceed: function(t) {
                    this._state = o.Succeeded,
                    n.loaderDidComplete(this),
                    "function" == typeof this._delegate.loaderDidSucceed && this._delegate.loaderDidSucceed(this, t),
                    this._reset()
                },
                loaderDidFail: function(t) {
                    this._state = o.Failed,
                    n.loaderDidComplete(this),
                    "function" == typeof this._delegate.loaderDidFail && this._delegate.loaderDidFail(this, t),
                    this._reset()
                },
                init: function(t, e) {
                    this._delegate = e,
                    this._state = o.Unscheduled,
                    this._retries = 0,
                    this._timeoutID = -1,
                    this.priority = t,
                    this._unscheduled = !1
                },
                _reset: function() {
                    clearTimeout(this._timeoutID)
                },
                _reload: function() {
                    var t;
                    this._retries++,
                    this._retries < 3 ? (t = "number" == typeof this._delay ? this._delay : 1e4,
                    this._timeoutID = setTimeout(this.loaderWillStart.bind(this), t)) : this.loaderDidFail()
                }
            },
            t.exports = s
        }
        ,
        1135: (t,e,i)=>{
            var n, o = i(1486), s = [], a = (s[o.Highest] = 12,
            s[o.High] = 12,
            s[o.Medium] = 4,
            s[o.Low] = 1,
            []), r = [];
            for (n in o)
                a[o[n]] = [],
                r[o[n]] = 0;
            function l() {
                for (var t in o) {
                    if (0 < a[o[t]].length) {
                        if (r[o[t]] === s[o[t]])
                            break;
                        return a[o[t]][0]
                    }
                    if (0 < r[o[t]])
                        break
                }
                return null
            }
            function h() {
                for (var t = l(); t; )
                    r[t.priority]++,
                    function() {
                        for (var t in o)
                            if (0 < a[o[t]].length)
                                return a[o[t]].shift()
                    }(),
                    t.loaderWillStart(),
                    t = l()
            }
            t.exports = {
                schedule: function(t) {
                    a[t.priority].push(t),
                    h()
                },
                unschedule: function(t) {
                    var e, i = t;
                    for (e in o) {
                        var n = a[o[e]].indexOf(i);
                        if (-1 !== n)
                            return a[o[e]].splice(n, 1),
                            !0
                    }
                    return !1
                },
                loaderDidComplete: function(t) {
                    r[t.priority]--,
                    h()
                }
            }
        }
        ,
        1486: t=>{
            t.exports = {
                Highest: 0,
                High: 1,
                Medium: 2,
                Low: 3
            }
        }
        ,
        2380: t=>{
            t.exports = {
                Unscheduled: 0,
                Waiting: 1,
                Loading: 2,
                Canceled: 3,
                Succeeded: 4,
                Failed: 5
            }
        }
        ,
        9728: (t,e,i)=>{
            var o = i(2221)
              , s = i(3801)
              , a = i(1486);
            function n(t, e, i) {
                var n = (i = i || {}).priority || a.Highest;
                s.call(this, n, e),
                this._url = t,
                this._method = i.method || "GET",
                this._retry = !0 === i.retry,
                this._delay = i.delay,
                this._headers = i.headers,
                this._timeout = i.timeout,
                this._withCredentials = i.withCredentials,
                o.isNode() && (this._origin = i.origin)
            }
            n.prototype = o.inheritPrototype(s, n, {
                get xhrData() {
                    return this._xhrData
                },
                unschedule: function() {
                    return this._xhr && this._xhr.abort(),
                    s.prototype.unschedule.call(this)
                },
                loaderWillStart: function() {
                    s.prototype.loaderWillStart.call(this),
                    this._xhr = o.xhr(this),
                    this._xhr.open(this._method, this._url, !0),
                    this._xhr.timeout = this._timeout,
                    this._xhr.withCredentials = this._withCredentials,
                    this._origin && (this._xhr.setDisableHeaderCheck(!0),
                    this._xhr.setRequestHeader("Origin", this._origin)),
                    this._headers && Object.keys(this._headers).forEach(function(t) {
                        this._xhr.setRequestHeader(t, this._headers[t])
                    }, this),
                    ("POST" !== this._method || this._xhrData || (this._xhrData = this._delegate.getDataToSend(this._xhr),
                    this._xhrData)) && this._xhr.send(this._xhrData)
                },
                handleEvent: function(t) {
                    "error" === t.type || "timeout" === t.type || 200 !== t.target.status ? this._retry ? s.prototype._reload.call(this) : this.loaderDidFail(t.target) : "load" === t.type ? this.loaderDidSucceed(t.target) : console.log("Unhandled XHR event type:", t.type, " status:", t.target.status)
                }
            }),
            t.exports = n
        }
        ,
        9780: (t,e,i)=>{
            "use strict";
            t.exports = {
                LangTag: i(6311),
                Locale: i(9470),
                LanguageSupport: i(7748),
                L10n: i(4113),
                UseMetric: i(5416),
                localizeDigits: i(4928)
            }
        }
        ,
        4113: (t,e,i)=>{
            "use strict";
            var n = i(3838)
              , o = i(9470)
              , h = i(6311)
              , s = i(7585)
              , a = i(4928)
              , r = "en-US";
            function l(t, e, i) {
                return new o(e,i,t.delegate,t.dowForBestMatch(e))
            }
            function c(t, e) {
                t.locales[e.localeId] || (t.locales[e.localeId] = e),
                t.activeLocale = e;
                var i = new n.Event(d.Events.LocaleChanged);
                i.locale = e,
                t.dispatchEvent(i)
            }
            function d(t) {
                var o, n;
                this.delegate = t,
                this.locales = t.localesCache || Object.create(null),
                this.supportMap = t.supportCache || Object.create(null),
                this.scriptMap = t.scriptCache || Object.create(null),
                c(this, this.locales[r] || l(this, r, this.delegate.enUSDictionary)),
                (o = this).supportMap._built || (o.supportMap._built = !0,
                o.delegate.supportedLocales.forEach(function(t) {
                    var e, i, n, t = h.parse(t);
                    e = o,
                    i = (t = t).language,
                    n = t.region,
                    e.supportMap[i] || (e.supportMap[i] = []),
                    -1 !== e.delegate.primaryLocales.indexOf(t.tag) ? e.supportMap[i].splice(0, 0, n) : e.supportMap[i].push(n)
                })),
                (n = this).scriptMap._built || (n.scriptMap._built = !0,
                Object.keys(n.delegate.regionToScriptMap).forEach(function(i) {
                    n.scriptMap[i] = Object.create(null),
                    Object.keys(n.delegate.regionToScriptMap[i]).forEach(function(t) {
                        var e = n.delegate.regionToScriptMap[i][t].toLowerCase();
                        n.scriptMap[i][e] = t
                    })
                }))
            }
            d.Events = {
                LocaleChanged: "locale-changed"
            },
            d.Days = {
                Sunday: 0,
                Monday: 1,
                Tuesday: 2,
                Wednesday: 3,
                Thursday: 4,
                Friday: 5,
                Saturday: 6
            },
            n.EventTarget(d.prototype = {
                constructor: d,
                Events: d.Events,
                get: function(t, e) {
                    return this.activeLocale.get(t, e)
                },
                get localeId() {
                    return this.activeLocale.localeId
                },
                set localeId(t) {
                    var i, n, e;
                    this._requestedLocaleId !== t && (n = t,
                    t = (i = this)._requestedLocaleId = n,
                    -1 === i.delegate.supportedLocales.indexOf(n) && (t = i.bestMatch(n, r)),
                    i.activeLocale && i.activeLocale.localeId === t || ((e = i.locales[t]) || (e = l(i, t)).ready ? c(i, e) : e.load(function(t, e) {
                        if (i._requestedLocaleId === n)
                            return t ? (i._requestedLocaleId = r,
                            void c(i, i.locales[r])) : void c(i, e)
                    })))
                },
                get loaded() {
                    return this._requestedLocaleId && this.bestMatch(this._requestedLocaleId, r) === this.localeId
                },
                get requestedLocaleId() {
                    return this._requestedLocaleId
                },
                set requestedLocaleId(t) {
                    console.warn("l10n: requestedLocaleId can't be set, use localeId.")
                },
                get localeIds() {
                    return Object.keys(this.locales)
                },
                get supportedLocaleIds() {
                    return this.delegate.supportedLocales
                },
                bestMatch: function(t, e) {
                    var i, n, o, s, a, r, t = h.parse(t), l = null;
                    return t && this.delegate.localesMap && ((i = this.delegate.localesMap)[t.tag] ? t = h.parse(i[t.tag]) : i[t.language] && (t = h.parse(i[t.language]))),
                    e = e || null,
                    t && (i = this,
                    t = (n = t).language,
                    s = n.region,
                    a = n.script,
                    l = (r = i.supportMap[t]) ? (o = (o = !(o = s ? r.filter(function(t) {
                        return t.toUpperCase() === n.region.toUpperCase()
                    })[0] : o) && a && (s = i.scriptMap[t]) ? s[a.toLowerCase()] : o) || r[0],
                    new h(t,o)) : null),
                    l ? l.tag : e
                },
                dowForBestMatch: function(t, e) {
                    return s[this.bestMatch(t, e)]
                },
                digits: function(t) {
                    return a(t, this.localeId)
                }
            }),
            t.exports = d
        }
        ,
        6311: (t,e,i)=>{
            "use strict";
            var n = i(2221);
            function r(t, e, i) {
                this.language = t.toLowerCase(),
                e && (this.region = e.toUpperCase()),
                i && (this.script = n.capitalize(i))
            }
            r.prototype = {
                constructor: r,
                get tag() {
                    var t = this.language;
                    return this.region ? t + "-" + this.region : this.script ? t + "-" + this.script : t
                },
                toString: function() {
                    var t = "{ language: " + this.language;
                    return this.region && (t += ", region: " + this.region),
                    this.script && (t += ", script: " + this.script),
                    t + " }"
                }
            },
            r.parse = function(t) {
                var e, i, n;
                if (t && "string" == typeof t) {
                    if (-1 !== t.indexOf("_"))
                        return console.warn("Invalid character: '_'"),
                        null;
                    var o = t.split("-");
                    if ((e = o[0]).length < 2 || 4 < e.length)
                        return console.warn("Invalid language:", t),
                        null;
                    if (!(o.length < 4))
                        return console.warn("Don't know how to parse language tags with more than 3 parts:", t),
                        null;
                    for (var s = 1; s < o.length; s++) {
                        var a = o[s];
                        if (4 === a.length)
                            n = a;
                        else {
                            if (!(1 < a.length && a.length < 4))
                                return console.warn("Don't know how to parse:", t),
                                null;
                            i = a
                        }
                    }
                    return new r(e,i,n)
                }
                return null
            }
            ,
            t.exports = r
        }
        ,
        7748: (t,e,i)=>{
            "use strict";
            var r = i(6311);
            function n(t) {
                this.supportMap = Object.create(null),
                this.delegate = t,
                this.delegate.supportedLocales.forEach(function(t) {
                    var e, i, n;
                    t = r.parse(t),
                    e = this.supportMap,
                    i = t.language,
                    n = t.region,
                    t = t.script,
                    e[i] || (e[i] = {
                        regions: [],
                        scripts: []
                    }),
                    n && e[i].regions.push(n),
                    t && e[i].scripts.push(t)
                }, this)
            }
            n.prototype = {
                constructor: n,
                bestMatch: function(t, e) {
                    var i, t = r.parse(t), n = null;
                    return t && this.delegate.localesMap && ((i = this.delegate.localesMap)[t.tag] ? t = r.parse(i[t.tag]) : i[t.language] && (t = r.parse(i[t.language]))),
                    e = e || null,
                    (n = t ? function(e, t, i) {
                        var n = e.language
                          , o = e.region
                          , s = e.script
                          , i = i[n];
                        if (!i)
                            return null;
                        if (o) {
                            var a = i.regions.filter(function(t) {
                                return t.toUpperCase() === e.region.toUpperCase()
                            })[0];
                            if (a)
                                return new r(n,a);
                            a = t[n];
                            a && a[o.toUpperCase()] && (e.script = s = a[o.toUpperCase()])
                        }
                        return s ? (t = i.scripts.filter(function(t) {
                            return t.toUpperCase() === e.script.toUpperCase()
                        })[0],
                        new r(n,null,t)) : new r(n)
                    }(t, this.delegate.regionToScriptMap, this.supportMap) : n) ? n.tag : e
                }
            },
            n.parseAcceptLanguage = function(t) {
                return t ? t.split(",").map(function(t) {
                    return t ? (t = t.split(";"),
                    {
                        langTag: r.parse(t[0]),
                        quality: t[1] ? parseFloat(t[1].split("=")[1]) : 1
                    }) : null
                }).filter(function(t) {
                    return !!t
                }).sort(function(t, e) {
                    return e.quality - t.quality
                }) : null
            }
            ,
            t.exports = n
        }
        ,
        9470: (t,e,i)=>{
            "use strict";
            var n = i(2221)
              , s = i(7095).XHRLoader;
            function o(t, e, i, n) {
                this.localeId = t,
                this._dict = e || {},
                this.ready = !!e,
                this.delegate = i,
                this.rtl = -1 < i.rtlLocales.indexOf(t),
                this.dow = n
            }
            o.prototype = {
                constructor: o,
                get: function(t, e) {
                    var i = this._dict[t];
                    return i ? n.fillTemplate(i, e = e || {}, !0) : "[" + t + "]"
                },
                load: function(n) {
                    var t = this.delegate.localeUrl
                      , o = this
                      , t = t.replace(/{{(.*?)}}/, this.localeId);
                    new s(t,{
                        loaderDidSucceed: function(t, e) {
                            var i;
                            if (e.status < 200 || 300 <= e.status)
                                i = "HTTP error " + e.status + " loading strings for locale: " + o.localeId,
                                n(new Error(i));
                            else {
                                try {
                                    o._dict = JSON.parse(e.responseText)
                                } catch (t) {
                                    return i = "Failed to parse response for locale: " + o.localeId,
                                    void n(new Error(i))
                                }
                                o.ready = !0,
                                n(null, o)
                            }
                        },
                        loaderDidFail: function(t, e) {
                            var i = "Network error loading strings for locale: " + o.localeId;
                            n(new Error(i))
                        }
                    },{
                        withCredentials: this.delegate.withCredentials
                    }).schedule()
                }
            },
            t.exports = o
        }
        ,
        4928: t=>{
            var h = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
              , c = {
                "ar-SA": ["٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩"],
                "hi-IN": ["०", "१", "२", "३", "४", "५", "६", "७", "८", "९"]
            }
              , e = ","
              , d = {
                "ca-ES": e,
                "ca-CZ": e,
                "da-DK": e,
                "da-DE": e,
                "el-GR": e,
                "en-ZA": e,
                "es-ES": e,
                "fi-FI": e,
                "fr-CA": e,
                "fr-FR": e,
                "hr-HR": e,
                "hu-HU": e,
                "it-IT": e,
                "nb-NO": e,
                "nl-NL": e,
                "pl-PL": e,
                "pt-BR": e,
                "pt-PT": e,
                "ro-RO": e,
                "ru-RU": e,
                "sk-SK": e,
                "sv-SE": e,
                "tr-TR": e,
                "uk-UA": e
            };
            t.exports = function(t, e) {
                for (var i = c[e] || h, n = d[e] || ".", o = "", s = t.toString(), a = 0, r = s.length; a < r; ++a) {
                    var l = s.charAt(a);
                    o += "." === l ? n : i[parseInt(l, 10)] || l
                }
                return o
            }
        }
        ,
        5416: t=>{
            "use strict";
            var i = ["AS", "BS", "BZ", "DM", "FK", "GB", "GD", "GU", "KN", "KY", "LC", "LR", "MM", "MP", "SH", "TC", "US", "VC", "VG", "VI", "WS"];
            t.exports = {
                forRegion: function(t) {
                    return !!t && i.indexOf(t) < 0
                },
                forLanguageTag: function(t) {
                    var e = t.region;
                    return e ? i.indexOf(e) < 0 : "en" !== t.language && "my" !== t.language
                }
            }
        }
        ,
        7768: (t,e,i)=>{
            var n = i(3838)
              , o = i(3045)
              , s = i(8756)
              , a = i(8760)
              , r = i(2221)
              , l = i(5097)
              , h = i(1055)
              , c = []
              , d = []
              , u = 0
              , p = 1
              , m = 2
              , _ = 3;
            function g() {
                this._parent = null,
                this._children = []
            }
            function f(t) {
                g.call(this),
                this.shadowRootMode = t
            }
            function v(t) {
                var e, i;
                t ? t instanceof window.Node && t.nodeType === window.Node.ELEMENT_NODE ? this.domNode = t : "string" == typeof t || t instanceof String ? this.domNode = (e = t,
                (i = document.createElement("div")).innerHTML = e,
                i.firstElementChild) : "object" == typeof t && (this.domNode = function e(t) {
                    var i = t.name;
                    if ("#text" === i)
                        return document.createTextNode(t.value);
                    var n = document.createElement(i)
                      , o = t.attributes;
                    for (var s in o)
                        n.setAttribute(s, o[s]);
                    return t.children instanceof Array && t.children.forEach(function(t) {
                        n.appendChild(e(t))
                    }),
                    n
                }(t)) : this.domNode = document.createElement("div"),
                g.call(this),
                this._opacity = 1,
                this._color = "",
                this._size = new o,
                this._position = new s,
                this._transform = new a,
                this._backgroundImages = [],
                this._classList = new E(this),
                this._wantsHardwareCompositing = !1,
                this._dirtyAttributes = {},
                this._dirtyProperties = [],
                this._pendingDOMManipulation = u
            }
            function y() {
                c.forEach(w),
                c = [],
                d.forEach(C),
                d = [],
                v.updates++,
                S.dispatchEvent(new n.Event("update"))
            }
            function w(s) {
                var t;
                s._pendingDOMManipulation === p && (t = s.domNode.parentNode) && t.removeChild(s.domNode),
                s._dirtyProperties && (s._dirtyProperties.forEach(function(t) {
                    var e = s
                      , i = e.domNode
                      , n = i.style;
                    switch (t) {
                    case "opacity":
                        n.opacity = e._opacity;
                        break;
                    case "color":
                        n.color = e._color;
                        break;
                    case "size":
                        n.width = e._size.width + "px",
                        n.height = e._size.height + "px";
                        break;
                    case "will-change":
                        n.willChange = e._wantsHardwareCompositing ? "transform" : "";
                        break;
                    case "position":
                    case "transform":
                        var o = (new a).translate(b(e._position.x), b(e._position.y)).transform(e._transform);
                        n.transform = o;
                        break;
                    case "backgroundImages":
                        !function(t) {
                            var e = t.domNode.style;
                            if (!t._backgroundImages.length)
                                return e.removeProperty("background-image"),
                                e.removeProperty("background-position"),
                                e.removeProperty("background-size");
                            for (var i = [], n = [], o = [], s = t._backgroundImages, a = s.length - 1; 0 <= a; --a) {
                                var r = s[a];
                                i.push("url(" + r.url + ")"),
                                n.push(r.position.x + "px " + r.position.y + "px"),
                                o.push(r.size.width + "px " + r.size.height + "px")
                            }
                            e.backgroundImage = i.join(","),
                            e.backgroundPosition = n.join(","),
                            e.backgroundSize = o.join(",")
                        }(e);
                        break;
                    case "classList":
                        i.setAttribute("class", e._classList),
                        e._classList.reset()
                    }
                }),
                s._dirtyProperties = []),
                s._dirtyAttributes && (Object.getOwnPropertyNames(s._dirtyAttributes).forEach(function(t) {
                    null === s._dirtyAttributes[t] ? s.domNode.removeAttribute(t) : s.domNode.setAttribute(t, s._dirtyAttributes[t])
                }),
                s._dirtyAttributes = {}),
                s._pendingDOMManipulation !== m && s._pendingDOMManipulation !== _ || k(d, s.parent)
            }
            function C(t) {
                for (var e = null, i = t.domNode, n = t.children.length - 1; 0 <= n; --n) {
                    var o = t.children[n]
                      , s = o.domNode;
                    switch (o._pendingDOMManipulation) {
                    case m:
                        i.insertBefore(s, e),
                        o._pendingDOMManipulation = u;
                        break;
                    case _:
                        var a = i.attachShadow({
                            mode: o.shadowRootMode
                        });
                        o.domNode = a,
                        o._pendingDOMManipulation = u
                    }
                    e = s
                }
            }
            function b(t) {
                var e = Math.max(Math.round(window.devicePixelRatio), 1);
                return Math.round(t * e) / e
            }
            function k(t, e) {
                return -1 === t.indexOf(e) && (t.push(e),
                !0)
            }
            function L(t, e) {
                e = t.indexOf(e);
                return -1 !== e && (t.splice(e, 1),
                !0)
            }
            function E(t) {
                this._node = t,
                this.reset()
            }
            g.prototype = {
                constructor: v,
                domNode: null,
                nodeIsShadowRoot: !1,
                get parent() {
                    return this._parent
                },
                get children() {
                    return this._children
                },
                set children(t) {
                    for (var e = this._children; e.length; )
                        this.removeChild(e[0]);
                    t.forEach(function(t) {
                        this.addChild(t)
                    }, this)
                },
                get childCount() {
                    return this._children.length
                },
                get firstChild() {
                    return this._children[0] || null
                },
                get lastChild() {
                    return this._children[this._children.length - 1] || null
                },
                get previousSibling() {
                    var t, e;
                    return this._parent && 0 < (e = (t = this._parent._children).indexOf(this)) ? t[e - 1] : null
                },
                get nextSibling() {
                    var t, e;
                    return this._parent && -1 !== (e = (t = this._parent._children).indexOf(this)) && e < t.length - 1 ? t[e + 1] : null
                },
                addChild: function(t, e) {
                    if (0 === e && this._children[0] && this._children[0].nodeIsShadowRoot)
                        throw new TypeError("RenderTree.RenderNode.addChild: Node cannot insert before shadow root node.");
                    return t.willMoveToParent(this),
                    t._doNotNotifyParentChange = !0,
                    t.remove(),
                    delete t._doNotNotifyParentChange,
                    (void 0 === e || e < 0 || e > this._children.length) && (e = this._children.length),
                    this._children.splice(e, 0, t),
                    t._parent = this,
                    t.didMoveToParent(this),
                    this.didAddChild(t),
                    t._markNodeManipulation(m),
                    t
                },
                insertBefore: function(t, e) {
                    return this.addChild(t, this._children.indexOf(e))
                },
                insertAfter: function(t, e) {
                    e = this._children.indexOf(e);
                    return this.addChild(t, -1 !== e ? e + 1 : 0)
                },
                removeChild: function(t) {
                    if (t._parent === this) {
                        var e = this._children.indexOf(t);
                        if (-1 !== e) {
                            if (t.nodeIsShadowRoot)
                                throw new TypeError("RenderTree.RenderNode: Not supported in ShadowRoot-backed RenderNode.");
                            return this.willRemoveChild(t),
                            t._doNotNotifyParentChange || t.willMoveToParent(null),
                            this._children.splice(e, 1),
                            t._parent = null,
                            t._doNotNotifyParentChange || t.didMoveToParent(null),
                            t._markNodeManipulation(p),
                            t
                        }
                    }
                },
                remove: function() {
                    if (this._parent instanceof g)
                        return this._parent.removeChild(this)
                },
                findNode: function(i, n) {
                    if ("function" != typeof i)
                        throw new TypeError("RenderTree.RenderNode.findNode: callback must be a function");
                    var o, s = this;
                    return function e(t) {
                        t !== s && i.call(n, t) ? o = t : t.children.some(function(t) {
                            return e(t),
                            o
                        })
                    }(s),
                    o
                },
                dump: function(t) {
                    return function t(e, i, n, o) {
                        var s = "";
                        s += i,
                        o && (s += n < 0 ? "" : n + ":"),
                        s = (s += e.toString()) + (e.childCount < 1 ? "" : " ⤵︎ " + e.childCount);
                        for (var a = e.children, r = 0, l = a.length; r < l; ++r)
                            var h = e.childCount < 1 ? -1 : r
                              , s = (s += "\n") + t(a[r], i + "    ", h, o);
                        return s
                    }(this, "", -1, t)
                },
                willRemoveChild: function(t) {},
                didAddChild: function(t) {},
                willMoveToParent: function(t) {},
                didMoveToParent: function(t) {},
                _markDirtyProperty: function(t, e) {
                    (void 0 === e || e ? k : L)(this._dirtyProperties, t) && this._updateNodeDirtiness()
                },
                _markNodeManipulation: function(t) {
                    this._pendingDOMManipulation = t,
                    this._updateNodeDirtiness()
                },
                _updateNodeDirtiness: function() {
                    this._pendingDOMManipulation !== u || 0 < this._dirtyProperties.length || 0 < Object.getOwnPropertyNames(this._dirtyAttributes).length ? (k(c, this),
                    l.scheduleDraw(y)) : L(c, this)
                }
            },
            f.prototype = r.inheritPrototype(g, f, {
                nodeIsShadowRoot: !0,
                shadowRootMode: void 0,
                toString: function() {
                    return this.stringInfo() + " [" + this.shadowRootMode + "]"
                },
                stringInfo: function() {
                    return "#shadow-root"
                }
            }),
            v.prototype = r.inheritPrototype(g, v, {
                get element() {
                    return this.domNode
                },
                set element(t) {
                    this.domNode = t
                },
                get classList() {
                    return this._classList
                },
                get wantsHardwareCompositing() {
                    return this._wantsHardwareCompositing
                },
                set wantsHardwareCompositing(t) {
                    t !== this._wantsHardwareCompositing && (this._wantsHardwareCompositing = t,
                    this._markDirtyProperty("will-change"))
                },
                get opacity() {
                    return this._opacity
                },
                set opacity(t) {
                    (t = Math.min(Math.max(0, t), 1)) !== this._opacity && (this._opacity = t,
                    this._markDirtyProperty("opacity"))
                },
                get color() {
                    return this._color
                },
                set color(t) {
                    t !== this._color && (this._color = t,
                    this._markDirtyProperty("color"))
                },
                get position() {
                    return this._position
                },
                set position(t) {
                    this._position = t,
                    this._markDirtyProperty("position")
                },
                get transform() {
                    return this._transform
                },
                set transform(t) {
                    this._transform = t,
                    this._markDirtyProperty("transform")
                },
                get backgroundImages() {
                    return this._backgroundImages
                },
                set backgroundImages(t) {
                    this._backgroundImages = t || [],
                    this._markDirtyProperty("backgroundImages")
                },
                get size() {
                    return this._size
                },
                set size(t) {
                    this._size = t || new o,
                    this._markDirtyProperty("size")
                },
                setAttribute: function(t, e) {
                    this._dirtyAttributes[t] = e,
                    this._updateNodeDirtiness()
                },
                removeAttribute: function(t) {
                    this._dirtyAttributes[t] = null,
                    this._updateNodeDirtiness()
                },
                createAndAddShadowRootChild: function(t) {
                    if (this._children[0] && this._children[0].nodeIsShadowRoot)
                        throw new Error("RenderTree.RenderNode.createAndAddShadowRootChild: Cannot add more than one shadow root.");
                    t = new f(t || "closed");
                    return this._children.unshift(t),
                    (t._parent = this).didAddChild(t),
                    t._markNodeManipulation(_),
                    t
                },
                convertPointFromPage: function(t) {
                    return h.fromPageToElement(this.domNode, t)
                },
                convertPointToPage: function(t) {
                    return h.fromElementToPage(this.domNode, t)
                },
                toString: function() {
                    var t = "";
                    return this._wantsHardwareCompositing && (t += "🏁 "),
                    t += this.stringInfo(),
                    this.classList.toString() && (t += this.classList._classes().map(function(t) {
                        return "." + t
                    }).join(", ")),
                    0 === this.position.x && 0 === this.position.y || (t += " (" + this.position.x + ", " + this.position.y + ")"),
                    0 === this.size.width && 0 === this.size.height || (t += " " + this.size.width + "x" + this.size.height),
                    1 !== this.opacity && (t += " [opacity:" + this.opacity + "]"),
                    this.transform.toString() && (t += " [" + this.transform.toString() + "]"),
                    t
                },
                stringInfo: function() {
                    return "<" + this.domNode.tagName.toLowerCase() + ">"
                }
            }),
            v.updates = 0,
            E.prototype = {
                constructor: E,
                add: function(t) {
                    this._add(t)
                },
                remove: function(t) {
                    this._remove(t)
                },
                contains: function(t) {
                    return -1 !== this._classes().indexOf(t)
                },
                toggle: function(t, e) {
                    if (1 < arguments.length)
                        return e ? this._add(t) : this._remove(t),
                        !!e;
                    this._add(t) || this._remove(t)
                },
                toString: function() {
                    return this._classes().join(" ")
                },
                _classes: function() {
                    var t;
                    return this._populateClasses && ("string" == typeof (t = this._node.domNode.className).baseVal && (t = t.baseVal),
                    this.__classes = t.split(/[ ]+/).filter(Boolean),
                    delete this._populateClasses),
                    this.__classes
                },
                reset: function() {
                    this._additions = [],
                    this._removals = [],
                    this.__classes = [],
                    this._populateClasses = !0
                },
                _add: function(t) {
                    var e;
                    return !!t && ((e = k(this._classes(), t)) && (L(this._removals, t) || k(this._additions, t),
                    this._updateNodeDirtiness()),
                    e)
                },
                _remove: function(t) {
                    var e;
                    return !!t && ((e = L(this._classes(), t)) && (L(this._additions, t) || k(this._removals, t),
                    this._updateNodeDirtiness()),
                    e)
                },
                _updateNodeDirtiness: function() {
                    this._node._markDirtyProperty("classList", 0 < this._additions.length || 0 < this._removals.length)
                }
            };
            var S = new n.EventTarget;
            S.Node = v,
            S.Point = s,
            S.Transform = a,
            t.exports = S
        }
        ,
        5097: (t,e,i)=>{
            var n = i(3507)
              , o = i(8193)
              , l = -1
              , h = []
              , c = []
              , d = []
              , u = 0
              , p = 1
              , m = 2
              , _ = 3
              , g = u;
            function f() {
                -1 === l && (0 < h.length || 0 < d.length) && (l = window.requestAnimationFrame(s))
            }
            function s() {
                for (g === _ && -1 !== l && window.cancelAnimationFrame(l),
                g = p; 0 < h.length; ) {
                    var t = h;
                    h = [];
                    for (var e = 0, i = t.length; e < i; ++e) {
                        var n = t[e];
                        "function" == typeof n ? n() : n && "object" == typeof n && "function" == typeof n.performScheduledUpdate && n.performScheduledUpdate()
                    }
                }
                h = c,
                c = [],
                g = m;
                var o = d;
                d = [];
                for (var s = 0, a = o.length; s < a; ++s) {
                    var r = o[s];
                    "function" == typeof r ? r() : r && "object" == typeof r && "function" == typeof r.performScheduledDraw && r.performScheduledDraw()
                }
                g = u,
                l = -1,
                f()
            }
            function a(t, e) {
                return -1 === t.indexOf(e) && (t.push(e),
                1)
            }
            t.exports = {
                scheduleASAP: function(t) {
                    a(h, t) && f()
                },
                scheduleOnNextFrame: function(t) {
                    a(g === p ? c : h, t) && f()
                },
                scheduleDraw: function(t) {
                    a(d, t) && f()
                },
                flush: function() {
                    u < g || (g = _,
                    s())
                },
                Priority: o,
                scheduleInBackground: function(t, e) {
                    n.schedule(t, e || o.Low)
                }
            }
        }
        ,
        3507: (t,e,i)=>{
            var n, o = i(1807), s = i(8193), a = [{
                timeout: 600
            }, {
                timeout: 1e3
            }, {
                timeout: 3e3
            }, {}], r = [function(t) {
                c(t, s.Highest)
            }
            , function(t) {
                c(t, s.High)
            }
            , function(t) {
                c(t, s.Medium)
            }
            , function(t) {
                c(t, s.Low)
            }
            ], l = [-1, -1, -1, -1], h = [];
            for (n in s)
                h[s[n]] = [];
            function c(t, e) {
                for (; (0 < t.timeRemaining() || t.didTimeout) && h[e].length; ) {
                    var i = h[e].shift();
                    "function" == typeof i ? i() : i && "object" == typeof i && "function" == typeof i.performScheduledTask && i.performScheduledTask()
                }
                h[e].length ? l[e] = o.request(r[e], a[e]) : (o.cancel(l[e]),
                l[e] = -1)
            }
            t.exports = {
                schedule: function(t, e) {
                    h[e].push(t),
                    -1 === l[e] && (l[e] = o.request(r[e], a[e]))
                }
            }
        }
        ,
        8193: t=>{
            t.exports = {
                Highest: 0,
                High: 1,
                Medium: 2,
                Low: 3
            }
        }
        ,
        1807: t=>{
            function n() {
                this._startTime = Date.now()
            }
            n.prototype = {
                _budget: 10,
                didTimeout: !1,
                timeRemaining: function() {
                    return Math.max(0, this._budget - (Date.now() - this._startTime))
                }
            },
            t.exports.request = function(t, e) {
                return "undefined" != typeof window && window.requestIdleCallback ? window.requestIdleCallback(t, e) : (i = t,
                setTimeout(function() {
                    var t = new n;
                    i(t)
                }));
                var i
            }
            ,
            t.exports.cancel = function(t, e) {
                return "undefined" != typeof window && window.cancelIdleCallback ? window.cancelIdleCallback(t, e) : clearTimeout(t)
            }
        }
        ,
        1055: (t,e,i)=>{
            var h = i(5348)
              , c = i(8756);
            function n(t) {
                for (var e, i = t.getBoundingClientRect(), n = t.offsetWidth, o = t.offsetHeight, n = [new c(0,0), new c(n,0), new c(n,o), new c(0,o)], s = new h, a = t.ownerDocument.defaultView; t.nodeType === Node.ELEMENT_NODE; )
                    e = a.getComputedStyle(t),
                    s = new h(e.transform).multiply(s),
                    t = t.parentNode;
                var r = 1 / 0
                  , l = 1 / 0
                  , o = (n.forEach(function(t) {
                    t = s.transformPoint(t);
                    r = Math.min(r, t.x),
                    l = Math.min(l, t.y)
                }),
                window.pageXOffset + i.left - r)
                  , n = window.pageYOffset + i.top - l;
                return (new h).translate(o, n).multiply(s)
            }
            t.exports = {
                fromPageToElement: function(t, e) {
                    return n(t).inverse().transformPoint(e)
                },
                fromElementToPage: function(t, e) {
                    return n(t).transformPoint(e)
                }
            }
        }
        ,
        2137: (t,e,i)=>{
            var n = i(5869)
              , o = i(2221)
              , s = i(5884)
              , a = i(7095).XHRLoader
              , r = i(7095).Priority
              , l = i(87)
              , h = i(5097)
              , c = i(2244)
              , i = "DEVICE_IDENTIFIER"
              , d = "BROWSER_INFO"
              , u = "APPLICATION_IDENTIFIER"
              , p = "USER_SESSION"
              , m = {
                UserActionEvents: ["SCREEN_SIZE", i, d, u, "BROWSER_WINDOW_SIZE", "URL", "MAP_VIEW", p, "TILES"],
                NetworkEvents: [i, d, u, p]
            }
              , _ = "USER_ACTION"
              , g = "NETWORK"
              , i = {
                Zoom: {
                    name: "ZOOM",
                    states: m.UserActionEvents,
                    type: _
                },
                MapsLoad: {
                    name: "MAPS_LOAD",
                    states: m.UserActionEvents,
                    type: _
                },
                AnnotationClick: {
                    name: "ANNOTATION_CLICK",
                    states: m.UserActionEvents,
                    type: _
                },
                MapTypeChange: {
                    name: "MAP_TYPE_CHANGE",
                    states: m.UserActionEvents,
                    type: _
                },
                MapNodeReady: {
                    name: "MAP_NODE_READY",
                    states: m.UserActionEvents,
                    type: _
                },
                Search: {
                    name: "SEARCH",
                    states: m.NetworkEvents,
                    type: g
                },
                SearchAC: {
                    name: "SEARCH_AC",
                    states: m.NetworkEvents,
                    type: g
                },
                ForwardGeocoder: {
                    name: "FORWARD_GEOCODER",
                    states: m.NetworkEvents,
                    type: g
                },
                ReverseGeocoder: {
                    name: "REVERSE_GEOCODER",
                    states: m.NetworkEvents,
                    type: g
                },
                Directions: {
                    name: "DIRECTIONS",
                    states: m.NetworkEvents,
                    type: g
                },
                PointsOfInterestSearch: {
                    name: "POINTS_OF_INTEREST_SEARCH",
                    states: m.NetworkEvents,
                    type: g
                }
            };
            function f() {
                this._doNotTrack = o.doNotTrack(),
                this._isInternalClient = /\.apple\.com$/.test(window.origin) || /\.icloud\.com$/.test(window.origin) || /\.filemaker\.com$/.test(window.origin) || /\.apple-mapkit\.com$/.test(window.origin) || /\.tryrating\.com$/.test(window.origin),
                this._isAppHostingSite = /\.appspot.com$/.test(window.origin) || /\.herokuapp.com$/.test(window.origin),
                n.addEventListener(n.Events.Changed, this),
                n.ready && this._configurationBecameAvailable(),
                this.uaParserInfo = l.parseUserAgent(navigator.userAgent),
                this._debouncedQueueAsBackgroundTask = c(this._queueAsBackgroundTask, 1e4, this),
                window.addEventListener("pagehide", this)
            }
            f.prototype = {
                _queuedMessages: [],
                _loader: null,
                _analyticsUrl: null,
                _errorUrl: null,
                _sessionId: null,
                _sessionTimerStart: null,
                _sessionTimeToExpire: null,
                _sequenceNumber: null,
                _doNotTrack: null,
                Events: i,
                EventTarget: "UI_TARGET_UNKNOWN",
                log: function(t, e) {
                    this._doNotTrack || ((!this._sessionId || (new Date).getTime() > this._sessionTimeToExpire) && this._initSession(),
                    (e = e || {}).uaParserInfo = this.uaParserInfo,
                    this._queuedMessages.push(this._createMessage(t, e)),
                    this._sequenceNumber++,
                    n.analytics && this._debouncedQueueAsBackgroundTask())
                },
                getDataToSend: function(t) {
                    return 0 === this._queuedMessages.length ? (this._loader.unschedule(),
                    !1) : (t.setRequestHeader("Content-Type", "text/plain"),
                    t.responseType = "text",
                    this._createJSON())
                },
                loaderDidSucceed: function(t) {
                    delete this._loader
                },
                loaderDidFail: function(t) {
                    this._queuedMessages = this._queuedMessages.concat(JSON.parse(t.xhrData).analytics_event),
                    delete this._loader
                },
                handleEvent: function(t) {
                    switch (t.type) {
                    case n.Events.Changed:
                        this._configurationBecameAvailable();
                        break;
                    case "pagehide":
                        this._sendPendingData()
                    }
                },
                reduceHost: function(t) {
                    var e = t.match(/([^.]+\.[^.]+)$/);
                    return e && 0 < e.length ? e[0] : t
                },
                _createMessage: function(t, e) {
                    var i, n;
                    switch (t.type) {
                    case _:
                        i = this._createUserActionMessage(t, e);
                        break;
                    case g:
                        i = this._createNetworkMessage(t, e);
                        break;
                    default:
                        i = {}
                    }
                    return e.states ? (n = m.UserActionEvents.concat(Object.keys(e.states)),
                    i.analytics_state = this._createStateMessages(n, e)) : i.analytics_state = this._createStateMessages(t.states, e),
                    i
                },
                _createUserActionMessage: function(t, e) {
                    t = {
                        event_type: _,
                        user_action_event: {
                            user_action_event_key: t.name
                        }
                    };
                    return !e.eventValue && 0 !== e.eventValue || (t.user_action_event.user_action_event_value = e.eventValue),
                    e.eventTarget && (t.user_action_event.user_action_event_target = e.eventTarget),
                    e.eventModule && (t.user_action_event.user_action_event_module = e.eventModule),
                    t
                },
                _createNetworkMessage: function(t, e) {
                    var t = {
                        event_type: g,
                        network_event: {
                            network_service: t.name
                        }
                    }
                      , i = parseInt(e.responseCode);
                    return e.responseCode && !isNaN(i) && (t.network_event.http_response_code = i),
                    t
                },
                _initSession: function() {
                    this._sessionId = {
                        high: o.generateSessionIdValue(),
                        low: o.generateSessionIdValue()
                    },
                    this._sessionTimerStart = (new Date).getTime(),
                    this._sessionTimeToExpire = this._sessionTimerStart + 9e5,
                    this._sequenceNumber = 0
                },
                _createStateMessages: function(t, i) {
                    return t.map(function(t) {
                        var e = {
                            state_type: t
                        };
                        return s[t] ? e[t.toLowerCase()] = s[t](this, i) : e[t.toLowerCase()] = i.states[t](i),
                        e
                    }, this)
                },
                _createJSON: function() {
                    var t = JSON.stringify({
                        analytics_message_type: "SHORT_SESSION_USAGE",
                        analytics_event: this._queuedMessages
                    });
                    return this._queuedMessages = [],
                    t
                },
                _configurationBecameAvailable: function() {
                    n.analytics && (this._analyticsUrl = n.analytics.analyticsUrl,
                    this._withCredentials = n.withCredentials),
                    n.teamId && (this._teamId = n.teamId)
                },
                _scheduleLoader: function() {
                    this._loader || (this._loader = new a(this._analyticsUrl,this,{
                        method: "POST",
                        priority: r.Low,
                        retry: !0,
                        withCredentials: this._withCredentials
                    }),
                    this._loader.schedule())
                },
                _queueAsBackgroundTask: function() {
                    h.scheduleInBackground(this._scheduleLoader.bind(this), h.Priority.Low)
                },
                _sendPendingData: function() {
                    var t;
                    0 !== this._queuedMessages.length && ("function" == typeof navigator.sendBeacon ? navigator.sendBeacon(this._analyticsUrl, this._createJSON()) : ((t = new XMLHttpRequest).open("POST", this._analyticsUrl, !1),
                    t.send(this._createJSON())))
                }
            },
            t.exports = new f
        }
        ,
        3670: (t,e,i)=>{
            var n = i(4891);
            t.exports = function(t) {
                var e = {
                    host: location.host,
                    mkjs_version: n.version
                };
                return t._isInternalClient && window.placecard && window.placecard.version && (e.placecard_version = window.placecard.version),
                t._teamId && (e.team_id = t._teamId),
                t._isInternalClient || t._isAppHostingSite || (e.host = t.reduceHost(location.host)),
                e
            }
        }
        ,
        3081: t=>{
            t.exports = function(t, e) {
                var i = {
                    browser_language: navigator.language,
                    prefers_color_scheme: window.matchMedia("(prefers-color-scheme: dark)").matches ? "DARK" : "LIGHT"
                };
                return location.host.match(/duckduckgo.com$/) || location.host.match(/apple-mapkit.com$/) || (i.browser_name = e.uaParserInfo.browserInfo.name,
                i.browser_version = e.uaParserInfo.browserInfo.version),
                i.browser_origin = location.protocol + "//" + location.host,
                t._isInternalClient ? i.browser_referer = document.referrer : t._isAppHostingSite || (i.browser_origin = t.reduceHost(location.host)),
                e.browserDefaultFontSize && (i.browser_default_font_size = e.browserDefaultFontSize),
                i
            }
        }
        ,
        946: t=>{
            t.exports = function(t) {
                if (t._isInternalClient)
                    return {
                        width: window.innerWidth,
                        height: window.innerHeight
                    }
            }
        }
        ,
        8967: t=>{
            t.exports = function(t, e) {
                return {
                    device_platform: e.uaParserInfo.deviceInfo.platform,
                    device_os_version: e.uaParserInfo.deviceInfo.os
                }
            }
        }
        ,
        5884: (t,e,i)=>{
            t.exports = {
                SCREEN_SIZE: i(1620),
                DEVICE_IDENTIFIER: i(8967),
                BROWSER_INFO: i(3081),
                APPLICATION_IDENTIFIER: i(3670),
                BROWSER_WINDOW_SIZE: i(946),
                URL: i(952),
                MAP_VIEW: i(1020),
                USER_SESSION: i(1411),
                TILES: i(240)
            }
        }
        ,
        1020: t=>{
            t.exports = function(t, e) {
                var i = e.map.region.toBoundingRegion()
                  , n = e.map.ensureRenderingFrame().size;
                return {
                    display_map_region: {
                        eastLng: i.eastLongitude,
                        northLat: i.northLatitude,
                        southLat: i.southLatitude,
                        westLng: i.westLongitude
                    },
                    zoom_level: e.map.zoomLevel,
                    map_type: "MAP_TYPE_" + e.map.mapType.toUpperCase(),
                    size: {
                        width: n.width,
                        height: n.height
                    },
                    color_scheme: e.map.colorScheme.toUpperCase()
                }
            }
        }
        ,
        1620: t=>{
            t.exports = function(t) {
                var e = {
                    device_pixel_ratio: window.devicePixelRatio
                };
                return t._isInternalClient && (e.width = screen.width,
                e.height = screen.height),
                e
            }
        }
        ,
        240: t=>{
            t.exports = function(t, e) {
                return {
                    rendering: e.map._mapNodeController && e.map._mapNodeController.renderingMode
                }
            }
        }
        ,
        952: t=>{
            t.exports = function(t) {
                var e = {};
                return t._isInternalClient && (e.query_string = location.search,
                e.path = location.pathname),
                e
            }
        }
        ,
        1411: t=>{
            t.exports = function(t) {
                var e = ((new Date).getTime() - t._sessionTimerStart) / 1e3;
                return {
                    session_id: t._sessionId,
                    sequence_number: t._sequenceNumber,
                    relative_timestamp: e
                }
            }
        }
        ,
        87: t=>{
            t.exports = {
                parseUserAgent: function(t) {
                    return {
                        browserInfo: function(t) {
                            var e, i;
                            t = t.toLowerCase();
                            try {
                                return i = !t.includes("safari") || t.includes("chrome") || t.includes("crios") || t.includes("gsa") || t.includes("fxios") ? !t.includes("chrome") && !t.includes("crios") || t.includes("chromium") || t.includes("edge") || t.includes("samsungbrowser") ? !t.includes("firefox") && !t.includes("fxios") || t.includes("seamonkey") ? t.includes("msie") || t.includes("trident") && t.includes("rv") ? (e = "Internet Explorer",
                                (t.includes("msie") ? /msie\s(\d*\.?\d*)/gi : /rv:(\d*\.?\d*)/gi).exec(t)[1]) : t.includes("edge") ? (e = "Edge",
                                /edge\/(\d*\.?\d*)/gi.exec(t)[1]) : t.includes("gsa") ? (e = "Google Search App",
                                /gsa\/(.*?)\s[^._\d]/i.exec(t)[1]) : e = "other" : (e = "Firefox",
                                (t.includes("firefox") ? /firefox\/(\d*\.?\d*)/gi : /fxios\/(\d*\.?\d*)/gi).exec(t)[1]) : (e = "Chrome",
                                (t.includes("chrome") ? /chrome\/(.*?)\s/gi : /crios\/(.*?)\s/gi).exec(t)[1]) : (e = "Safari",
                                /version\/(\d+\.?\d*)/gi.exec(t)[1]),
                                {
                                    name: e,
                                    version: i
                                }
                            } catch (t) {
                                return {
                                    name: "other",
                                    version: "other"
                                }
                            }
                        }(t),
                        deviceInfo: function(t) {
                            var e, i;
                            t = t.toLowerCase();
                            try {
                                return i = t.includes("ipad") ? (e = "iPad",
                                "iOS " + /os\s+(.*?)[^_.\d]/i.exec(t)[1]) : t.includes("iphone") && !t.includes("ipad") ? (e = "iPhone",
                                "iOS " + /os\s+(.*?)[^_.\d]+/i.exec(t)[1]) : t.includes("macintosh") ? (e = "Macintosh",
                                "Mac OS X " + /mac os x (.*?)[^_.\d]/.exec(t)[1]) : t.includes("windows") ? (e = "Windows",
                                "Windows NT " + /windows nt (.*?)[^._\d]/.exec(t)[1]) : t.includes("android") ? (e = "Android",
                                "Android " + /android (.*?)[^._\d]/.exec(t)[1]) : t.includes("linux") && !t.includes("android") ? e = "Linux" : t.includes("cros") ? e = "Chrome OS" : e = "other",
                                {
                                    platform: e,
                                    os: i
                                }
                            } catch (t) {
                                return {
                                    platform: "other",
                                    os: "other"
                                }
                            }
                        }(t)
                    }
                }
            }
        }
        ,
        260: (t,e,i)=>{
            function n() {
                var t = r.length;
                if (null === h && 0 < t) {
                    for (var e = 0; e < t; ++e)
                        a.scheduleASAP(r[e]);
                    a.scheduleOnNextFrame(n)
                }
            }
            function o() {
                h = Date.now()
            }
            function s() {
                null !== h && (l += Date.now() - h,
                h = null,
                a.scheduleASAP(n))
            }
            var a = i(5097)
              , r = []
              , l = Date.now()
              , h = null;
            t.exports = {
                setIsAnimated: function(t, e) {
                    var i = r.indexOf(t);
                    if (e && i < 0 && (r.push(t),
                    1 === r.length)) {
                        a.scheduleASAP(n);
                        try {
                            window.top.addEventListener("blur", o),
                            window.top.addEventListener("focus", s)
                        } catch (t) {}
                    }
                    if (!e && -1 < i && (r.splice(i, 1),
                    0 === r.length))
                        try {
                            window.top.removeEventListener("blur", o),
                            window.top.removeEventListener("focus", s)
                        } catch (t) {}
                },
                getIsAnimated: function(t) {
                    return -1 < r.indexOf(t)
                },
                isRunning: function() {
                    return null === h
                },
                getClock: function() {
                    return Date.now() - l
                }
            }
        }
        ,
        4805: t=>{
            t.exports = ':host(.mk-annotation-container.mk-dragging) ::selection,div.mk-annotations ::selection{background:0 0}.mk-invisible{opacity:0;pointer-events:none}.mk-hidden{display:none}div.mk-annotations,div.mk-annotations>div,div.mk-callouts,div.mk-style-helper{position:absolute;top:0;left:0}.mk-selected{z-index:1}.mk-lifted{z-index:2}.mk-callout{position:absolute;top:0;left:0;pointer-events:auto;-webkit-user-select:auto;-moz-user-select:text;-ms-user-select:text}:host(.mk-dark-mode) .mk-callout{color:#fff}.mk-callout>*{position:absolute;top:0;left:0}svg.mk-bubble{display:block;width:100%;height:100%}div.mk-callout-accessory{position:absolute;top:50%;transform:translateY(-50%);overflow:hidden}div.mk-callout-accessory-content{white-space:nowrap;position:relative;text-align:center;font-size:12px}div.mk-callout-accessory:first-child{left:0}div.mk-callout-accessory:last-child{right:0}div.mk-callout-accessory:first-child .mk-callout-accessory-content{padding-right:8px}div.mk-callout-accessory:last-child .mk-callout-accessory-content{padding-left:8px}div.mk-standard{font-family:"-apple-system",BlinkMacSystemFont,"Helvetica Neue",Helvetica,Arial,sans-serif;box-sizing:border-box;position:relative}div.mk-custom-content,div.mk-standard{transform:translateY(-50%)}div.mk-standard .mk-callout-content>div{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}div.mk-standard .mk-callout-content{padding:0 4px}.mk-callout-content.mk-rtl{direction:rtl}.mk-callout-content.mk-rtl *{text-align:right}div.mk-callout-accessory:first-child+.mk-callout-content{padding-left:8px}div.mk-standard .mk-callout-content:nth-last-child(2){padding-right:8px}div.mk-standard .mk-title{font-size:17px;font-weight:500;color:#000;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;letter-spacing:.025em}:host(.mk-dark-mode) div.mk-standard .mk-title{color:#fff}div.mk-standard .mk-subtitle{font-size:13px;color:rgba(0,0,0,.7);letter-spacing:.025em}:host(.mk-dark-mode) div.mk-standard .mk-subtitle{color:rgba(255,255,255,.7)}svg.mk-bubble path{fill:#fff;stroke:rgba(0,0,0,.2)}:host(.mk-dark-mode) svg.mk-bubble path{fill:#3e3e3e;stroke:rgba(0,0,0,.5)}'
        }
        ,
        1358: (t,e,i)=>{
            var n = i(8756)
              , o = i(5097);
            function s(t) {
                this._annotation = t
            }
            s.prototype = {
                liftDurationMs: 200,
                liftOpacity: .5,
                animateLift: function() {
                    var t = Math.min((Date.now() - this._liftAnimationStartDate) / this.liftDurationMs, 1);
                    this._annotation.translate(this.translation.x, this.translation.y - this.liftAmount * t),
                    this._annotation.opacity = 1 - (1 - this.liftOpacity) * t,
                    t < 1 ? (o.scheduleOnNextFrame(this),
                    this._liftAnimationProgress = t) : (delete this._liftAnimationStartDate,
                    delete this._liftAnimationProgress)
                },
                animateDropAfterLift: function() {
                    var t = Math.max(this._dropAnimationStartP - Math.min((Date.now() - this._dropAfterLiftAnimationStartDate) / this.liftDurationMs, 1), 0);
                    this._dropAnimationRevert && this._annotation.translate(0, -this.liftAmount * t),
                    this._annotation.opacity = 1 - (1 - this.liftOpacity) * t,
                    0 < t ? o.scheduleOnNextFrame(this) : this._annotation.droppedAfterLift()
                },
                dropAnnotationAfterDraggingAndRevertPosition: function(t) {
                    this._liftAnimationStartDate ? (this._dropAnimationStartP = this._liftAnimationProgress,
                    delete this._liftAnimationStartDate,
                    delete this._liftAnimationProgress) : this._dropAnimationStartP = 1,
                    t ? this._annotation.resetNodeTransform() : this._annotation.draggingDidEnd(),
                    this._dropAfterLiftAnimationStartDate = Date.now(),
                    this._dropAnimationRevert = t,
                    o.scheduleOnNextFrame(this)
                },
                lift: function(t) {
                    this.liftAmount = t,
                    this.translation = new n,
                    0 < t ? (this._liftAnimationStartDate = Date.now(),
                    this._liftAnimationProgress = 0,
                    o.scheduleOnNextFrame(this)) : this._annotation.opacity = this.liftOpacity
                },
                getTranslation: function() {
                    return new n(this.translation.x,this.translation.y - this.liftAmount)
                },
                setTranslation: function(t) {
                    this.translation = t,
                    this._liftAnimationStartDate || this._annotation.translate(this.translation.x + this._annotation.dragOffset.x, this.translation.y - this.liftAmount + this._annotation.dragOffset.y)
                },
                performScheduledUpdate: function() {
                    this._liftAnimationStartDate ? this.animateLift() : this._dropAfterLiftAnimationStartDate && this.animateDropAfterLift()
                }
            },
            t.exports = s
        }
        ,
        41: (t,e,i)=>{
            var s = i(8756)
              , a = i(5097);
            function n(t) {
                this._map = t,
                this.panning = !1
            }
            n.prototype = {
                constructor: n,
                update: function(t, e) {
                    var i, n, o;
                    this._map.isScrollEnabled && (i = (o = (t = t._impl.translatedPosition()).x) + e.size.width,
                    e = (t = t.y) + e.size.height,
                    n = this._map.ensureVisibleFrame(),
                    this._direction = new s,
                    o <= n.minX() ? this._direction.x = 1 : i >= n.maxX() && (this._direction.x = -1),
                    t <= n.minY() + 5 ? this._direction.y = 1 : e >= n.maxY() - 5 && (this._direction.y = -1),
                    o = 0 !== this._direction.x || 0 !== this._direction.y,
                    !this.panning && o ? (this.panning = !0,
                    this._startTime = Date.now(),
                    this._initialSpeed = Math.floor(1 / 104.1 * (n.size.width + n.size.height) / 2),
                    a.scheduleOnNextFrame(this)) : this.panning && !o && this.stop())
                },
                stop: function() {
                    this.panning && (this.panning = !1,
                    delete this._direction,
                    delete this._startTime,
                    delete this._initialSpeed)
                },
                performScheduledUpdate: function() {
                    var t, e;
                    this.panning && (t = this._initialSpeed,
                    4e3 < (e = Date.now() - this._startTime) ? t *= 3 : 1e3 < e && (t *= 1.5),
                    this._map.translateCameraAnimated(new s(this._direction.x * t,this._direction.y * t), !1),
                    this._map.panningDuringAnnotationDrag(),
                    a.scheduleOnNextFrame(this))
                },
                mapWasDestroyed: function() {
                    delete this._map
                }
            },
            t.exports = n
        }
        ,
        6778: (t,e,i)=>{
            var s = i(5479)
              , n = s.Coordinate
              , a = i(3045)
              , r = i(5348)
              , l = i(8760)
              , h = i(8756)
              , c = i(2221)
              , d = i(462)
              , u = i(351)
              , p = i(7016)
              , m = i(6814)
              , _ = ["title", "subtitle", "data", "accessibilityLabel", "anchorOffset", "calloutOffset", "size", "callout", "visible", "enabled", "selected", "calloutEnabled", "animates", "appearanceAnimation", "collisionMode", "padding"]
              , g = ["draggable", "displayPriority", "clusteringIdentifier"]
              , f = {
                DragStart: "drag-start",
                Dragging: "dragging",
                DragEnd: "drag-end"
            }
              , v = {
                Low: 250,
                High: 750,
                Required: 1e3
            }
              , y = {
                Rectangle: "rectangle",
                Circle: "circle",
                None: "none"
            };
            function o(o) {
                function e(t, e, i, n) {
                    o.call(this, t),
                    c.checkOptions(n),
                    this._setCoordinate(e),
                    this._unsized = !0,
                    this._public = t,
                    this.occluded = !1,
                    this._setNode(e, i, n),
                    n && (_.forEach(function(t) {
                        t in n && (this[t] = n[t])
                    }, this),
                    g.forEach(function(t) {
                        t in n && this["_set" + t.replace(/^\w/, function(t) {
                            return t.toUpperCase()
                        })](n[t])
                    }, this),
                    Object.keys(n).forEach(function(t) {
                        "map" === t || "element" === t ? console.warn("[MapKit] `" + t + "` is read-only and can't be set on an Annotation.") : this.isAKnownOption(t) || console.warn("[MapKit] Unknown option for annotation: " + t + " (use the `data` property instead)")
                    }, this)),
                    u.addEventListener(u.Events.LocaleChanged, this),
                    this.updateLocalizedText()
                }
                return e.Events = f,
                e.DisplayPriority = v,
                e.CollisionMode = y,
                e.prototype = c.inheritPrototype(o, e, {
                    _calloutOffset: new window.DOMPoint(0,1),
                    _enabled: !0,
                    _selected: !1,
                    _calloutEnabled: !0,
                    _draggable: !1,
                    _title: "",
                    _subtitle: "",
                    _accessibilityLabel: null,
                    _displayPriority: v.Required,
                    _collisionMode: y.Rectangle,
                    _clusteringIdentifier: null,
                    _sceneGraphNode: null,
                    _padding: new p,
                    _draggingLift: 40,
                    shouldHideLabels: !1,
                    alwaysSelected: !1,
                    _callout: null,
                    get map() {
                        return this.delegate && this.delegate.mapForAnnotation(this._public)
                    },
                    set map(t) {
                        console.warn("[MapKit] The `map` property is read-only.")
                    },
                    get coordinate() {
                        return this._coordinate
                    },
                    set coordinate(t) {
                        this.memberAnnotations || this._setCoordinate(t)
                    },
                    get title() {
                        return this._title
                    },
                    set title(t) {
                        null != t ? (c.checkType(t, "string", "[MapKit] Expected a string value for Annotation.title, but got `" + t + "` instead"),
                        this._title = t) : delete this._title,
                        this.updateLocalizedText(),
                        this._updatedProperty("title")
                    },
                    get subtitle() {
                        return this._subtitle
                    },
                    set subtitle(t) {
                        null != t ? (c.checkType(t, "string", "[MapKit] Expected a string value for Annotation.subtitle, but got `" + t + "` instead"),
                        this._subtitle = t) : delete this._subtitle,
                        this.updateLocalizedText(),
                        this._updatedProperty("subtitle")
                    },
                    get accessibilityLabel() {
                        return this._accessibilityLabel
                    },
                    set accessibilityLabel(t) {
                        null != t ? (c.checkType(t, "string", "[MapKit] Expected a string value for Annotation.accessibilityLabel, but got `" + t + "` instead"),
                        this._accessibilityLabel = t) : delete this._accessibilityLabel,
                        this.updateLocalizedText()
                    },
                    get data() {
                        return Object.prototype.hasOwnProperty.call(this, "_data") || (this._data = {}),
                        this._data
                    },
                    set data(t) {
                        this._data = t
                    },
                    get enabled() {
                        return this._enabled
                    },
                    set enabled(t) {
                        this._enabled = !!t
                    },
                    get calloutEnabled() {
                        return this._calloutEnabled
                    },
                    set calloutEnabled(t) {
                        this._calloutEnabled = !!t
                    },
                    get selected() {
                        return this._selected
                    },
                    set selected(t) {
                        t = !!t;
                        t !== this._selected && (this.delegate && !this.delegate.selectionMayChange ? console.warn("[MapKit] Selection may not change in select/deselect event handler.") : (this._selected = t,
                        this._updatedProperty("selected")))
                    },
                    get animates() {
                        return this._animates
                    },
                    set animates(t) {
                        this._animates = !!t
                    },
                    get calloutOffset() {
                        return this._calloutOffset
                    },
                    set calloutOffset(t) {
                        c.checkInstance(t, window.DOMPoint, "[MapKit] Annotation.calloutOffset expected a DOMPoint, but got `" + t + "` instead."),
                        this._calloutOffset = new window.DOMPoint(t.x,t.y),
                        this._updatedProperty("calloutOffset")
                    },
                    get callout() {
                        return this._callout
                    },
                    set callout(t) {
                        c.checkType(t, "object", "[MapKit] Annotation.callout expected an object, but got `" + t + "` instead."),
                        this._callout = t
                    },
                    get draggable() {
                        return this._draggable
                    },
                    set draggable(t) {
                        this.memberAnnotations || this._setDraggable(t)
                    },
                    get draggingLift() {
                        return this._draggingLift
                    },
                    set draggingLift(t) {
                        if (c.checkType(t, "number", "[MapKit] Annotation.draggingLift expected a number, but got `" + t + "` instead."),
                        t < 0)
                            throw new Error("[MapKit] Annotation.draggingLift must be zero or more.");
                        this._draggingLift = t
                    },
                    get size() {
                        if (this._updateSize(),
                        !this._unsized)
                            return this._node.size.copy()
                    },
                    set size(t) {
                        var e = "[MapKit] Annotation size expects a size object with width and height properties";
                        c.checkType(t, "object", e).checkType(t.width, "number", e).checkType(t.height, "number", e),
                        this.setSize(new a(t.width,t.height)),
                        this._userSetSize = !0,
                        this.updateSize()
                    },
                    get opacity() {
                        return (this.sceneGraphNode || this.node).opacity
                    },
                    set opacity(t) {
                        this.sceneGraphNode ? this.sceneGraphNode.opacity = t : this.node.opacity = t
                    },
                    get displayPriority() {
                        return this._displayPriority
                    },
                    set displayPriority(t) {
                        this.memberAnnotations || this._setDisplayPriority(t)
                    },
                    isRequired: function() {
                        return this.selected || this.displayPriority === v.Required
                    },
                    get collisionMode() {
                        return this._collisionMode
                    },
                    set collisionMode(t) {
                        if (!c.checkValueIsInEnum(t, y))
                            throw new Error("[MapKit] Unknown value for `collisionMode`. Choose from Annotation.CollisionMode.");
                        t !== this._collisionMode && (this._collisionMode = t,
                        this._updatedProperty("collisionMode"))
                    },
                    get clusteringIdentifier() {
                        return this._clusteringIdentifier
                    },
                    set clusteringIdentifier(t) {
                        this.memberAnnotations || this._setClusteringIdentifier(t)
                    },
                    get padding() {
                        return this._padding.copy()
                    },
                    set padding(t) {
                        c.checkInstance(t, p, "[MapKit] The `padding` parameter passed to `Annotation.padding` is not a Padding."),
                        this._padding.equals(t) || (this._padding = t.copy(),
                        this._updatedProperty("padding"))
                    },
                    get needsLayout() {
                        return this._sceneGraphNode && this._sceneGraphNode.needsLayout
                    },
                    get elementInAnnotationDOM() {
                        return this._node.element.firstChild
                    },
                    removedFromMap: function() {
                        this._removedFromMap = !0,
                        u.removeEventListener(u.Events.LocaleChanged, this),
                        this._occludedAnimation && this._occludedAnimation.end(),
                        this._clusteringAnimation && this._clusteringAnimation.end()
                    },
                    addedToMap: function() {
                        this._removedFromMap && (this._removedFromMap = !1,
                        u.addEventListener(u.Events.LocaleChanged, this),
                        this.updateLocalizedText())
                    },
                    delegate: null,
                    setDelegate: function(t) {
                        this.delegate = t
                    },
                    updateLayout: function() {},
                    doesAnimate: function() {
                        return this._animates && !!this._appearanceAnimationName
                    },
                    willMoveToMap: function() {
                        this._isMoving = this.doesAnimate(),
                        this._updateSize()
                    },
                    didMoveToMap: function() {
                        this._isMoving && this._appearanceAnimationName && this._visible && (this.element.style.animation = this.element.style.webkitAnimation = this._appearanceAnimation,
                        this.element.style.animationName || this.element.style.webkitAnimationName) && (this._animating = !0,
                        this.element.addEventListener("animationend", this),
                        this.element.addEventListener("webkitAnimationEnd", this)),
                        delete this._isMoving
                    },
                    isStable: function() {
                        return !(this.isWaiting || this._isMoving || this._isAnimating || this._isLifted)
                    },
                    canShowCallout: function() {
                        return this._calloutEnabled && this.isStable()
                    },
                    calloutWillAppear: function() {},
                    calloutWillDisappear: function() {},
                    canBePicked: function() {
                        return this._shown && this._visible && !this._isMoving && !this._isAnimating && !this._isLifted && !this.occluded
                    },
                    draggingDidStart: function() {
                        this._public.dispatchEvent(new m.Event(f.DragStart))
                    },
                    isDraggable: function() {
                        return this.draggable && !this._isLifted
                    },
                    isLifted: function() {
                        return this._isLifted
                    },
                    dispatchDraggingEvent: function() {
                        var t = new m.Event(e.Events.Dragging);
                        return t.coordinate = this._coordinateDuringDrag(),
                        this._public.dispatchEvent(t),
                        t
                    },
                    positionForCallout: function() {
                        var t = this._calloutAnchorPoint
                          , e = (t || (e = this._userSetSize ? this._node.size : this.delegate.sizeForElement(this.elementInAnnotationDOM),
                        t = new window.DOMPoint(-e.width / 2,0)),
                        this.nodePosition());
                        return new h(e.x - t.x - this._calloutOffset.x,e.y - t.y - this._calloutOffset.y)
                    },
                    setDraggingTranslationForMapFrameSize: function(t, e) {
                        this._dragController.setTranslation(this.clampDraggingTranslationForMapFrameSize(t, e))
                    },
                    dropAfterDraggingAndRevertPosition: function(t) {
                        this._dragController.dropAnnotationAfterDraggingAndRevertPosition(t)
                    },
                    distanceToPoint: function(t) {
                        var e = this._node.position.x
                          , i = e + this._node.size.width
                          , e = e - t.x
                          , i = i - t.x
                          , e = e <= 0 && 0 <= i ? 0 : Math.min(Math.abs(e), Math.abs(i))
                          , i = this._node.position.y
                          , n = i + this._node.size.height
                          , i = i - t.y
                          , n = n - t.y
                          , t = i <= 0 && 0 <= n ? 0 : Math.min(Math.abs(i), Math.abs(n));
                        return e * e + t * t
                    },
                    lift: function() {
                        this._isLifted = !0,
                        this._dragController.lift(this._draggingLift),
                        this._updatedProperty("")
                    },
                    translate: function(t, e) {
                        this.sceneGraphNode ? this.sceneGraphNode.transform = (new r).translate(t, e) : this._node.transform = (new l).translate(t, e)
                    },
                    translatedPosition: function() {
                        var t = this._dragController.getTranslation();
                        return new h(this._position.x - this._anchorPoint.x - this._anchorOffset.x + t.x,this._position.y - this._anchorPoint.y - this._anchorOffset.y + t.y)
                    },
                    updatedPosition: function() {
                        return this.coordinate ? (this.x = s.convertLongitudeToX(s.wrapLongitude(this.coordinate.longitude)),
                        this.y = s.convertLatitudeToY(this.coordinate.latitude),
                        !0) : (this.setShown(!1),
                        this.sceneGraphNode && this.sceneGraphNode.remove(),
                        !1)
                    },
                    get sceneGraphNode() {
                        return this._sceneGraphNode
                    },
                    mayBeDrawn: function() {
                        return !!this.sceneGraphNode && this._shown && this.visible && !this.isWaiting
                    },
                    isDrawn: function() {
                        return (!this.occluded || this._occludedAnimation) && this.mayBeDrawn()
                    },
                    animateOcclusion: function() {
                        var t = this.occluded ? 0 : 1
                          , t = (this._sceneGraphNode && (this._occludedAnimation && this._occludedAnimation.end(),
                        this._occludedAnimation = new d.NodeAnimator.Opacity({
                            node: this._sceneGraphNode,
                            from: 1 - t,
                            to: t,
                            duration: 200,
                            done: function() {
                                delete this._occludedAnimation
                            }
                            .bind(this)
                        }).begin()),
                        this.occluded && this.cluster && this.cluster._impl && !this.cluster._impl.occluded)
                          , e = !this.occluded && this.previousCluster && !this.previousCluster._impl.wasOccluded;
                        (t || e) && this._animateClustering()
                    },
                    positionWasUpdated: function(t) {
                        this._sceneGraphNode && (this._sceneGraphNode.needsDisplay = !0)
                    },
                    dragOffset: h.Zero,
                    handleEvent: function(t) {
                        switch (t.type) {
                        case u.Events.LocaleChanged:
                            this.updateLocalizedText();
                            break;
                        case "animationend":
                        case "webkitAnimationEnd":
                            if (t.animationName !== this._appearanceAnimationName)
                                return;
                            this.element.style.animation = this.element.style.webkitAnimation = "",
                            this.element.removeEventListener("animationend", this),
                            this.element.removeEventListener("webkitAnimationEnd", this),
                            this.finishedAnimating()
                        }
                    },
                    updateLocalizedText: function() {
                        this._node && this._node.element && this._node.element.setAttribute("aria-label", this.altText())
                    },
                    altText: function() {
                        return this._accessibilityLabel || (this.title && this.subtitle ? u.get("Annotation.Generic.AccessibilityLabel", {
                            title: this.title,
                            subtitle: this.subtitle
                        }) : this.title || this.subtitle || "")
                    },
                    updateSize: function() {
                        delete this._unsized,
                        this._selected && this.delegate && this.delegate.selectedAnnotationDidMoveToMap(this._public)
                    },
                    clampDraggingTranslationForMapFrameSize: function(t, e) {
                        var i = this._anchorPoint.x + this._anchorOffset.x - this._position.x
                          , n = e.width - this._node.size.width + i
                          , o = this._anchorPoint.y + this._anchorOffset.y + this._dragController.liftAmount - this._position.y
                          , e = e.height - this._node.size.height + o;
                        return new h(c.clamp(t.x, i, n),c.clamp(t.y, o, e))
                    },
                    droppedAfterLift: function() {
                        delete this._isLifted,
                        this.selected && this.delegate.selectedAnnotationDidMoveToMap(this._public),
                        this._updatedProperty("")
                    },
                    draggingDidEnd: function() {
                        this.coordinate = this._coordinateDuringDrag(),
                        this.resetNodeTransform(),
                        this._public.dispatchEvent(new m.Event(e.Events.DragEnd))
                    },
                    resetNodeTransform: function() {
                        this.node.transform = new l
                    },
                    finishedAnimating: function() {
                        delete this._isAnimating,
                        this._selected && this.delegate && this.delegate.selectedAnnotationDidMoveToMap(this._public),
                        this._visible || this._updateVisibility(),
                        this.delegate && this.delegate.annotationFinishedAnimating(this._public)
                    },
                    isAKnownOption: function(t) {
                        return 0 <= _.indexOf(t) || 0 <= g.indexOf(t)
                    },
                    _animateClustering: function() {
                        var t, e;
                        this._sceneGraphNode && (t = {
                            annotation: this,
                            node: this._sceneGraphNode,
                            duration: 200,
                            done: function() {
                                delete this._clusteringAnimation
                            }
                            .bind(this)
                        },
                        this.cluster ? (t.from = this.coordinate.toMapPoint(),
                        t.to = this.cluster.coordinate.toMapPoint()) : (t.from = this.previousCluster.coordinate.toMapPoint(),
                        t.to = this.coordinate.toMapPoint()),
                        (e = t.to.x - t.from.x) < -.5 ? t.to.x += 1 : .5 < e && (t.from.x += 1),
                        this._clusteringAnimation && this._clusteringAnimation.end(),
                        this._clusteringAnimation = new w(t).begin())
                    },
                    _setCoordinate: function(t) {
                        c.checkInstance(t, n, "[MapKit] Annotation.coordinate expected a Coordinate value."),
                        delete this._translation,
                        this._coordinate = t.copy(),
                        this._updatedProperty("coordinate")
                    },
                    _setDraggable: function(t) {
                        t = !!t;
                        t !== this._draggable && (this._draggable = t,
                        this._updatedProperty("draggable"))
                    },
                    _setDisplayPriority: function(t) {
                        var e = "[MapKit] Annotation displayPriority expects a number between 0 and " + v.Required
                          , i = (c.checkType(t, "number", e),
                        c.clamp(t, 0, v.Required));
                        if (i !== t)
                            console.warn(e + ", value was normalized");
                        else if (i === this._displayPriority)
                            return;
                        this._displayPriority = i,
                        this._updatedProperty("displayPriority")
                    },
                    _setClusteringIdentifier: function(t) {
                        null !== t && c.checkType(t, "string", "[MapKit] Annotation clusteringIdentifier expects a string"),
                        this._clusteringIdentifier !== t && (this._clusteringIdentifier = t,
                        this._updatedProperty("clusteringIdentifier"))
                    },
                    _coordinateDuringDrag: function() {
                        var t = this.sceneGraphNode ? this._dragController.translation.x : 0
                          , e = this.sceneGraphNode ? this._dragController.translation.y - this._dragController.liftAmount : 0
                          , t = this.node.convertPointToPage(new h(t + this.dragOffset.x + this._anchorPoint.x + this.anchorOffset.x,e + this.dragOffset.y + this._anchorPoint.y + this.anchorOffset.y));
                        return this.delegate._map.convertPointOnPageToCoordinate(new window.DOMPoint(t.x,t.y))
                    },
                    _updateSize: function() {
                        var t;
                        this._unsized && !this._userSetSize && this.delegate && (t = this.delegate.sizeForElement(this.elementInAnnotationDOM)) && (delete this._unsized,
                        this.setSize(t))
                    },
                    _updatedProperty: function(t) {
                        this.delegate && this.delegate.annotationPropertyDidChange(this._public, t)
                    }
                }),
                e
            }
            function w(t) {
                d.NodeAnimator.Basic.call(this, t),
                this.annotation = t.annotation
            }
            w.prototype = c.inheritPrototype(d.NodeAnimator.Basic, w, {
                update: function(t) {
                    var e = this.annotation
                      , i = e.delegate._map
                      , n = i.camera.toRenderingMapRect()
                      , n = s.wrapX((1 - t) * this.from.x + t * this.to.x, n.midX())
                      , t = (1 - t) * this.from.y + t * this.to.y
                      , i = i.adjustMapItemPoint(i.camera.transformMapPoint(new h(n,t)));
                    this.node.transform = (new r).translate(i.x - e._position.x, i.y - e._position.y)
                },
                stringInfo: function() {
                    return d.NodeAnimator.Basic.prototype.stringInfo.call(this, "translation*")
                }
            }),
            o.Events = f,
            o.DisplayPriority = v,
            o.CollisionMode = y,
            t.exports = o
        }
        ,
        2537: (t,e,i)=>{
            var n = i(1358)
              , o = i(342)
              , s = i(811)
              , a = i(6778)
              , r = i(2221)
              , l = i(4701)
              , h = i(7768)
              , i = a(o);
            i.prototype._animates = !0,
            i.prototype._setNode = function(t, e, i) {
                r.checkType(e, "function");
                e = s(e, window, [t, i]),
                r.checkElement(e, "[MapKit] Annotation element factory must return a DOM element, got `" + e + "` instead."),
                t = this._element = e;
                l.supportsShadowDOM && (i = "mk-slot-" + Math.random().toString(32).substr(2, 8),
                e.slot = i,
                (t = l.htmlElement("slot")).name = i),
                this._node = new h.Node(l.htmlElement("div", t)),
                this._node.wantsHardwareCompositing = this.renderedByDOMElement,
                this._dragController || (this._dragController = new n(this))
            }
            ,
            i.div = function() {
                return document.createElement("div")
            }
            ,
            t.exports = i
        }
        ,
        342: (t,e,i)=>{
            var n = i(2221)
              , o = i(8756);
            function s(t) {
                t && (this._public = t)
            }
            s.prototype = {
                _shown: !0,
                _visible: !0,
                _position: new o,
                _anchorPoint: new o,
                _anchorOffset: new window.DOMPoint,
                _appearanceAnimation: "",
                renderedByDOMElement: !0,
                isMapFeature: !1,
                delegate: null,
                get node() {
                    return this._node
                },
                get element() {
                    return this._element
                },
                set element(t) {
                    console.warn("[MapKit] The `element` property is read-only.")
                },
                get anchorOffset() {
                    return this._anchorOffset
                },
                set anchorOffset(t) {
                    n.checkInstance(t, window.DOMPoint, "[MapKit] Annotation.anchorOffset expected a DOMPoint, but got `" + t + "` instead."),
                    this._anchorOffset = new window.DOMPoint(t.x,t.y),
                    this.updatePosition()
                },
                get visible() {
                    return this._visible
                },
                set visible(t) {
                    this._visible !== (t = !!t) && (this._visible = t,
                    this._updateVisibility())
                },
                get appearanceAnimation() {
                    return this._appearanceAnimation
                },
                set appearanceAnimation(t) {
                    var e;
                    n.checkType(t, "string", "[MapKit] Annotation.appearanceAnimation expected a string, but got `" + t + "` instead."),
                    "" !== t ? ((e = document.createElement("div")).style.animation = e.style.webkitAnimation = t,
                    this._appearanceAnimationName = e.style.animationName || e.style.webkitAnimationName,
                    this._appearanceAnimationName ? this._appearanceAnimation = t : console.warn("[MapKit] Annotation.appearanceAnimation expects an animation style value with an animation name, but got `" + t + "` instead.")) : this._appearanceAnimation = this._appearanceAnimationName = ""
                },
                nodePosition: function() {
                    return this._nodePosition || this._node.position
                },
                calculateNodePosition: function() {
                    return new o(this._position.x - this._anchorPoint.x - this._anchorOffset.x,this._position.y - this._anchorPoint.y - this._anchorOffset.y)
                },
                updatePosition: function() {
                    var t = this.calculateNodePosition();
                    !this.renderedByDOMElement && this.map && this.map._impl.cameraIsMoving ? this._nodePosition = t : (delete this._nodePosition,
                    this._node.position = t),
                    this.positionWasUpdated(t)
                },
                setShown: function(t) {
                    this._shown !== (t = !!t) && (this._shown = t,
                    this._node.element && this._node.classList.toggle("mk-hidden", !t),
                    this.shownPropertyWasUpdated(t))
                },
                shownPropertyWasUpdated: function() {},
                positionWasUpdated: function(t) {},
                isShown: function() {
                    return this._shown
                },
                position: function() {
                    return this._position
                },
                setPosition: function(t) {
                    this._position = t,
                    this.updatePosition()
                },
                updateVisibility: function(t) {
                    this._node.classList.toggle("mk-invisible", t)
                },
                setSize: function(t) {
                    this._node.size = t,
                    this._anchorPoint = new o(t.width / 2,t.height),
                    this.updatePosition()
                },
                _updateVisibility: function() {
                    !this._visible && this._animating || (this.updateVisibility(!this._visible),
                    this.delegate && this.delegate.annotationPropertyDidChange(this._public || this, "visible"))
                }
            },
            t.exports = s
        }
        ,
        2593: (t,e,i)=>{
            var n = i(2221)
              , o = i(6814)
              , s = i(342);
            function a() {
                Object.defineProperty(this, "_impl", {
                    value: new s(this)
                })
            }
            a.prototype = n.inheritPrototype(o.EventTarget, a, {
                get element() {
                    return this._impl.element
                },
                set element(t) {
                    this._impl.element = t
                },
                get anchorOffset() {
                    return this._impl.anchorOffset
                },
                set anchorOffset(t) {
                    this._impl.anchorOffset = t
                },
                get animates() {
                    return this._impl.animates
                },
                set animates(t) {
                    this._impl.animates = t
                },
                get visible() {
                    return this._impl.visible
                },
                set visible(t) {
                    this._impl.visible = t
                },
                get appearanceAnimation() {
                    return this._impl.appearanceAnimation
                },
                set appearanceAnimation(t) {
                    this._impl.appearanceAnimation = t
                }
            }),
            t.exports = a
        }
        ,
        7415: (t,e,o)=>{
            var i = o(2593)
              , n = o(6778)
              , s = o(5598)
              , a = o(2221);
            function r(t, e, i) {
                var n;
                s(this, r) && (n = o(2537),
                Object.defineProperty(this, "_impl", {
                    value: new n(this,t,e,i)
                }))
            }
            r.EVENTS = n.EVENTS,
            r.DisplayPriority = n.DisplayPriority,
            r.CollisionMode = n.CollisionMode,
            r.prototype = a.inheritPrototype(i, r, {
                get map() {
                    return this._impl.map
                },
                set map(t) {
                    this._impl.map = t
                },
                get coordinate() {
                    return this._impl.coordinate
                },
                set coordinate(t) {
                    this._impl.coordinate = t
                },
                get title() {
                    return this._impl.title
                },
                set title(t) {
                    this._impl.title = t
                },
                get subtitle() {
                    return this._impl.subtitle
                },
                set subtitle(t) {
                    this._impl.subtitle = t
                },
                get accessibilityLabel() {
                    return this._impl.accessibilityLabel
                },
                set accessibilityLabel(t) {
                    this._impl.accessibilityLabel = t
                },
                get data() {
                    return this._impl.data
                },
                set data(t) {
                    this._impl.data = t
                },
                get enabled() {
                    return this._impl.enabled
                },
                set enabled(t) {
                    this._impl.enabled = t
                },
                get calloutEnabled() {
                    return this._impl.calloutEnabled
                },
                set calloutEnabled(t) {
                    this._impl.calloutEnabled = t
                },
                get selected() {
                    return this._impl.selected
                },
                set selected(t) {
                    this._impl.selected = t
                },
                get animates() {
                    return this._impl.animates
                },
                set animates(t) {
                    this._impl.animates = t
                },
                get calloutOffset() {
                    return this._impl.calloutOffset
                },
                set calloutOffset(t) {
                    this._impl.calloutOffset = t
                },
                get callout() {
                    return this._impl.callout
                },
                set callout(t) {
                    this._impl.callout = t
                },
                get draggable() {
                    return this._impl.draggable
                },
                set draggable(t) {
                    this._impl.draggable = t
                },
                get size() {
                    return this._impl.size
                },
                set size(t) {
                    this._impl.size = t
                },
                get displayPriority() {
                    return this._impl.displayPriority
                },
                set displayPriority(t) {
                    this._impl.displayPriority = t
                },
                get collisionMode() {
                    return this._impl.collisionMode
                },
                set collisionMode(t) {
                    this._impl.collisionMode = t
                },
                get clusteringIdentifier() {
                    return this._impl.clusteringIdentifier
                },
                set clusteringIdentifier(t) {
                    this._impl.clusteringIdentifier = t
                },
                get padding() {
                    return this._impl.padding
                },
                set padding(t) {
                    this._impl.padding = t
                }
            }),
            t.exports = r
        }
        ,
        8130: (t,e,i)=>{
            var n = i(462)
              , i = i(2221);
            function o(t) {
                n.GroupNode.call(this),
                this._element = t
            }
            o.prototype = i.inheritPrototype(n.GroupNode, o, {
                get element() {
                    return this._element
                },
                stringInfo: function() {
                    return "AnnotationsControllerNode"
                }
            }),
            t.exports = o
        }
        ,
        1194: (t,e,i)=>{
            var _, s, n = i(5479), a = i(41), r = i(4782), l = i(5249), c = i(9614), h = i(8130), o = i(7415), d = i(6778), u = i(6257), p = n.MapRect, g = i(4701), m = i(351), f = i(7664), v = i(4564), y = i(811), w = i(2221), C = i(8756), b = i(9842), k = (window.document && (_ = i(5822),
            s = i(7768)),
            i(5097)), n = i(2244), L = "mk-dragging", E = "mk-selected", S = "mk-lifted", M = null;
            function T(t) {
                var n, o, e;
                c.call(this, t),
                this._pendingAnnotations = [],
                this._mapFeatureAnnotationController = new r(this),
                this._clustersController = new l(this),
                m.activeLocale && (this._rtl = m.activeLocale.rtl),
                window.document ? (this._node = new s.Node(g.htmlElement("div", {
                    class: "mk-annotation-container"
                })),
                this._shadowDOMSlotController = new v(this._node),
                n = this._shadowDOMSlotController,
                e = g.htmlElement("div", {
                    class: "mk-annotations"
                }),
                g.supportsShadowDOM && (o = e.insertBefore,
                e.insertBefore = function(t, e) {
                    o.call(this, t, e);
                    var e = t.firstChild
                      , i = n.getAssignedElement(e);
                    return i && i.parentNode && 0 === e.assignedNodes().length && (e = i.nextSibling,
                    n.hostNode.element.removeChild(i),
                    n.hostNode.element.insertBefore(i, e)),
                    t
                }
                ),
                e = e,
                this._sceneGraphNode = new h(e),
                this._shadowRootNode = g.addShadowRootChild(this._node, i(4805)),
                this._annotationsNode = this._shadowRootNode.addChild(new s.Node(e)),
                this._oldCenterMode = !1,
                this._calloutsNode = this._shadowRootNode.addChild(new s.Node(g.htmlElement("div"))),
                this._calloutsNode.classList.add("mk-callouts"),
                this._styleHelper = new u(this),
                this._shadowRootNode.addChild(new s.Node(this._styleHelper.element)),
                this._annotationDraggingMapPanningController = new a(t)) : this._sceneGraphNode = new h
            }
            function x(t, e, i) {
                return new b(t.origin.x - e,t.origin.y - i,t.size.width,t.size.height)
            }
            T.Annotation = o,
            T.prototype = w.inheritPrototype(c, T, {
                itemConstructor: o,
                itemName: "annotation",
                capitalizedItemName: "Annotation",
                _rtl: !1,
                _selectionDistance: Math.pow(c.prototype._selectionDistance, 2),
                get sceneGraphNode() {
                    return this._sceneGraphNode
                },
                isItemExposed: function(t) {
                    return t !== this._userLocationAnnotation && !t.memberAnnotations
                },
                _userLocationAnnotation: null,
                get map() {
                    return this._map
                },
                get userLocationAnnotation() {
                    return this._userLocationAnnotation
                },
                get dragging() {
                    return !!this._draggedAnnotation
                },
                get rtl() {
                    return this._rtl
                },
                set rtl(t) {
                    this._rtl !== t && (this._rtl = t,
                    this._selectedItem) && this._callout && this._showCalloutForAnnotation(this._selectedItem, !0)
                },
                preAddedAnnotation: function(t) {
                    var e, i;
                    return !!t._impl.updatedPosition() && (e = !t.map,
                    (i = g.supportsShadowDOM && this._annotationsNode && t._impl.renderedByDOMElement && !t.element.parentNode) && this._shadowDOMSlotController.appendAssignedElement(t.element, !1),
                    e && t._impl.setDelegate(this),
                    e || i)
                },
                resetAnnotation: function(t) {
                    g.supportsShadowDOM && this._annotationsNode && t._impl.renderedByDOMElement && t.element.parentNode && this._shadowDOMSlotController.removeAssignedElement(t._impl.elementInAnnotationDOM, !1),
                    -1 === this._items.indexOf(t) && delete t._impl.delegate
                },
                addItems: function(t) {
                    var e, i, n, o, s, a, r, l, h;
                    return t = c.prototype.addItems.call(this, t),
                    this._shouldAnnotationBePending() || (t.sort(function(t, e) {
                        return e.coordinate.latitude - t.coordinate.latitude
                    }),
                    l = (e = this._map.camera.toMapRect()).size.width,
                    i = e.size.height,
                    n = e.origin.x - l,
                    o = n + 3 * l,
                    s = e.origin.y - i,
                    a = s + 3 * i,
                    r = 0,
                    t.forEach(function(t) {
                        t._impl.doesAnimate() && t.visible && t._impl.x + (t._impl.x < n ? 1 : 0) <= o && t._impl.y >= s && t._impl.y <= a && (t._impl.delayRank = r,
                        ++r)
                    }),
                    l = Math.min(50 * r, 3e3),
                    h = 0 === r ? 0 : l / r,
                    t.forEach(function(t) {
                        t._impl.delayMs = t._impl.delayRank * h,
                        delete t._impl.delayRank
                    }, this)),
                    t
                },
                addWaitingAnnotations: function(t) {
                    var e = "function" == typeof t;
                    this._waitingAnnotations ? (e && (this._completionCallback = t),
                    window.clearTimeout(this._tileLoadingTimeout),
                    delete this._tileLoadingTimeout,
                    this._waitingAnnotations.forEach(function(t) {
                        t.map && this._addAnnotationWaitingForTiles(t, !1, !e)
                    }, this),
                    this._updateSceneGraph(),
                    delete this._waitingAnnotations,
                    k.scheduleOnNextFrame(this._checkCompletion.bind(this))) : e && t()
                },
                annotationsInMapRect: function(t) {
                    w.checkInstance(t, p, "[MapKit] Map.annotationsInMapRect expects a MapRect as its argument, got `" + t + "` instead.");
                    var i = w.mod(t.origin.x, 1)
                      , n = i + t.size.width
                      , o = t.origin.y
                      , s = o + t.size.height;
                    return this._items.filter(function(t) {
                        var e;
                        return !!this.isItemExposed(t) && (e = t._impl.x + (t._impl.x < i ? 1 : 0),
                        t = t._impl.y,
                        i <= e) && e <= n && o <= t && t <= s
                    }, this)
                },
                removeItem: function(t) {
                    return t === this._userLocationAnnotation ? (console.warn("[MapKit] Map.removeAnnotation: the user location annotation cannot be removed. Set showsUserLocation to false instead."),
                    t) : c.prototype.removeItem.call(this, t)
                },
                removeUserLocationAnnotation: function() {
                    this._userLocationAnnotation && (this._userLocationAnnotation._impl.removedFromMap(),
                    c.prototype.removeAnyItem.call(this, this._userLocationAnnotation),
                    delete this._userLocationAnnotation)
                },
                updateUserLocationAnnotation: function(t, e) {
                    if (t.coordinate) {
                        var i = this._userLocationAnnotation || new T.UserLocationAnnotation(t);
                        if (this._userLocationAnnotation || (this._userLocationAnnotation = i,
                        this.addItem(i, 0)),
                        t.stale)
                            delete this._lastGeocoderRequestCoordinate,
                            delete this._lastUserLocationAnnotationSubtitle,
                            i._impl.stale = !0;
                        else {
                            if (i._impl.stale = !1,
                            i._impl.setCoordinate(t.coordinate),
                            M) {
                                if (!e && this._lastGeocoderRequestCoordinate && this._lastGeocoderRequestCoordinate.latitude === i._impl.coordinate.latitude && this._lastGeocoderRequestCoordinate.longitude === i._impl.coordinate.longitude)
                                    return void (this._userLocationAnnotation.subtitle = this._lastUserLocationAnnotationSubtitle)
                            } else
                                M = new T.Geocoder;
                            this._lastGeocoderRequestCoordinate = i._impl.coordinate.copy(),
                            A(M, i, this)
                        }
                    }
                },
                mapSizeDidUpdate: function() {
                    var e;
                    0 !== this._pendingAnnotations.length && (e = this._map.shouldWaitForTilesAndControls(),
                    this._pendingAnnotations.forEach(function(t) {
                        t._impl.isPending && this._addAnnotationWaitingForTiles(t, e)
                    }, this),
                    this._updateSceneGraph(),
                    this._pendingAnnotations = [])
                },
                updateVisibleAnnotations: function() {
                    0 !== this._items.length && (this._updateVisibleAnnotations(this._items),
                    this._updateSceneGraph())
                },
                startDraggingAnnotation: function(t, e) {
                    this._map.annotationDraggingWillStart(),
                    this._draggedAnnotation = t,
                    this._pendingDragStart = !0,
                    t.selected && this._hideCallout(t),
                    this._node.classList.add(L),
                    this._draggedAnnotation._impl.node.classList.add(S),
                    this._draggedAnnotation._impl.lift(),
                    this._updateSceneGraph()
                },
                mapNodeTintWasSet: function(t) {
                    this._items.forEach(function(t) {
                        t._impl.updateLayout()
                    })
                },
                mapTypeDidChange: function() {
                    this._mapFeatureAnnotationController.mapTypeDidChange()
                },
                devicePixelRatioDidChange: function() {
                    this._items.forEach(function(t) {
                        "function" == typeof t._impl.updateGlyphImages && t._impl.updateGlyphImages()
                    })
                },
                styleHelperNodeDidMoveToParent: function(t) {
                    var e;
                    g.supportsShadowDOM && (e = (t = t.assignedNodes ? t : t.querySelector("slot")) && this._shadowDOMSlotController.getAssignedElement(t),
                    t) && e && e.parentNode && 0 === t.assignedNodes().length && (this._node.element.removeChild(e),
                    this._node.element.appendChild(e))
                },
                getShadowDOMTargetFromEvent: function(t) {
                    if (this._shadowRootNode.domNode)
                        return g.getShadowDOMTargetFromEvent(this._shadowRootNode.domNode, t)
                },
                handleEvent: function(t) {
                    switch (t.type) {
                    case "region-change-start":
                        this._nudgeStarted = !0,
                        this._map.public.addEventListener("region-change-end", this);
                        break;
                    case "region-change-end":
                        !this._nudgeStarted && this._nudgeMapToShowCallout() || (delete this._nudgeStarted,
                        this._callout && this._callout.animateIn(),
                        this._map.public.removeEventListener(t.type, this))
                    }
                },
                performScheduledUpdate: R,
                addedItem: function(t, e) {
                    c.prototype.addedItem.call(this, t, e),
                    t._impl.isWaiting = !0,
                    e && (t._impl.delayRank = 0);
                    e = this._shouldAnnotationBePending(t);
                    e && (t._impl.isPending = !0,
                    this._pendingAnnotations.push(t)),
                    this._updateAnnotation(t),
                    t._impl.selected && this._didSelectAnnotation(t),
                    e || this._addAnnotationWaitingForTiles(t, this._map.shouldWaitForTilesAndControls())
                },
                manyItemsAdded: function(t) {
                    this._updateSceneGraph()
                },
                removedItem: function(t, e) {
                    delete t._impl.wasCollided,
                    "function" == typeof t._impl.node.remove && (g.supportsShadowDOM && t._impl.node.parent && this._shadowDOMSlotController.removeAssignedElement(t._impl.elementInAnnotationDOM, !t._impl.renderedByDOMElement),
                    t._impl.node.remove()),
                    c.prototype.removedItem.call(this, t),
                    t._impl.labelRegion && this._removeLabelRegionForAnnotation(t),
                    e || this._updateVisibleAnnotations([t]),
                    this._clustersController.removedAnnotation(t),
                    t.memberAnnotations || this._updateCollisions(this._items)
                },
                manyItemsRemoved: function(t) {
                    this._updateVisibleAnnotations(this.items),
                    this._updateSceneGraph()
                },
                manyItemsChanged: function(t) {
                    this._updateVisibleAnnotations(this.items),
                    this._updateSceneGraph()
                },
                removedReferenceToMap: function() {
                    this._userLocationAnnotation && this._userLocationAnnotation._impl.removedFromMap()
                },
                pickableItemsCloseToPoint: function(t, n) {
                    t = t.filter(function(t, e) {
                        var i = t._impl.distanceToPoint(n);
                        return i <= this._selectionDistance && (t._impl.distance = i,
                        t._impl.index = e,
                        !0)
                    }, this).sort(function(t, e) {
                        return t._impl.distance - e._impl.distance || e._impl.index - t._impl.index
                    });
                    return t.forEach(function(t) {
                        delete t._impl.distance,
                        delete t._impl.index
                    }),
                    t
                },
                annotationDraggingDidChange: function(t) {
                    this._draggedAnnotation && !this._draggedAnnotation._impl.shouldPreventDrag && (this._pendingDragStart && (delete this._pendingDragStart,
                    this._draggedAnnotation._impl.draggingDidStart(),
                    this._map.dispatchEventWithAnnotation(d.Events.DragStart, this._draggedAnnotation)),
                    k.scheduleASAP(this),
                    this._draggedAnnotation._impl.setDraggingTranslationForMapFrameSize(t, this._map.ensureRenderingFrame().size),
                    this._annotationDraggingMapPanningController.update(this._draggedAnnotation, this._draggedAnnotation._impl.node))
                },
                annotationDraggingDidEnd: function(t) {
                    this._draggedAnnotation && (this._annotationDraggingMapPanningController.stop(),
                    this._draggedAnnotation._impl.dropAfterDraggingAndRevertPosition(!t),
                    this._draggedAnnotation._impl.node.classList.remove(S),
                    this._node.classList.remove(L),
                    this._map.annotationDraggingDidEnd(),
                    this._map.dispatchEventWithAnnotation(d.Events.DragEnd, this._draggedAnnotation),
                    delete this._draggedAnnotation,
                    this._updateSceneGraph())
                },
                annotationPropertyDidChange: function(t, e) {
                    if (!(_ && t instanceof _)) {
                        switch (e) {
                        case "selected":
                            t.selected ? this._didSelectAnnotation(t) : this._didDeselectAnnotation(t);
                            break;
                        case "coordinate":
                            if (t._impl.updatedPosition())
                                break;
                            return;
                        case "":
                        case "displayPriority":
                        case "collisionMode":
                        case "padding":
                            break;
                        case "calloutOffset":
                            this._updateCalloutPositionWithTailShift(t, !0);
                            break;
                        case "visible":
                            this._selectedItem === t && (this._callout ? this._callout.visible = t.visible : t.visible && this._showCalloutForAnnotation(t, !0)),
                            t._impl.needsColliding = !0;
                            break;
                        case "draggable":
                            this._draggedAnnotation !== t || t.draggable || this._map.stopDraggingAnnotation();
                            break;
                        default:
                            this._selectedItem === t && (this._updateCalloutInfo(t),
                            this._updateCalloutTailShift())
                        }
                        this._annotationsDidChangeSinceLastCollision = !0,
                        this._updateVisibleAnnotations([t]),
                        this._updateSceneGraph(),
                        this._updateLabelRegionForAnnotation(t)
                    }
                },
                mapForAnnotation: function(t) {
                    return this._map ? this._map.public : null
                },
                sizeForElement: function(t) {
                    if (this._map.isRooted())
                        return this._styleHelper.sizeForElement(t)
                },
                backgroundColorForElement: function(t, e) {
                    return this._styleHelper.backgroundColorForElement(t, e)
                },
                setAnimationForElement: function(t, e, i) {
                    return this._styleHelper.setAnimationForElement(t, e, i)
                },
                selectedAnnotationDidMoveToMap: function(t) {
                    this._updateSceneGraph(),
                    this._showCalloutForAnnotation(t)
                },
                supportsLabelRegions: function() {
                    return this._map.supportsLabelRegions()
                },
                annotationFinishedAnimating: function(t) {
                    this._checkCompletion()
                },
                isElementInCallout: function(t) {
                    return !!this._callout && this._callout.containsElement(t)
                },
                isElementInCustomCallout: function(t) {
                    return !!this._callout && this._callout.isCustomCallout() && this._callout.node.element.contains(t)
                },
                mapPanningDuringAnnotationDrag: R,
                mapSupportForLabelRegionsChanged: function() {
                    this._items.forEach(function(t) {
                        var e = t._impl;
                        e.updateLayout(),
                        delete e.labelRegion,
                        this._updateLabelRegionForAnnotation(t)
                    }, this)
                },
                containsMarkerAnnotation: function() {
                    return this._items.some(function(t) {
                        return "string" == typeof t.glyphText
                    })
                },
                paddingForAnnotation: function(t) {
                    var e = 0
                      , i = 0
                      , e = (t.size ? (e = t.size.width,
                    i = t.size.height) : console.warn("[MapKit] Computing padding for showItems() when an annotation was not yet added the DOM can cause the annotation to not be entirely visible. The `size` property of the annotation can be changed to ensure that it shows up properly."),
                    {
                        top: t._impl._anchorPoint.y,
                        right: e - t._impl._anchorPoint.x,
                        bottom: i - t._impl._anchorPoint.y,
                        left: t._impl._anchorPoint.x
                    });
                    return t === this.selectedItem && this._callout && (i = this._callout.boundingRect,
                    t = t._impl.position(),
                    e.top = Math.max(e.top, t.y - i.minY()),
                    e.right = Math.max(e.right, i.maxX() - t.x),
                    e.bottom = Math.max(e.bottom, i.maxY() - t.y),
                    e.left = Math.max(e.left, t.x - i.minX())),
                    e
                },
                calloutNodeDidRemove: function(t) {
                    g.supportsShadowDOM && (t.isCustomCallout() && "slot" === t.customOrContentElement.localName && this._shadowDOMSlotController.removeAssignedElement(t.customOrContentElement),
                    t.customLeftAccessory && "slot" === t.customLeftAccessory.localName && this._shadowDOMSlotController.removeAssignedElement(t.customLeftAccessory),
                    t.customRightAccessory) && "slot" === t.customRightAccessory.localName && this._shadowDOMSlotController.removeAssignedElement(t.customRightAccessory)
                },
                mapFeatureDidSelect: function(t) {
                    this._mapFeatureAnnotationController.mapFeatureDidSelect(t)
                },
                _addAnnotationToMapAsync: function(t) {
                    this._addAnnotationToMap(t, !1),
                    this._updateSceneGraph()
                },
                _addAnnotationToMap: function(t, e) {
                    this._shouldAnnotationBePending() ? t._impl.isPending = !0 : (g.supportsShadowDOM && this._annotationsNode && this._shadowDOMSlotController.appendAssignedElement(t.element, !t._impl.renderedByDOMElement),
                    t._impl.willMoveToMap(t._impl.canAnimate && !e),
                    delete t._impl.timeout,
                    delete t._impl.isWaiting,
                    delete t._impl.canAnimate,
                    delete t._impl.delayMs,
                    e = this._items.indexOf(t),
                    this._annotationsNode && this._annotationsNode.addChild(t._impl.node, e),
                    t._impl.sceneGraphNode && this._sceneGraphNode.addChild(t._impl.sceneGraphNode, e),
                    this._updateAnnotation(t),
                    t.selected && this._showCalloutForAnnotation(t),
                    this._updateLabelRegionForAnnotation(t),
                    t._impl.didMoveToMap())
                },
                _addAnnotationWaitingForTiles: function(t, e, i) {
                    Object.prototype.hasOwnProperty.call(t._impl, "canAnimate") || (t._impl.canAnimate = !t._impl.isPending),
                    delete t._impl.isPending,
                    e && t !== this._userLocationAnnotation && !this._items.some(function(t) {
                        return t !== this._userLocationAnnotation && t._impl.mayBeDrawn()
                    }
                    .bind(this)) ? this._waitingAnnotations ? this._waitingAnnotations.push(t) : (this._waitingAnnotations = [t],
                    this._tileLoadingTimeout = window.setTimeout(this.addWaitingAnnotations.bind(this, w.noop), 3e3)) : !i && t._impl.doesAnimate() && 0 < t._impl.delayMs ? t._impl.timeout = window.setTimeout(this._addAnnotationToMapAsync.bind(this, t), t._impl.delayMs) : this._addAnnotationToMap(t, i)
                },
                _didDeselectAnnotation: function(t) {
                    t._impl.node.classList.remove(E),
                    this.selectedItem = null,
                    this._hideCallout(t),
                    this._map.annotationSelectionDidChange(t),
                    this._mapFeatureAnnotationController.annotationSelectionDidChange(t)
                },
                _didSelectAnnotation: function(t) {
                    t._impl.node.classList.add(E),
                    this.selectedItem = t,
                    this._map.annotationSelectionDidChange(t),
                    this._mapFeatureAnnotationController.annotationSelectionDidChange(t),
                    t._impl.visible && this._showCalloutForAnnotation(t)
                },
                _boundingRectForSelectedAnnotationAndCallout: function() {
                    var t = this._callout.boundingRect
                      , e = this._selectedItem._impl.position()
                      , i = Math.min(t.minX(), e.x)
                      , n = Math.min(t.minY(), e.y)
                      , o = Math.max(t.maxX(), e.x) - i
                      , t = Math.max(t.maxY(), e.y) - n;
                    return new b(i,n,o,t)
                },
                _updateCalloutTailShift: function(t) {
                    var e, i;
                    return !!this._callout && (e = (t ? this._callout.boundingRect : this._boundingRectForSelectedAnnotationAndCallout()).pad(12),
                    t = (e = this._totalMapNudgingTranslation(e, this._map.ensureVisibleFrame(), t)).x,
                    e = e.y,
                    i = this._callout.shiftTailBy(t),
                    0 !== t || 0 !== e ? new C(-(t + i),-e) : void 0)
                },
                _nudgeMapToShowCallout: function() {
                    var t;
                    return this._map.cameraIsPanning || this._map.cameraIsZooming ? (this._map.public.addEventListener("region-change-end", this),
                    !0) : !!this._selectedItem._impl.isShown() && !!(t = this._updateCalloutTailShift()) && (this._map.public.addEventListener("region-change-start", this),
                    this._map.translateCameraAnimated(t, !0),
                    this._map.public.removeEventListener("region-change-start", this),
                    !!this._nudgeStarted)
                },
                _translationToFitInFrame: function(t, e) {
                    var i = {
                        x: 0,
                        y: 0
                    };
                    return (t.maxX() > e.maxX() || t.minX() < e.minX() || t.maxY() > e.maxY() || t.minY() < e.minY()) && (i.x = t.minX() < e.minX() ? t.minX() - e.minX() : t.maxX() > e.maxX() ? t.maxX() - e.maxX() : 0,
                    i.y = t.minY() < e.minY() ? t.minY() - e.minY() : t.maxY() > e.maxY() ? t.maxY() - e.maxY() : 0),
                    i
                },
                _totalMapNudgingTranslation: function(e, t, i) {
                    var n = this._translationToFitInFrame(e, t)
                      , o = this._map.getControlBounds()
                      , s = t.midX()
                      , a = t.midY()
                      , r = 0
                      , l = 0;
                    return e = x(e, n.x, n.y),
                    o.forEach(function(t) {
                        e.minX() < t.maxX() && e.maxX() > t.minX() && e.minY() < t.maxY() && e.maxY() > t.minY() && (r += t.maxX() < s ? e.minX() - t.maxX() : e.maxX() - t.minX(),
                        l += t.maxY() < a ? e.minY() - t.maxY() : e.maxY() - t.minY(),
                        i || (0 !== l && Math.abs(r) > Math.abs(l) ? r = 0 : l = 0,
                        e = x(e, r, l)))
                    }, this),
                    n.x += r,
                    n.y += l,
                    n
                },
                _hideCallout: function(t, e) {
                    t._impl.calloutWillDisappear(),
                    this._callout && (this._callout.node.classList.remove(E),
                    this._callout.animateOut(e),
                    delete this._callout)
                },
                _shouldAnnotationBePending: function() {
                    return !this._map.isRooted()
                },
                _showCalloutForAnnotation: function(t, e) {
                    if (this._hideCallout(t, e),
                    !t._impl.canShowCallout())
                        return t._impl.calloutWillAppear(!1);
                    var i, n = t._impl.callout;
                    if (n && "function" == typeof n.calloutShouldAppearForAnnotation && !y(n.calloutShouldAppearForAnnotation, n, [t], !0))
                        return t._impl.calloutWillAppear(!1);
                    var o, s = n && "function" == typeof n.calloutElementForAnnotation;
                    s && (i = y(n.calloutElementForAnnotation, n, [t]),
                    w.checkElement(i, "[MapKit] calloutElementForAnnotation() must return a DOM element, but returned `" + i + "` instead."));
                    var a, r = !1;
                    if (!i && ((r = n && "function" == typeof n.calloutContentForAnnotation) && (o = y(n.calloutContentForAnnotation, n, [t]),
                    w.checkElement(o, "[MapKit] contentElementForAnnotation() must return a DOM element, but returned `" + o + "` instead.")),
                    !r) && !t.title)
                        return t._impl.calloutWillAppear(!1);
                    t._impl.calloutWillAppear(!0);
                    var l, h = n && "function" == typeof n.calloutLeftAccessoryForAnnotation, c = (h && (a = y(n.calloutLeftAccessoryForAnnotation, n, [t]),
                    w.checkElement(a, "[MapKit] calloutLeftAccessoryForAnnotation() must return a DOM element, but returned `" + a + "` instead.")),
                    n && "function" == typeof n.calloutRightAccessoryForAnnotation);
                    c && (l = y(n.calloutRightAccessoryForAnnotation, n, [t]),
                    w.checkElement(l, "[MapKit] calloutRightAccessoryForAnnotation() must return a DOM element, but returned `" + l + "` instead."));
                    var d, u = t._impl.ignoreCalloutCornerRadiusForLeftAccessory && !h && !c;
                    !h && t._impl.canvasForCalloutAccessory && (a = t._impl.canvasForCalloutAccessory()),
                    g.supportsShadowDOM && (s && (m = "mk-slot-" + Math.random().toString(32).substr(2, 8),
                    i.slot = m,
                    (d = g.htmlElement("slot")).name = m,
                    this._shadowDOMSlotController.appendAssignedElement(i),
                    i = d),
                    r && (m = "mk-slot-" + Math.random().toString(32).substr(2, 8),
                    o.slot = m,
                    (d = g.htmlElement("slot")).name = m,
                    this._shadowDOMSlotController.appendAssignedElement(o),
                    o = d),
                    h && (m = "mk-slot-" + Math.random().toString(32).substr(2, 8),
                    a.slot = m,
                    (d = g.htmlElement("slot")).name = m,
                    this._shadowDOMSlotController.appendAssignedElement(a),
                    a = d),
                    c) && (m = "mk-slot-" + Math.random().toString(32).substr(2, 8),
                    l.slot = m,
                    (d = g.htmlElement("slot")).name = m,
                    this._shadowDOMSlotController.appendAssignedElement(l),
                    l = d),
                    this._callout = new _(this,{
                        customElement: i,
                        contentElement: o,
                        ignoreCalloutCornerRadiusForLeftAccessory: u,
                        leftAccessory: this._rtl ? l : a,
                        rightAccessory: this._rtl ? a : l,
                        rtl: this._rtl
                    }),
                    this._callout.animates = !(e || n && "function" == typeof n.calloutShouldAnimateForAnnotation && !y(n.calloutShouldAnimateForAnnotation, n, [t], !0));
                    var p, r = s && this._callout.animates && n && "function" == typeof n.calloutAppearanceAnimationForAnnotation ? y(n.calloutAppearanceAnimationForAnnotation, n, [t], "") : "", m = (w.checkType(r, "string", "[MapKit] calloutAppearanceAnimationForAnnotation() must return a string, but returned `" + r + "` instead."),
                    this._callout.appearanceAnimation = r,
                    i && (n && "function" == typeof n.calloutAnchorOffsetForAnnotation && (p = y(n.calloutAnchorOffsetForAnnotation, n, [t, this._callout.node.size]),
                    w.checkInstance(p, window.DOMPoint, "[MapKit] calloutAnchorOffsetForAnnotation() must return a DOMPoint, but returned `" + p + "` instead.")),
                    this._callout.setAnchorOffset(p)),
                    this._updateCalloutInfo(t),
                    t === this._userLocationAnnotation && (h = T.AccuracyRingOverlay.getMode(this._map.worldSize, 100),
                    (this._oldCenterMode = h) ? (c = this._callout.getCenterOffset(!0),
                    this._callout.animateAnchorOffset(c, -1),
                    this._callout.animateTailScale(0, -1)) : (this._callout.animateAnchorOffset(new C(0,0), -1),
                    this._callout.animateTailScale(1, -1))),
                    this._updateCalloutPositionWithTailShift(t, !1),
                    !e && this._nudgeMapToShowCallout());
                    this._callout.willMoveToMap(),
                    this._callout.node.classList.add(E),
                    this._calloutsNode.addChild(this._callout.node),
                    this._callout.appearanceAnimation && this._calloutsNode.element.appendChild(this._callout.node.element),
                    m || this._callout.animateIn()
                },
                mapWasDestroyed: function() {
                    c.prototype.mapWasDestroyed.call(this),
                    this._annotationDraggingMapPanningController && this._annotationDraggingMapPanningController.mapWasDestroyed(),
                    this._clustersController.mapWasDestroyed(),
                    this._mapWasDestroyed = !0
                },
                _updateCalloutInfo: function(t) {
                    this._callout ? this._callout.updateInfo(t, 12) || this._hideCallout(t) : this._showCalloutForAnnotation(t)
                },
                _updateCalloutPositionWithTailShift: function(t, e) {
                    this._selectedItem === t && this._callout && (this._callout.setShown(t._impl.isShown()),
                    this._callout.setPosition(t._impl.positionForCallout()),
                    e) && this._updateCalloutTailShift(e)
                },
                _updateLabelRegionForAnnotation: function(t) {
                    var e, i, n, t = t._impl;
                    t.shouldHideLabels && (t.labelRegion || (t.labelRegion = this._map.createLabelRegion()),
                    e = t.labelRegion) && (i = (n = t.node.size).width,
                    n = n.height,
                    e.x = null == t.visibleX ? t.x : t.visibleX,
                    e.y = 1 - t.y,
                    e.width = i,
                    e.height = n,
                    e.xOffset = i / 2 - t._anchorPoint.x - t._anchorOffset.x,
                    e.yOffset = t._anchorPoint.y + t._anchorOffset.y - n / 2,
                    this._map.updatedLabelRegion())
                },
                _removeLabelRegionForAnnotation: function(t) {
                    this._map.unregisterLabelRegion(t._impl.labelRegion),
                    delete t._impl.labelRegion
                },
                _updateVisibleAnnotations: function(t, e) {
                    e || this._deletePreviousPointForPickingItem();
                    var i, n, o = this._userLocationAnnotation, l = this._map, s = (o && (i = T.AccuracyRingOverlay.getMode(l.worldSize),
                    n = this._selectedItem === o,
                    o.isRingMode = i,
                    i = T.AccuracyRingOverlay.getMode(l.worldSize, 100),
                    s = this._oldCenterMode !== i,
                    this._oldCenterMode = i,
                    this._callout) && n && s && (this._callout.animateTailScale(i ? 0 : 1),
                    i ? ((n = this._callout.getCenterOffset()).y = n.y - o._impl._node.size.height / 4,
                    this._callout.animateAnchorOffset(n)) : this._callout.animateAnchorOffset(new C(0,0))),
                    l.camera.toRenderingMapRect()), h = s.size.width, c = Math.min(1.5 * h, .5), d = s.midX(), u = s.size.height, p = s.minY() - u, m = p + 3 * u;
                    t.forEach(function(t) {
                        if (t !== this._draggedAnnotation || !this._annotationDraggingMapPanningController.panning) {
                            var e = NaN
                              , i = t._impl.y;
                            if (0 < h && 0 < u && p <= i && i <= m)
                                for (var n = t._impl.x, o = t.anchorOffset.x / l.worldSize, s = c, a = -1; a <= 1; ++a) {
                                    var r = Math.abs(n - o + a - d);
                                    r < s && (s = r,
                                    e = n + a)
                                }
                            isNaN(e) ? t._impl.setShown(!1) : (t._impl.isShown() || t !== this._selectedItem || this._showCalloutForAnnotation(t, !0),
                            t._impl.setShown(!0),
                            t._impl.setPosition(l.adjustMapItemPoint(l.camera.transformMapPoint(new C(e,i)))),
                            t._impl.visibleX !== e && (t._impl.visibleX = e,
                            this._updateLabelRegionForAnnotation(t)))
                        }
                    }, this),
                    this._updateCalloutPositionWithTailShift(this._selectedItem, !0),
                    e || this._updateCollisions(t)
                },
                _updateCollisions: function(t) {
                    var e, n = !1, i = this._items.filter(function(t) {
                        var e = t.visible && t._impl.isShown()
                          , i = e || t._impl.needsColliding;
                        return delete t._impl.needsColliding,
                        i && (t.displayPriority < o.DisplayPriority.Required || t.clusteringIdentifier) && (n = !0),
                        i && e && !t.memberAnnotations
                    }, this);
                    n && (e = this._map,
                    this._clustersController.collideAnnotations(i, e.zoomLevel, e.rotation, this._annotationsDidChangeSinceLastCollision)),
                    this._annotationsDidChangeSinceLastCollision = !1
                },
                addCluster: function(t) {
                    var e = "function" == typeof this._map.annotationForCluster ? y(this._map._annotationForCluster, this._map.public, [t], null) : t;
                    return e && e instanceof o || (console.warn("[MapKit] Expects Map.annotationForCluster to return an annotation."),
                    e = t),
                    e = this._clustersController.setRequiredClusterAnnotationProperties(e, t),
                    this.addItem(e),
                    e._impl.customCluster = e !== t,
                    e._impl.updateLayout(!0),
                    e
                },
                willUpdateCollisions: function() {
                    this._items.forEach(function(t) {
                        t._impl.wasOccluded = t._impl.occluded,
                        t._impl.previousCluster = t._impl.cluster
                    })
                },
                didUpdateCollisions: function() {
                    this._items.forEach(function(t) {
                        var e = t._impl;
                        e.wasCollided || e.occluded || (e.wasCollided = !0),
                        t.memberAnnotations && t.memberAnnotations[0]._impl.cluster !== t && (e.cluster = e.memberAnnotations[0]._impl.cluster),
                        e.updateVisibility(e.occluded),
                        e.occluded !== e.wasOccluded && e.animateOcclusion(),
                        delete e.previousCluster,
                        e.shouldHideLabels && (e.occluded || e.labelRegion ? e.occluded && e.labelRegion && this._removeLabelRegionForAnnotation(t) : this._updateLabelRegionForAnnotation(t))
                    }, this),
                    this._items.forEach(function(t) {
                        delete t._impl.wasOccluded
                    }),
                    this._updateVisibleAnnotations(this._items, !0),
                    this._updateSceneGraph()
                },
                deselectClusterAnnotation: function() {
                    this._selectedItem && this._selectedItem.memberAnnotations && (this._selectedItem.selected = !1)
                },
                _updateAnnotation: function(t) {
                    t._impl.updatedPosition() && this._updateVisibleAnnotations([t])
                },
                _updateSceneGraph: function() {
                    var e = this._selectedItem
                      , i = this._draggedAnnotation
                      , t = this._items.filter(function(t) {
                        return t._impl.isDrawn() && t !== e && t !== i
                    }).map(function(t) {
                        return t._impl.sceneGraphNode
                    });
                    e && e._impl.isDrawn() && t.push(e._impl.sceneGraphNode),
                    i && i._impl.isDrawn() && t.push(i._impl.sceneGraphNode),
                    this._sceneGraphNode.children = t
                },
                _checkCompletion: function() {
                    this._mapWasDestroyed || (this._annotationsDidChangeSinceLastCollision = !0,
                    this._updateVisibleAnnotations(this._items),
                    this._updateSceneGraph(),
                    this._completionCallback && !this._items.some(function(t) {
                        return !t._impl.isStable()
                    }) && "function" == typeof this._completionCallback && (this._completionCallback(),
                    delete this._completionCallback))
                }
            });
            var A = n(function(t, i, n) {
                n._geocoderRequestId && t.cancel(n._geocoderRequestId);
                var o = n._geocoderRequestId = t.reverseLookup(i._impl.coordinate, function(t, e) {
                    o === n._geocoderRequestId && (delete n._geocoderRequestId,
                    t ? (console.error("[MapKit] Error getting address for user location: " + t.message),
                    i.subtitle = null) : 0 < e.results.length ? n._lastUserLocationAnnotationSubtitle = i.subtitle = e.results[0].formattedAddress : i.subtitle = null)
                })
            }, 1e3);
            function R() {
                var t;
                this._draggedAnnotation && !this._mapWasDestroyed && (t = this._draggedAnnotation._impl.dispatchDraggingEvent(),
                this._map.dispatchEventWithAnnotation(t.type, this._draggedAnnotation, {
                    coordinate: t.coordinate
                }))
            }
            var I = ["UserLocationAnnotation", "AccuracyRingOverlay", "Geocoder"];
            function D() {
                for (var t = !0, e = 0; e < I.length; e++) {
                    var i = I[e];
                    !T[i] && f.jsModules[i] ? T[i] = f.jsModules[i] : t = !1
                }
                t && f.removeEventListener("load", D)
            }
            f.addEventListener("load", D),
            D(),
            t.exports = T
        }
        ,
        5822: (t,e,i)=>{
            var s = i(342)
              , n = i(8756)
              , o = i(9842)
              , r = i(3045)
              , a = i(7768)
              , l = i(8760)
              , h = i(4701)
              , c = i(2221)
              , d = i(5097)
              , u = 3.58028186
              , p = 10
              , m = 10
              , _ = {
                left: 4,
                right: 4
            }
              , g = 7.5
              , f = 10
              , v = 7.5
              , y = 7.5
              , w = "mk-no-subtitle";
            function C(t) {
                a.Node.call(this, h.htmlElement("div", {
                    class: "mk-callout",
                    style: "direction: ltr"
                })),
                this._callout = t
            }
            function b(e, t) {
                s.call(this),
                this.delegate = e,
                this._rtl = t.rtl,
                this._node = new C(this);
                var i = this._node.element;
                function n(t) {
                    return e.backgroundColorForElement(t, !0)
                }
                function o(t, e) {
                    t = h.htmlElement("div", {
                        class: "mk-callout-accessory-content"
                    }, t);
                    return t.style.maxWidth = "186.5px",
                    e && (t.style.padding = "0"),
                    h.htmlElement("div", {
                        class: "mk-callout-accessory"
                    }, t)
                }
                t.customElement ? (this._containerElement = this._customElement = t.customElement,
                this.setSize(this.delegate.sizeForElement(this._customElement)),
                i.appendChild(t.customElement)) : (this._ignoreCalloutCornerRadiusForLeftAccessory = t.ignoreCalloutCornerRadiusForLeftAccessory,
                this._tailScale = t.tailScale || 1,
                this._bubbleElement = h.svgElement("path"),
                this._svgElement = i.appendChild(h.svgElement("svg", {
                    class: "mk-bubble"
                }, this._bubbleElement)),
                this._containerElement = h.htmlElement("div"),
                this._containerElementNode = new a.Node(this._containerElement),
                t.leftAccessory && (this._leftAccessoryBackgroundColor = n(t.leftAccessory),
                this._leftAccessory = o(t.leftAccessory, !this._rtl && this._ignoreCalloutCornerRadiusForLeftAccessory),
                this._containerElement.appendChild(this._leftAccessory)),
                this._containerContentElement = this._containerElement.appendChild(h.htmlElement("div")),
                this._containerContentElement.className = "mk-callout-content",
                t.rightAccessory && (this._rightAccessoryBackgroundColor = n(t.rightAccessory),
                this._rightAccessory = o(t.rightAccessory, this._rtl && this._ignoreCalloutCornerRadiusForLeftAccessory),
                this._containerElement.appendChild(this._rightAccessory)),
                (this._leftAccessoryBackgroundColor || this._rightAccessoryBackgroundColor) && (this._calloutId = function t() {
                    var e = Math.random().toString(36).substr(2);
                    return document.getElementById(e) ? t() : e
                }(),
                this._linearGradientElement = h.svgElement("linearGradient", {
                    id: this._calloutId
                }),
                this._svgElement.appendChild(h.svgElement("defs", this._linearGradientElement))),
                t.contentElement ? this._setContentElement(t.contentElement) : (this._containerElementNode.classList.add("mk-standard"),
                t.rtl && (this._containerContentElement.className += " mk-rtl")),
                i.appendChild(this._containerElement)),
                t.position && this.setPosition(t.position),
                this._node.wantsHardwareCompositing = !0
            }
            function k(t, e, i) {
                var n = 17 * e
                  , o = 13 * e
                  , s = t.width / 2 - n
                  , a = 10 * e
                  , e = 12 * e;
                return "M0,10.5c0,-6.9197181400000005 3.5826363,-10.5 10.5,-10.5h" + t.width + "c6.9173637,0 10.5," + u + " 10.5,10.5v" + t.height + "c0,6.9197181400000005 " + -3.5826363 + ",10.5 -10.5,10.5h" + (-i - s) + "c" + -a + ",0 " + -e + "," + o + " " + -n + "," + o + "c" + (e - n) + ",0 " + (a - n) + "," + -o + " " + -n + "," + -o + "h" + (i - s) + "c-6.9173637,0 -10.5," + -u + " -10.5,-10.5z"
            }
            C.prototype = c.inheritPrototype(a.Node, C, {
                constructor: C,
                didMoveToParent: function(t) {
                    null === t && this._callout.didRemoveFromParent()
                }
            }),
            b.prototype = c.inheritPrototype(s, b, {
                _tailShift: 0,
                get node() {
                    return this._node
                },
                get boundingRect() {
                    var t = this._node.position;
                    return new o(t.x,t.y,this._node.size.width,this._node.size.height)
                },
                delegate: null,
                willMoveToMap: function() {
                    this._node.transform = (new l).scale(0)
                },
                setAnchorOffset: function(t) {
                    this._anchorOffset = t ? new window.DOMPoint(t.x,t.y) : new window.DOMPoint
                },
                containsElement: function(t) {
                    var e;
                    return t !== this._svgElement && (!!this._containerElement.contains(t) || !(!h.supportsShadowDOM || !this.isCustomCallout() || !(e = this.customOrContentElement.assignedNodes()[0])) && e.contains(t))
                },
                isCustomCallout: function() {
                    return !!this.customOrContentElement
                },
                get customOrContentElement() {
                    return this._customElement || this._contentElement
                },
                get customLeftAccessory() {
                    if (this._leftAccessory)
                        return this._leftAccessory.firstChild.firstChild
                },
                get customRightAccessory() {
                    if (this._rightAccessory)
                        return this._rightAccessory.firstChild.firstChild
                },
                updateInfo: function(t, e) {
                    if (!this.isCustomCallout()) {
                        if (!t || !t.title)
                            return !1;
                        this._containerContentElement.innerHTML = "",
                        this._containerElement.style.width = "",
                        this._containerContentElement.appendChild(h.htmlElement("div", {
                            class: "mk-title",
                            dir: "auto"
                        }, t.title)),
                        t.subtitle ? (this._containerContentElement.appendChild(h.htmlElement("div", {
                            class: "mk-subtitle",
                            dir: "auto"
                        }, t.subtitle)),
                        this._containerElementNode.classList.remove(w)) : (this._containerElementNode.classList.add(w),
                        this._containerElementNode.classList.toggle("mk-no-accessories", !this._leftAccessory && !this._rightAccessory)),
                        this._updateAccessoryViews(),
                        this._containerElement.className = this._containerElementNode.classList.toString();
                        var i = this.delegate.sizeForElement(this._containerElement)
                          , t = t.map._impl.ensureVisibleFrame().size.width - 2 * e - this._extraWidth(this._ignoreCalloutCornerRadiusForLeftAccessory);
                        i.width = c.clamp(i.width, 74, c.clamp(t, 74, 373)),
                        0 !== this._accessoryHeight && (i.height = Math.max(this._accessoryHeight, i.height)),
                        this._updateSize(i, !1),
                        this.updatePosition()
                    }
                    return !0
                },
                shiftTailBy: function(t) {
                    var e;
                    return this._customElement ? 0 : (e = Math.max(0, (this._bubbleSize.width - 74 - 10.5) / 2),
                    this._tailShift = t < 0 ? Math.min(e, -t) : -Math.min(e, t),
                    this._bubbleElement.setAttribute("d", k(this._bubbleSize, this._tailScale, this._tailShift)),
                    this._node.position = new n(this._node.position.x + this._tailShift,this._node.position.y),
                    this._tailShift)
                },
                animateIn: function() {
                    !this.animates || this.animates && this._customElement && !this.appearanceAnimation ? this._node.transform = new l : this._appearanceAnimationName ? (this._node.transform = new l,
                    this.delegate.setAnimationForElement(this._containerElement, this._appearanceAnimation, this._appearanceAnimationName)) : (this._scaleXOffset = -this._tailShift,
                    this._scaleYOffset = this._node.size.height / 2,
                    this._scaleAnimationParameterIndex = 0,
                    this._scaleAnimationStartDate = Date.now(),
                    d.scheduleOnNextFrame(this))
                },
                animateOut: function(t) {
                    !t && this.visible ? (this._scaleAnimationStartDate && this._finishAnimatingScale(),
                    this._fadeoutAnimationStartDate = Date.now(),
                    d.scheduleOnNextFrame(this)) : this._node.remove()
                },
                performScheduledUpdate: function() {
                    this._scaleAnimationStartDate && this._animateScale(),
                    this._fadeoutAnimationStartDate && this._animateFadeout(),
                    this._tailAnimation && this._animateTail(),
                    this._anchorOffsetAnimation && this._animateAnchorOffset()
                },
                didRemoveFromParent: function() {
                    this.delegate.calloutNodeDidRemove(this)
                },
                setSize: function(t) {
                    this._svgElement && (this._svgElement.style.width = t.width + "px",
                    this._svgElement.style.height = t.height + "px",
                    this._svgElement.setAttribute("viewBox", "-0.5 -0.5 " + t.width + " " + t.height)),
                    s.prototype.setSize.call(this, t)
                },
                _updateSize: function(t, e) {
                    var i = this._ignoreCalloutCornerRadiusForLeftAccessory
                      , n = t.width - this.node.size.width - 22
                      , n = (this._tailShift = Math.max(0, this._tailShift + Math.min(0, n)),
                    this._containerElement.style.width = t.width + "px",
                    this._extraWidth(i))
                      , o = 13 * this._tailScale
                      , s = 22 + o
                      , n = (t.width += n,
                    t.height)
                      , i = (i ? 55 : 50) + o
                      , s = (t.height += s,
                    t.height -= 10.5,
                    t.height = e ? t.height : Math.max(t.height, i),
                    e ? 0 : 5.5)
                      , i = (t.height - n - o) / 2;
                    this._containerElement.style.top = n / 2 + Math.max(s, i) + "px";
                    var a, e = v, n = y;
                    this._containerElement.style.left = e + "px",
                    this.setSize(t),
                    this._bubbleSize = new r(t.width - 22,t.height - 22 - o),
                    this._bubbleElement.setAttribute("d", k(this._bubbleSize, this._tailScale, this._tailShift)),
                    this._leftAccessoryBackgroundColor && (a = 100 * (this._leftAccessoryWidth + e) / t.width,
                    this._updateAccessoryViewBackground(a, this._leftAccessoryBackgroundColor, "white")),
                    this._rightAccessoryBackgroundColor && (a = 100 - 100 * (this._rightAccessoryWidth + n) / t.width,
                    this._updateAccessoryViewBackground(a, "white", this._rightAccessoryBackgroundColor))
                },
                _extraWidth: function(t) {
                    return t ? g + f : p + m - _.left
                },
                _updateAccessoryViews: function() {
                    var t;
                    this._accessoryHeight = 0,
                    this._leftAccessory && (t = this.delegate.sizeForElement(this._leftAccessory.children[0]),
                    this._leftAccessoryWidth = (!this._rtl && this._ignoreCalloutCornerRadiusForLeftAccessory ? 0 : 10.5) + t.width,
                    this._accessoryHeight = t.height,
                    this._leftAccessory.style.width = this._leftAccessoryWidth + "px",
                    this._ignoreCalloutCornerRadiusForLeftAccessory && !this._rtl && (this._leftAccessory.style.height = this._leftAccessoryWidth + "px",
                    this._leftAccessory.style.overflow = "visible"),
                    this._containerContentElement.style.marginLeft = this._leftAccessoryWidth + "px"),
                    this._rightAccessory && (t = this.delegate.sizeForElement(this._rightAccessory.children[0]),
                    this._rightAccessoryWidth = (this._rtl && this._ignoreCalloutCornerRadiusForLeftAccessory ? 0 : 10.5) + t.width,
                    this._accessoryHeight = Math.max(this._accessoryHeight, t.height),
                    this._rightAccessory.style.width = this._rightAccessoryWidth + "px",
                    this._ignoreCalloutCornerRadiusForLeftAccessory && this._rtl && (this._rightAccessory.style.height = this._rightAccessoryWidth + "px",
                    this._rightAccessory.style.overflow = "visible"),
                    this._containerContentElement.style.marginRight = this._rightAccessoryWidth + "px")
                },
                _updateAccessoryViewBackground: function(t, e, i) {
                    this._linearGradientElement.appendChild(h.svgElement("stop", {
                        offset: t + "%",
                        "stop-color": "" + e
                    })),
                    this._linearGradientElement.appendChild(h.svgElement("stop", {
                        offset: t + "%",
                        "stop-color": "" + i
                    })),
                    this._bubbleElement.style.fill = "url(#" + this._calloutId + ")"
                },
                _setContentElement: function(t) {
                    this._updateAccessoryViews(),
                    this._contentElement = t,
                    this._containerContentElement.appendChild(h.htmlElement("div", t)),
                    this._containerElementNode.classList.add("mk-custom-content"),
                    this._containerElement.className = this._containerElementNode.classList.toString();
                    t = this.delegate.sizeForElement(this._containerElement);
                    t.height = Math.max(t.height, this._accessoryHeight),
                    this._updateSize(t, !0)
                },
                _scaleAnimationParameters: [[8e3 / 60, 30 / 249, 277 / 249], [5e3 / 60, 277 / 249, 237 / 249], [5e3 / 60, 237 / 249, 1]],
                _animateScale: function() {
                    var t = this._scaleAnimationParameters[this._scaleAnimationParameterIndex]
                      , e = t[0]
                      , i = t[1]
                      , t = t[2]
                      , n = Date.now()
                      , e = Math.min((n - this._scaleAnimationStartDate) / e, 1)
                      , t = i + (t - i) * e;
                    if (this._node.transform = (new l).translate(this._scaleXOffset, this._scaleYOffset).scale(t).translate(-this._scaleXOffset, -this._scaleYOffset),
                    1 === e) {
                        if (++this._scaleAnimationParameterIndex,
                        !(this._scaleAnimationParameterIndex < this._scaleAnimationParameters.length))
                            return void this._finishAnimatingScale();
                        this._scaleAnimationStartDate = n
                    }
                    d.scheduleOnNextFrame(this)
                },
                _finishAnimatingScale: function() {
                    delete this._scaleXOffset,
                    delete this._scaleYOffset,
                    delete this._scaleAnimationStartDate,
                    delete this._scaleAnimationParameterIndex
                },
                _animateFadeout: function() {
                    var t = (Date.now() - this._fadeoutAnimationStartDate) / 100
                      , t = Math.max(0, 1 - t);
                    0 !== t ? (this._node.opacity = t,
                    d.scheduleOnNextFrame(this)) : this._node.remove()
                },
                animateTailScale: function(t, e) {
                    var i = (new Date).getTime();
                    this._tailAnimation = {
                        timeStart: i,
                        timeEnd: i + (e = e || 0 === e ? e : 500),
                        valueStart: this._tailScale,
                        valueEnd: t
                    },
                    this._animateTail()
                },
                _animateTail: function() {
                    var t, e, i, n, o;
                    this._tailAnimation && (t = (new Date).getTime(),
                    n = this._tailAnimation.timeStart,
                    e = this._tailAnimation.timeEnd,
                    o = this._tailAnimation.valueStart,
                    i = this._tailAnimation.valueEnd,
                    n = h.easeInOut(c.clamp(e <= n ? 1 : (t - n) / (e - n), 0, 1)),
                    o = 13 * ((n = h.lerp(n, o, i)) - this._tailScale),
                    this._tailScale = n,
                    this.setSize(new r(this.node.size.width,this.node.size.height + o)),
                    this._bubbleElement.setAttribute("d", k(this._bubbleSize, this._tailScale, this._tailShift)),
                    t < e ? d.scheduleOnNextFrame(this) : this._tailAnimation = null)
                },
                animateAnchorOffset: function(t, e) {
                    var i = (new Date).getTime();
                    this._anchorOffsetAnimation = {
                        timeStart: i,
                        timeEnd: i + (e = e || 0 === e ? e : 500),
                        startX: this._anchorOffset.x,
                        startY: this._anchorOffset.y,
                        endX: t.x,
                        endY: t.y
                    },
                    this._animateAnchorOffset()
                },
                _animateAnchorOffset: function() {
                    var t, e, i, n, o, s, a;
                    this._anchorOffsetAnimation && (t = (new Date).getTime(),
                    o = this._anchorOffsetAnimation.timeStart,
                    e = this._anchorOffsetAnimation.timeEnd,
                    s = this._anchorOffsetAnimation.startX,
                    a = this._anchorOffsetAnimation.endX,
                    i = this._anchorOffsetAnimation.startY,
                    n = this._anchorOffsetAnimation.endY,
                    o = h.easeInOut(c.clamp(e <= o ? 1 : (t - o) / (e - o), 0, 1)),
                    s = h.lerp(o, s, a),
                    a = h.lerp(o, i, n),
                    this._anchorOffset.x = s,
                    this._anchorOffset.y = a,
                    this.updatePosition(),
                    t < e ? d.scheduleOnNextFrame(this) : this._anchorOffsetAnimation = null)
                },
                getCenterOffset: function(t) {
                    var e = 13 * this._tailScale
                      , i = this._node.size;
                    return new n(0,(e - i.height - (t ? 13 : 0)) / 2)
                }
            }),
            t.exports = b
        }
        ,
        5249: (t,e,i)=>{
            var c = i(7415)
              , r = i(5479)
              , n = i(2221)
              , l = i(5097);
            function o(t) {
                this._annotationsController = t,
                this._clusters = [],
                this._previousClusters = [],
                this._previousOverlaps = [],
                this._previousAnnotations = [],
                this._frameCounter = 0
            }
            function h(t, e) {
                var i = c.DisplayPriority.Required
                  , n = t.selected ? i : t.displayPriority;
                return (e.selected ? i : e.displayPriority) - n || e._impl.boundingBox.y2 - t._impl.boundingBox.y2
            }
            function d(t, e) {
                return e.displayPriority - t.displayPriority || t._impl.index - e._impl.index
            }
            function u(t, e) {
                return t._impl.collisionMode === c.CollisionMode.None || e._impl.collisionMode === c.CollisionMode.None ? 0 : t._impl.boundingBox.x1 - e._impl.boundingBox.x1
            }
            function p(t) {
                var e = t._impl.node
                  , i = t._impl.nodePosition()
                  , n = t.padding
                  , e = e.size
                  , o = e.width
                  , e = e.height
                  , i = {
                    x1: i.x + n.left,
                    x2: i.x + o - n.right,
                    y1: i.y + n.top,
                    y2: i.y + e - n.bottom
                };
                return t._impl.collisionMode === c.CollisionMode.Circle && (i.cx = (i.x1 + i.x2) / 2,
                i.cy = (i.y1 + i.y2) / 2,
                i.r = Math.min(o, e) / 2),
                i
            }
            function m(t, e) {
                var i = {
                    x1: t.x1 - e,
                    x2: t.x2 + e,
                    y1: t.y1 - e,
                    y2: t.y2 + e
                };
                return Object.prototype.hasOwnProperty.call(t, "r") && (i.r = t.r + e,
                i.cx = t.cx,
                i.cy = t.cy),
                i
            }
            function _(t, e) {
                var i = t.cx - n.clamp(t.cx, e.x1, e.x2)
                  , e = t.cy - n.clamp(t.cy, e.y1, e.y2);
                return i * i + e * e <= t.r * t.r
            }
            function g(t, e) {
                t._impl.occluded = e,
                t._impl.updateVisibility(e)
            }
            o.prototype = {
                collideAnnotations: function(t, e, i, n) {
                    this._locked || (this._annotations = t,
                    this._zoomLevel = e,
                    this._rotation = i,
                    this._changesSinceLastCollision = n,
                    l.scheduleOnNextFrame(this))
                },
                setRequiredClusterAnnotationProperties: function(t, e) {
                    return t !== e && ((t = t || e).coordinate = e.coordinate,
                    t.draggable = !1,
                    t.displayPriority = e.memberAnnotations[0].displayPriority,
                    t.clusteringIdentifier = e.memberAnnotations[0].clusteringIdentifier,
                    Object.defineProperty(t, "memberAnnotations", {
                        enumerable: !0,
                        get: function() {
                            return this._impl.memberAnnotations
                        }
                    }),
                    Object.defineProperty(t._impl, "memberAnnotations", {
                        enumerable: !0,
                        value: e.memberAnnotations
                    })),
                    t.animates = e.memberAnnotations.some(function(t) {
                        return !t._impl.wasCollided
                    }),
                    t.selected = !1,
                    t
                },
                removedAnnotation: function(e) {
                    e.memberAnnotations || (this._previousClusters = this._previousClusters.filter(function(t) {
                        if (t.memberAnnotations.indexOf(e) < 0)
                            return !0;
                        this._annotationsController.removeAnyItem(t)
                    }, this))
                },
                mapWasDestroyed: function() {
                    this._annotationsController = null
                },
                performScheduledUpdate: function() {
                    if (this._annotationsController)
                        if (this._frameCounter = (this._frameCounter + 1) % 10,
                        1 === this._frameCounter) {
                            var t = this._needsUpdate();
                            if (t) {
                                this._changesSinceLastCollision = !1,
                                this._previousZoomLevel = this._zoomLevel,
                                this._previousRotation = this._rotation,
                                this._previousAnnotations = this._annotations.slice(),
                                this._locked = !0,
                                this._annotationsController.willUpdateCollisions(),
                                "region" === t && this._annotationsController.deselectClusterAnnotation(),
                                this._overlaps = [];
                                for (var e = 0, i = 0, n = this._annotations.length; i < n; ++i) {
                                    var o = this._annotations[i];
                                    if (o._impl.needsLayout)
                                        return this._frameCounter = 0,
                                        this._locked = !1,
                                        void l.scheduleOnNextFrame(this);
                                    o._impl.index = i,
                                    o._impl.occluded = !1,
                                    o._impl.previousCluster = o._impl.cluster,
                                    delete o._impl.cluster,
                                    o._impl.collisionMode !== c.CollisionMode.None && (o._impl.boundingBox = p(o),
                                    e = Math.max(e, o._impl.boundingBox.x2 - o._impl.boundingBox.x1))
                                }
                                var s, t = this._annotations.sort(u), a = {}, r = (t.forEach(function(t) {
                                    var e;
                                    t.selected || t._impl.collisionMode === c.CollisionMode.None || (e = t.clusteringIdentifier) && (a[e] ? a[e].push(t) : a[e] = [t])
                                }),
                                this._clusters);
                                for (s in this._clusters = [],
                                a)
                                    1 < a[s].length && (e = this._clusterAnnotationsWithMaxWidth(a[s], e));
                                r.forEach(function(t) {
                                    this._clusters.indexOf(t) < 0 && (g(t, !0),
                                    t.selected) && (t.selected = !1)
                                }, this),
                                this._collideAnnotationsAndClusters(t, e),
                                this._previousOverlaps = this._overlaps,
                                this._annotationsController.didUpdateCollisions(),
                                this._locked = !1
                            }
                        } else
                            l.scheduleOnNextFrame(this)
                },
                _clusterAnnotationsWithMaxWidth: function(t, e) {
                    for (var i = 0; i < t.length; ) {
                        var n = t[i];
                        if (n._impl.cluster)
                            ++i;
                        else {
                            var o = n._impl.boundingBox.x2
                              , s = [n]
                              , a = i + 1;
                            if (n.memberAnnotations && 0 < i)
                                for (var r = n._impl.boundingBox.x1 - e, a = i - 1; 0 < a && t[a]._impl.boundingBox.x1 >= r; )
                                    --a;
                            for (; a < t.length && t[a]._impl.boundingBox.x1 <= o; ++a) {
                                var l = t[a];
                                !l._impl.cluster && a !== i && this._annotationsOverlapExcludingSelected(n, l) && s.push(l)
                            }
                            if (1 < s.length) {
                                var s = s.reduce(function(t, e) {
                                    return e.memberAnnotations ? (t = t.concat(e.memberAnnotations),
                                    e._impl.cluster = !0,
                                    g(e, !0)) : t.push(e),
                                    t
                                }, []).sort(d)
                                  , h = this._clusterAnnotationForMemberAnnotations(s);
                                for (h._impl.occluded = !1,
                                h._impl.collisionMode !== c.CollisionMode.None && (h._impl.boundingBox = p(h),
                                e = Math.max(e, h._impl.boundingBox.x2 - h._impl.boundingBox.x1)),
                                delete h._impl.cluster,
                                a = 0; a < s.length; ++a)
                                    s[a]._impl.occluded = !0,
                                    s[a]._impl.cluster = h;
                                for (a = 0; a < t.length && t[a]._impl.boundingBox.x1 < h._impl.boundingBox.x1; )
                                    a += 1;
                                t.splice(a, 0, h),
                                i = Math.min(i + 1, a)
                            } else
                                ++i
                        }
                    }
                    return t.forEach(function(t) {
                        t.memberAnnotations && !t._impl.cluster && (this._clusters.push(t),
                        t.map || this._annotationsController.addItem(t))
                    }, this),
                    e
                },
                _collideAnnotationsAndClusters: function(t, e) {
                    for (var i = !1, n = [], o = 0, s = 0, a = t.length, r = this._clusters.length; o < a || s < r; ) {
                        var l = t[o]
                          , h = this._clusters[s];
                        l ? l._impl.cluster || l._impl.collisionMode === c.CollisionMode.None ? ++o : h && h._impl.boundingBox.x1 < l._impl.boundingBox.x1 ? (h._impl.isRequired() || (i = !0),
                        n.push(h),
                        ++s) : (l._impl.isRequired() || (i = !0),
                        n.push(l),
                        ++o) : (h._impl.isRequired() || (i = !0),
                        n.push(h),
                        ++s)
                    }
                    i && this._collideAnnotationsWithMaxWidth(n, e)
                },
                _collideAnnotationsWithMaxWidth: function(t, e) {
                    for (var i = [], n = 0, o = t.length; n < o; ++n)
                        for (var s = t[n], a = s._impl.boundingBox.x2, r = n + 1; r < o; ++r) {
                            var l = t[r];
                            if (l._impl.boundingBox.x1 > a)
                                break;
                            s._impl.isRequired() && l._impl.isRequired() || this._annotationsOverlap(s, l) && i.push(h(s, l) <= 0 ? [s, l] : [l, s])
                        }
                    i.sort(function(t, e) {
                        return h(t[0], e[0])
                    }).forEach(function(t) {
                        t[0]._impl.occluded || (t[1]._impl.occluded = !0)
                    })
                },
                _annotationsOverlapExcludingSelected: function(t, e) {
                    return !t.selected && !e.selected && this._annotationsOverlap(t, e)
                },
                _annotationsOverlap: function(t, e) {
                    if (t._impl.isLifted() || e._impl.isLifted())
                        return !1;
                    for (var i, n = d(t, e) <= 0 ? [t, e] : [e, t], o = 0, s = this._previousOverlaps.length; o < s && !i; ++o) {
                        var a = this._previousOverlaps[o];
                        a[0] === n[0] && a[1] === n[1] && (i = a)
                    }
                    r = i,
                    t = t._impl.boundingBox,
                    e = e._impl.boundingBox,
                    r && (t = m(t, 5),
                    e = m(e, 5)),
                    r = t;
                    var r, l = (t = e).x2 >= r.x1 && t.x1 <= r.x2 && t.y2 >= r.y1 && t.y1 <= r.y2 && (Object.prototype.hasOwnProperty.call(r, "r") ? Object.prototype.hasOwnProperty.call(t, "r") ? (e = r.cx - t.cx,
                    l = r.cy - t.cy,
                    e = Math.sqrt(e * e + l * l),
                    r.r + t.r >= e) : _(r, t) : !Object.prototype.hasOwnProperty.call(t, "r") || _(t, r));
                    return l && this._overlaps.push(n),
                    l
                },
                _clusterAnnotationForMemberAnnotations: function(t) {
                    var e, i, n, o, s, a = function(t, e) {
                        for (var i = 0, n = t.length; i < n; ++i) {
                            var o = t[i]
                              , s = e.length;
                            if (o.memberAnnotations.length === s) {
                                for (var a = 0; a < s && e[a] === o.memberAnnotations[a]; )
                                    a += 1;
                                if (a === s)
                                    return i
                            }
                        }
                        return -1
                    }(this._previousClusters, t);
                    return 0 <= a ? (e = this._previousClusters[a])._impl.resetNodeTransform() : (o = n = i = 0,
                    (a = t).forEach(function(t) {
                        i += t.coordinate.latitude;
                        t = r.wrapLongitude(t.coordinate.longitude) / 180 * Math.PI;
                        n += Math.cos(t),
                        o += Math.sin(t)
                    }),
                    a = a.length,
                    a = i / a,
                    s = 0 === n ? o < 0 ? -90 : 90 : 180 * Math.atan(o / n) / Math.PI + (n < 0 ? 180 : 0),
                    a = new r.Coordinate(a,s),
                    e = this._annotationsController.addCluster(new null(a,t)),
                    this._previousClusters.push(e)),
                    e
                },
                _needsUpdate: function() {
                    if (this._zoomLevel !== this._previousZoomLevel || this._rotation !== this._previousRotation)
                        return "region";
                    if (this._changesSinceLastCollision)
                        return "annotations";
                    var t = this._annotations.length;
                    if (this._previousAnnotations.length !== t)
                        return "annotations";
                    for (var e = 0; e < t; ++e)
                        if (this._annotations[e] !== this._previousAnnotations[e])
                            return "annotations";
                    return ""
                }
            },
            t.exports = o
        }
        ,
        3049: (t,e,i)=>{
            var n = i(462)
              , i = i(2221);
            function o(t) {
                n.ImageNode.call(this),
                this._annotation = t
            }
            o.prototype = i.inheritPrototype(n.ImageNode, o, {
                get position() {
                    return this._annotation.nodePosition()
                }
            }),
            t.exports = o
        }
        ,
        4782: (t,e,i)=>{
            var n = i(811);
            function o(t) {
                this._annotationsController = t
            }
            o.prototype = {
                mapFeatureDidSelect: function(t) {
                    var e = this._annotationsController.map
                      , t = null.fromMapFeatureRegion(t)
                      , i = e.annotationForMapFeature;
                    (t = "function" == typeof i ? n(i, e.public, [t]) || t : t)._impl.selected = !0,
                    this._annotationsController.addItem(t, 0),
                    t._impl.isMapFeature = !0
                },
                mapTypeDidChange: function() {
                    var t = this._annotationsController.selectedItem;
                    t && t._impl.isMapFeature && 0 <= this._annotationsController.items.indexOf(t) && this._annotationsController.removeItem(t)
                },
                annotationSelectionDidChange: function(t) {
                    !t.selected && t._impl.isMapFeature && 0 <= this._annotationsController.items.indexOf(t) && this._annotationsController.removeItem(t)
                }
            },
            t.exports = o
        }
        ,
        8187: (t,e,i)=>{
            var l, h = i(4701), c = i(5479).MapPoint, d = i(8756), u = i(3045);
            window.document && (l = i(7768));
            function n(t) {
                this.map = t,
                window.document && (this.node = new l.Node(h.htmlElement("div", {
                    class: "mk-map-features-container"
                })),
                this._shadowRootNode = h.addShadowRootChild(this.node, i(433)),
                this._featuresContainer = this._shadowRootNode.addChild(new l.Node(h.htmlElement("div", {
                    class: "mk-map-features"
                }))))
            }
            n.prototype = {
                constructor: n,
                update: function(t, e) {
                    this._featuresContainer.children = [];
                    for (var i = 0; i < t.length; i++) {
                        var n = t[i]
                          , o = n.rects[0]
                          , s = e.transformMapPoint(new c(n.position[0],n.position[1]))
                          , a = o.size
                          , r = s.x + o.offset[0]
                          , s = s.y + o.offset[1]
                          , o = (a[0] < 44 && (r -= (44 - a[0]) / 2,
                        a[0] = 44),
                        a[1] < 44 && (s -= (44 - a[1]) / 2,
                        a[1] = 44),
                        new l.Node(h.htmlElement("div", {
                            "aria-label": n.title
                        })));
                        o.position = new d(r,s),
                        o.size = new u(a[0],a[1]),
                        this._featuresContainer.addChild(o)
                    }
                }
            },
            t.exports = n
        }
        ,
        811: t=>{
            var o = "function" == typeof ErrorEvent;
            t.exports = function(t, e, i, n) {
                if (!o)
                    return t.apply(e, i);
                try {
                    return t.apply(e, i)
                } catch (t) {
                    console.error(t);
                    e = new ErrorEvent("error",{
                        message: t.message || t.toString() || "(Unknown error)",
                        filename: t.fileName || t.stack || "(Unknown filename)",
                        lineno: t.lineNumber,
                        colno: t.columnNumber,
                        error: t
                    });
                    return window.dispatchEvent(e),
                    n
                }
            }
        }
        ,
        5598: t=>{
            t.exports = function(t, e) {
                return t instanceof e || (console.warn("[MapKit] Unexpected object instance. Did you forget to `new`?"),
                "function" == typeof console.trace && console.trace(),
                !1)
            }
        }
        ,
        3191: (t,e,i)=>{
            var a = i(2221)
              , r = Math.random().toString(36);
            t.exports = function(t) {
                if (t !== r) {
                    var e = "[MapKit] Authorization token is invalid.";
                    if ("string" == typeof (r = t)) {
                        var i = t.split(".");
                        if (3 === i.length) {
                            try {
                                i.pop(),
                                i = i.map(function(t) {
                                    return JSON.parse(a.atob(t))
                                })
                            } catch (t) {
                                return void console.warn(e)
                            }
                            "alg"in i[0] ? "ES256" !== i[0].alg && console.warn('[MapKit] Authorization token has incorrect "alg" value.') : console.warn('[MapKit] Authorization token has no "alg" value.'),
                            "typ"in i[0] ? "JWT" !== i[0].typ && console.warn('[MapKit] Authorization token has incorrect "typ" value.') : console.warn('[MapKit] Authorization token has no "typ" value.'),
                            "kid"in i[0] || console.warn('[MapKit] Authorization token has no "kid" value.');
                            var n, o = Date.now(), s = 1e3 * parseInt(i[1].iat);
                            "iat"in i[1] && !isNaN(s) ? o + 36e5 < s && console.warn('[MapKit] Authorization token may have an "iat" value that is in the future (' + new Date(s) + ").") : console.warn('[MapKit] Authorization token has no "iat" value.'),
                            "exp"in i[1] ? (n = 1e3 * parseInt(i[1].exp)) < o || isNaN(n) ? console.warn('[MapKit] Authorization token may be expired according to its "exp" value.') : o + 31536e6 < n && console.warn("[MapKit] Authorization token with expiration date greater than 1 year is not recommended in production environments.") : isNaN(s) || console.warn("[MapKit] Authorization token (created on " + new Date(s) + ") without an expiration is not recommended in production environments."),
                            "origin"in i[1] || console.warn("[MapKit] Authorization token without origin restriction is not recommended in production environments.")
                        } else
                            console.warn(e)
                    } else
                        console.warn(e)
                }
            }
        }
        ,
        7809: (t,e,i)=>{
            var n = {
                mapkit: {}
            }
              , o = i(3849)
              , s = i(1646)
              , a = i(4461);
            [o, i(9398), a, s].forEach(function(e) {
                Object.keys(e).forEach(function(t) {
                    "mapkit" !== t ? n[t] = e[t] : Object.keys(e.mapkit).forEach(function(t) {
                        n.mapkit[t] = e.mapkit[t]
                    })
                })
            }),
            t.exports = n
        }
        ,
        2697: (t,e,i)=>{
            i(9348),
            t.exports = {
                AnnotationsController: i(1194),
                MapFeaturesLayerController: i(8187),
                LayerItemsController: i(9614),
                ItemCollection: i(3559),
                MapFeatureType: i(9467),
                mapkit: {
                    MapFeatureType: i(9467),
                    Annotation: i(7415)
                }
            }
        }
        ,
        3276: (t,e,i)=>{
            t.exports = function(t) {
                t.loadAll = function() {
                    var t = i(7809);
                    this._chunkLoaded(t, this._dispatchLoadEndEvent.bind(this, ["all"]))
                }
            }
        }
        ,
        7664: (t,e,i)=>{
            var n = i(6426)
              , i = {
                Libraries: [],
                Events: {
                    LOAD: "load",
                    LOADEND: "loadend",
                    LOAD_ERROR: "load-error"
                },
                jsModules: {
                    mapkit: {}
                },
                _chunkLoaded: function(e, t) {
                    Object.keys(e).forEach(function(t) {
                        "mapkit" !== t ? this.jsModules[t] = e[t] : Object.keys(e.mapkit).forEach(function(t) {
                            this.jsModules.mapkit[t] = e.mapkit[t]
                        }
                        .bind(this))
                    }
                    .bind(this));
                    var i = new n.Event(this.Events.LOAD);
                    i.jsModules = e,
                    this.dispatchEvent(i),
                    t && t()
                },
                _dispatchLoadEndEvent: function(t) {
                    var e = new n.Event(this.Events.LOADEND);
                    e.libraryNames = t,
                    this.dispatchEvent(e)
                }
            };
            n.EventTarget(i),
            t.exports = i
        }
        ,
        3849: (t,e,i)=>{
            var n = {
                mapkit: {}
            };
            [i(9348), i(7537), i(2697), i(2759)].forEach(function(e) {
                Object.keys(e).forEach(function(t) {
                    "mapkit" !== t ? n[t] = e[t] : Object.keys(e.mapkit).forEach(function(t) {
                        n.mapkit[t] = e.mapkit[t]
                    })
                })
            }),
            t.exports = n
        }
        ,
        4461: (t,e,i)=>{
            i(9348),
            t.exports = {
                mapkit: {
                    importGeoJSON: null
                }
            }
        }
        ,
        9398: (t,e,i)=>{
            i(9348),
            t.exports = {
                mapkit: {
                    PinAnnotation: null
                }
            }
        }
        ,
        9348: (t,e,i)=>{
            var n = i(863)
              , o = i(5479);
            t.exports = {
                MapInternal: i(5403),
                PointOfInterestFilter: n,
                css: i(1389),
                utils: i(4701),
                mapkit: {
                    FeatureVisibility: i(1840).FeatureVisibility,
                    CoordinateRegion: o.CoordinateRegion,
                    CoordinateSpan: o.CoordinateSpan,
                    Coordinate: o.Coordinate,
                    BoundingRegion: o.BoundingRegion,
                    MapPoint: o.MapPoint,
                    MapRect: o.MapRect,
                    MapSize: o.MapSize,
                    Padding: i(7016),
                    CameraZoomRange: o.CameraZoomRange,
                    Map: i(2488),
                    PointOfInterestCategory: i(9648),
                    PointOfInterestFilter: n.exposedConstructor
                }
            }
        }
        ,
        7537: (t,e,i)=>{
            i(9348),
            t.exports = {
                OverlaysController: i(562),
                LayerItemsController: i(9614),
                ItemCollection: i(3559),
                mapkit: {
                    TileOverlay: i(8086).TileOverlay
                }
            }
        }
        ,
        1646: (t,e,i)=>{
            var n = i(863)
              , o = i(5479);
            t.exports = {
                PointOfInterestFilter: n,
                mapkit: {
                    CoordinateRegion: o.CoordinateRegion,
                    CoordinateSpan: o.CoordinateSpan,
                    Coordinate: o.Coordinate,
                    BoundingRegion: o.BoundingRegion,
                    MapPoint: o.MapPoint,
                    MapRect: o.MapRect,
                    MapSize: o.MapSize,
                    PointOfInterestCategory: i(9648),
                    PointOfInterestFilter: n.exposedConstructor
                }
            }
        }
        ,
        2759: (t,e,i)=>{
            i(9348),
            i(2697),
            i(7537),
            t.exports = {
                AnnotationsController: i(1194),
                MapFeaturesLayerController: i(8187),
                OverlaysController: i(562),
                LayerItemsController: i(9614),
                ItemCollection: i(3559),
                mapkit: {}
            }
        }
        ,
        9154: t=>{
            function e(t, e) {
                this.items = t,
                this.data = e
            }
            e.prototype = {
                constructor: e,
                get data() {
                    return this._data
                },
                set data(t) {
                    this._data = t
                },
                get items() {
                    return this._items
                },
                set items(t) {
                    this._items = t instanceof Array ? t : null === t ? [] : [t]
                },
                getFlattenedItemList: function() {
                    return this.items.reduce(function(t, e) {
                        e = "function" == typeof e.getFlattenedItemList ? e.getFlattenedItemList(e) : e;
                        return t.concat(e)
                    }, [])
                }
            },
            t.exports = e
        }
        ,
        3559: (t,e,i)=>{
            var n = i(9154);
            function o(t, e) {
                Object.defineProperty(this, "_impl", {
                    value: new n(t,e)
                })
            }
            o.prototype = {
                get data() {
                    return this._impl.data
                },
                set data(t) {
                    this._impl.data = t
                },
                get items() {
                    return this._impl._items
                },
                set items(t) {
                    this._impl.items = t
                },
                getFlattenedItemList: function() {
                    return this._impl.getFlattenedItemList()
                }
            },
            t.exports = o
        }
        ,
        5869: (t,e,i)=>{
            var n = i(1207);
            function o() {
                n.call(this)
            }
            o.prototype = Object.create(n.prototype),
            Object.defineProperty(o.prototype, "constructor", {
                enumerable: !0,
                writable: !0,
                value: o
            });
            i = new o;
            t.exports = i
        }
        ,
        1840: (t,e,i)=>{
            var i = i(3045)
              , n = {
                blue: [0, 122, 255],
                green: [52, 199, 89],
                indigo: [88, 86, 214],
                orange: [255, 149, 0],
                pink: [255, 45, 85],
                purple: [175, 82, 222],
                red: [255, 59, 48],
                teal: [90, 200, 250],
                yellow: [255, 204, 0],
                gray: [142, 142, 147],
                gray2: [174, 174, 178],
                gray3: [199, 199, 204],
                gray4: [209, 209, 214],
                gray5: [229, 229, 234],
                gray6: [242, 242, 247]
            };
            t.exports = {
                MapTypes: {
                    Satellite: "satellite",
                    Hybrid: "hybrid",
                    MutedStandard: "mutedStandard",
                    Standard: "standard"
                },
                Distances: {
                    Adaptive: "adaptive",
                    Metric: "metric",
                    Imperial: "imperial"
                },
                LoadPriorities: {
                    LandCover: "LandCover",
                    PointsOfInterest: "PointsOfInterest",
                    None: null
                },
                Emphasis: {
                    Muted: "muted",
                    Standard: "standard"
                },
                FeatureVisibility: {
                    Adaptive: "adaptive",
                    Hidden: "hidden",
                    Visible: "visible"
                },
                SystemColors: {
                    default: n,
                    light: n,
                    dark: {
                        blue: [10, 132, 255],
                        green: [48, 209, 88],
                        indigo: [94, 92, 230],
                        orange: [255, 159, 10],
                        pink: [255, 55, 95],
                        purple: [191, 90, 242],
                        red: [255, 69, 58],
                        teal: [100, 210, 255],
                        yellow: [255, 214, 10],
                        gray: [142, 142, 147],
                        gray2: [99, 99, 102],
                        gray3: [72, 72, 74],
                        gray4: [58, 58, 60],
                        gray5: [44, 44, 46],
                        gray6: [28, 28, 30]
                    }
                },
                MarkerAnnotationFontFamily: '"SFProRegular", "-apple-system", "BlinkMacSystemFont", "Helvetica Neue", Helvetica, Arial, sans-serif',
                MapTiledLayerMinZoomLevel: 2,
                MapTiledLayerMaxZoomLevel: 20,
                ZoomTypes: {
                    Button: "BUTTON",
                    Scroll: "SCROLL",
                    DoubleTap: "DOUBLE_TAP",
                    Pinch: "PINCH"
                },
                MapSizes: {
                    minimumSizeToShowControls: new i(306,220),
                    minimumSizeToShowLogo: new i(200,100),
                    minimumSizeToShowLogoWithReducedMargin: new i(100,100)
                },
                MaximumRestrictedRotation: 30
            }
        }
        ,
        1867: t=>{
            t.exports = ".mk-rotation-control,.mk-top-right-controls-container:not(.mk-pill-pressed):not(.mk-pill-focus):not(:empty),.mk-zoom-controls{box-shadow:0 0 0 .5px rgba(0,0,0,.05)}.mk-focus .mk-zoom-in,.mk-focus .mk-zoom-out,.mk-pill-focus .mk-map-type-control,.mk-pill-focus .mk-user-location-control,.mk-pill-pressed .mk-map-type-control,.mk-pill-pressed .mk-user-location-control,.mk-pill-pressed .mk-zoom-in,.mk-pill-pressed .mk-zoom-out,.mk-rotation-control,.mk-top-right-controls-container:not(.mk-pill-pressed):not(.mk-pill-focus):not(:empty),.mk-zoom-controls:not(.mk-pill-pressed):not(.mk-focus){background-color:#fff}.mk-map-type-control.mk-pressed,.mk-rotation-control.mk-pressed,.mk-user-location-control.mk-pressed,.mk-zoom-controls .mk-zoom-in.mk-pressed:not(.mk-disabled),.mk-zoom-controls .mk-zoom-out.mk-pressed:not(.mk-disabled){background-color:#e5e5e5}.mk-legal-controls.mk-focus,.mk-map-type-control:focus,.mk-rotation-control.mk-focus,.mk-user-location-control:focus,.mk-zoom-controls.mk-focus .mk-zoom-in:focus,.mk-zoom-controls.mk-focus .mk-zoom-out:focus{background-color:#cce5ff}.mk-map-type-control.mk-focus.mk-pressed,.mk-rotation-control.mk-focus.mk-pressed,.mk-user-location-control.mk-focus.mk-pressed,.mk-zoom-controls.mk-focus .mk-zoom-in.mk-pressed:focus,.mk-zoom-controls.mk-focus .mk-zoom-out.mk-pressed:focus{background-color:#7fbdff}.mk-legal-controls.mk-focus,.mk-map-type-control:focus,.mk-pill-focus .mk-map-type-control,.mk-pill-focus .mk-user-location-control,.mk-rotation-control.mk-focus,.mk-user-location-control:focus,.mk-zoom-controls.mk-focus{box-shadow:0 0 0 2px #007cff}.mk-zoom-controls.mk-focus .mk-divider{border-left:2px solid #007cff}.mk-map-type-control .mk-icon,.mk-user-location-control .mk-icon,.mk-zoom-controls .mk-icon{fill:#000}:host(.mk-controls-container) .mk-popover{background-color:#efefef;color:#000;border-color:transparent;box-shadow:0 5px 10px 0 rgba(0,0,0,.3)}:host(.mk-controls-container) .mk-popover-arrow{fill:#efefef}.mk-error-message{color:#333}.mk-error-message a{color:#007aff}.mk-error-message a:visited{color:#af52de}.mk-legal-controls .mk-legal{color:rgba(0,0,0,.7);text-shadow:0 0 1px rgba(255,255,255,.85)}.mk-rotation-control .mk-heading{color:#000}.mk-popover .mk-map-type-button-control{box-shadow:0 0 0 .5px rgb(0,0,0,.14)}.mk-popover .mk-map-type-button-control.mk-selected{box-shadow:0 0 0 2px #007cff}.mk-popover.mk-focus-style .mk-map-type-button-control:focus{box-shadow:0 0 0 4px rgba(0,124,255,.4)}.mk-popover.mk-focus-style .mk-map-type-button-control.mk-selected:focus{box-shadow:0 0 0 2px #007cff,0 0 0 4px rgba(0,124,255,.4)}.mk-map-type-button-control.mk-pressed::after{background-color:rgba(0,0,0,.25)}@supports ((backdrop-filter:blur(30px)) or (-webkit-backdrop-filter:blur(30px))){.mk-focus .mk-zoom-in,.mk-focus .mk-zoom-out,.mk-pill-focus .mk-map-type-control,.mk-pill-focus .mk-user-location-control,.mk-pill-pressed .mk-map-type-control,.mk-pill-pressed .mk-user-location-control,.mk-pill-pressed .mk-zoom-in,.mk-pill-pressed .mk-zoom-out,.mk-rotation-control,.mk-top-right-controls-container:not(.mk-pill-pressed):not(.mk-pill-focus):not(:empty),.mk-zoom-controls:not(.mk-pill-pressed):not(.mk-focus){background-color:rgba(255,255,255,.75)}.mk-map-type-control.mk-pressed,.mk-rotation-control.mk-pressed,.mk-user-location-control.mk-pressed,.mk-zoom-controls .mk-zoom-in.mk-pressed:not(.mk-disabled),.mk-zoom-controls .mk-zoom-out.mk-pressed:not(.mk-disabled){background-color:rgba(229,229,229,.6)}.mk-legal-controls.mk-focus,.mk-map-type-control.mk-focus,.mk-rotation-control.mk-focus,.mk-user-location-control.mk-focus,.mk-zoom-controls.mk-focus .mk-zoom-in:focus,.mk-zoom-controls.mk-focus .mk-zoom-out:focus{background-color:rgba(204,229,255,.6)}.mk-map-type-control.mk-focus.mk-pressed,.mk-rotation-control.mk-focus.mk-pressed,.mk-user-location-control.mk-focus.mk-pressed,.mk-zoom-controls.mk-focus .mk-zoom-in.mk-pressed:focus,.mk-zoom-controls.mk-focus .mk-zoom-out.mk-pressed:focus{background-color:rgb(127,189,255,.6)}}:host(.mk-dark-mode) .mk-rotation-control,:host(.mk-dark-mode) .mk-top-right-controls-container:not(.mk-pill-pressed):not(.mk-pill-focus):not(:empty),:host(.mk-dark-mode) .mk-zoom-controls{box-shadow:0 0 0 .5px rgba(255,255,255,.05)}:host(.mk-dark-mode) .mk-focus .mk-zoom-in,:host(.mk-dark-mode) .mk-focus .mk-zoom-out,:host(.mk-dark-mode) .mk-pill-focus .mk-map-type-control,:host(.mk-dark-mode) .mk-pill-focus .mk-user-location-control,:host(.mk-dark-mode) .mk-pill-pressed .mk-map-type-control,:host(.mk-dark-mode) .mk-pill-pressed .mk-user-location-control,:host(.mk-dark-mode) .mk-pill-pressed .mk-zoom-in,:host(.mk-dark-mode) .mk-pill-pressed .mk-zoom-out,:host(.mk-dark-mode) .mk-rotation-control,:host(.mk-dark-mode) .mk-top-right-controls-container:not(.mk-pill-pressed):not(.mk-pill-focus):not(:empty),:host(.mk-dark-mode) .mk-zoom-controls:not(.mk-pill-pressed):not(.mk-focus){background-color:#121212}:host(.mk-dark-mode) .mk-map-type-control.mk-pressed,:host(.mk-dark-mode) .mk-user-location-control.mk-pressed,:host(.mk-dark-mode) .mk-zoom-controls .mk-zoom-in.mk-pressed:not(.mk-disabled),:host(.mk-dark-mode) .mk-zoom-controls .mk-zoom-out.mk-pressed:not(.mk-disabled){background-color:#2a2a2a}:host(.mk-dark-mode) .mk-legal-controls.mk-focus,:host(.mk-dark-mode) .mk-map-type-control.mk-focus,:host(.mk-dark-mode) .mk-rotation-control.mk-focus,:host(.mk-dark-mode) .mk-user-location-control.mk-focus,:host(.mk-dark-mode) .mk-zoom-controls.mk-focus .mk-zoom-in:focus,:host(.mk-dark-mode) .mk-zoom-controls.mk-focus .mk-zoom-out:focus{background-color:#0c3159}:host(.mk-dark-mode) .mk-map-type-control.mk-focus.mk-pressed,:host(.mk-dark-mode) .mk-rotation-control.mk-focus.mk-pressed,:host(.mk-dark-mode) .mk-user-location-control.mk-focus.mk-pressed,:host(.mk-dark-mode) .mk-zoom-controls.mk-focus .mk-zoom-in.mk-pressed:focus,:host(.mk-dark-mode) .mk-zoom-controls.mk-focus .mk-zoom-out.mk-pressed:focus{background-color:#0366cf}:host(.mk-dark-mode) .mk-legal-controls.mk-focus,:host(.mk-dark-mode) .mk-map-type-control:focus,:host(.mk-dark-mode) .mk-pill-focus .mk-map-type-control,:host(.mk-dark-mode) .mk-pill-focus .mk-user-location-control,:host(.mk-dark-mode) .mk-rotation-control.mk-focus,:host(.mk-dark-mode) .mk-user-location-control:focus,:host(.mk-dark-mode) .mk-zoom-controls.mk-focus{box-shadow:0 0 0 2px #007cff}:host(.mk-dark-mode) .mk-map-type-control .mk-icon,:host(.mk-dark-mode) .mk-user-location-control .mk-icon,:host(.mk-dark-mode) .mk-zoom-controls .mk-icon{fill:#fff}:host(.mk-controls-container.mk-dark-mode) .mk-popover{background-color:#363636;color:#fff;border-color:#5a5c64}:host(.mk-controls-container.mk-dark-mode) .mk-popover-arrow{fill:#363636}:host(.mk-controls-container.mk-dark-mode) .mk-popover-arrow path{stroke:#5a5c64}:host(.mk-dark-mode) .mk-error-message{color:rgba(255,255,255,.85)}:host(.mk-dark-mode) .mk-error-message a{color:#0a84ff}:host(.mk-dark-mode) .mk-error-message a:visited{color:#bf5af2}:host(.mk-dark-mode) .mk-legal-controls .mk-legal{color:rgba(255,255,255,.9);text-shadow:0 0 1px rgba(0,0,0,.5),0 0 10px rgba(0,0,0,1)}:host(.mk-dark-mode) .mk-rotation-control .mk-heading{color:#fff}:host(.mk-dark-mode) .mk-popover .mk-map-type-button-control:not(:focus):not(.mk-selected),:host(.mk-dark-mode) .mk-popover:not(.mk-focus-style) .mk-map-type-button-control:focus:not(.mk-selected){box-shadow:0 0 0 .5px rgb(255,255,255,.3)}@supports ((backdrop-filter:blur(30px)) or (-webkit-backdrop-filter:blur(30px))){:host(.mk-dark-mode) .mk-focus .mk-zoom-in,:host(.mk-dark-mode) .mk-focus .mk-zoom-out,:host(.mk-dark-mode) .mk-pill-focus .mk-map-type-control,:host(.mk-dark-mode) .mk-pill-focus .mk-user-location-control,:host(.mk-dark-mode) .mk-pill-pressed .mk-map-type-control,:host(.mk-dark-mode) .mk-pill-pressed .mk-user-location-control,:host(.mk-dark-mode) .mk-pill-pressed .mk-zoom-in,:host(.mk-dark-mode) .mk-pill-pressed .mk-zoom-out,:host(.mk-dark-mode) .mk-rotation-control,:host(.mk-dark-mode) .mk-top-right-controls-container:not(.mk-pill-pressed):not(.mk-pill-focus):not(:empty),:host(.mk-dark-mode) .mk-zoom-controls:not(.mk-pill-pressed):not(.mk-focus){background-color:rgba(18,18,18,.6)}:host(.mk-dark-mode) .mk-map-type-control.mk-pressed,:host(.mk-dark-mode) .mk-rotation-control.mk-pressed,:host(.mk-dark-mode) .mk-type-control.mk-pressed,:host(.mk-dark-mode) .mk-user-location-control.mk-pressed,:host(.mk-dark-mode) .mk-zoom-controls .mk-zoom-in.mk-pressed:not(.mk-disabled),:host(.mk-dark-mode) .mk-zoom-controls .mk-zoom-out.mk-pressed:not(.mk-disabled){background-color:rgba(42,42,42,.6)}:host(.mk-dark-mode) .mk-legal-controls.mk-focus,:host(.mk-dark-mode) .mk-map-type-control.mk-focus,:host(.mk-dark-mode) .mk-rotation-control.mk-focus,:host(.mk-dark-mode) .mk-user-location-control.mk-focus,:host(.mk-dark-mode) .mk-zoom-controls.mk-focus .mk-zoom-in:focus,:host(.mk-dark-mode) .mk-zoom-controls.mk-focus .mk-zoom-out:focus{background-color:rgba(12,49,89,.6)}:host(.mk-dark-mode) .mk-map-type-control.mk-focus.mk-pressed,:host(.mk-dark-mode) .mk-rotation-control.mk-focus.mk-pressed,:host(.mk-dark-mode) .mk-user-location-control.mk-focus.mk-pressed,:host(.mk-dark-mode) .mk-zoom-controls.mk-focus .mk-zoom-in.mk-pressed:focus,:host(.mk-dark-mode) .mk-zoom-controls.mk-focus .mk-zoom-out.mk-pressed:focus{background-color:rgb(3,102,207,.6)}}"
        }
        ,
        4378: t=>{
            t.exports = '@media (inverted-colors){:host(.mk-controls-container) img{filter:initial}}:host(.mk-controls-container) *{box-sizing:content-box}:host(.mk-controls-container) ::selection{background:0 0}.mk-error-message{font-family:"-apple-system-font","Helvetica Neue",Helvetica,Arial,sans-serif;font-size:13px;width:200px;padding:10px;pointer-events:auto}.mk-error-support{white-space:nowrap}:host(.mk-controls-container) :focus{outline:0}.mk-logo-control .mk-logo{vertical-align:bottom;width:auto}:host(.mk-controls-container) div.mk-logo-control img.mk-logo{width:82px;height:24px;margin:0}:host(.mk-controls-container) div.mk-logo-control img.mk-logo.mk-logo-autonavi.mk-logo-autonavi{width:68px;height:45px}.mk-legal-controls{height:16px;padding:0 9px;margin:2px;border-radius:5px;pointer-events:auto;z-index:1;text-align:center;vertical-align:middle;line-height:12px;cursor:pointer}.mk-legal-controls .mk-legal{display:inline-block;font:9px "-apple-system-font","Helvetica Neue",Helvetica,Arial,sans-serif;font-weight:500;text-decoration:underline;pointer-events:none;white-space:nowrap}.mk-zoom-controls{width:48px;height:24px;border-radius:9px;pointer-events:auto}.mk-zoom-controls .mk-zoom-in .mk-icon,.mk-zoom-controls .mk-zoom-out .mk-icon{pointer-events:none;opacity:.55}.mk-zoom-controls .mk-zoom-in.mk-pressed .mk-icon,.mk-zoom-controls .mk-zoom-in:focus .mk-icon,.mk-zoom-controls .mk-zoom-out.mk-pressed .mk-icon,.mk-zoom-controls .mk-zoom-out:focus .mk-icon{opacity:.85}@media not all and (hover:none){.mk-zoom-controls .mk-zoom-in:hover .mk-icon,.mk-zoom-controls .mk-zoom-out:hover .mk-icon{opacity:.85}}.mk-zoom-controls .mk-zoom-in.mk-disabled .mk-icon,.mk-zoom-controls .mk-zoom-out.mk-disabled .mk-icon{opacity:.2}.mk-zoom-controls .mk-zoom-in,.mk-zoom-controls .mk-zoom-out{position:absolute;z-index:2;width:24px;height:24px;cursor:pointer}.mk-zoom-controls .mk-divider{position:absolute;left:23px;width:2px;height:24px;box-sizing:border-box;z-index:100}.mk-top-right-controls-container{border-radius:9px;height:24px}:host(.mk-controls-container) .mk-map-type-control,:host(.mk-controls-container) .mk-user-location-control{cursor:pointer;height:24px;width:45px;pointer-events:auto;display:inline-block;position:relative}:host(.mk-controls-container) .mk-user-location-control .mk-icon{position:absolute;left:0;height:24px;width:45px;transition:transform .2s ease-in-out}:host(.mk-controls-container) .mk-pill-focus .mk-map-type-control,:host(.mk-controls-container) .mk-pill-focus .mk-user-location-control{width:44px}:host(.mk-controls-container) .mk-user-location-control .mk-scaled-out{transform:scale(0)}:host(.mk-controls-container) .mk-user-location-control .mk-icon.mk-icon-waiting rect{animation:.8s infinite mk-spinner}:host(.mk-controls-container) .mk-user-location-control .mk-icon.mk-icon-waiting rect:nth-child(2){animation-delay:-.1s}:host(.mk-controls-container) .mk-user-location-control .mk-icon.mk-icon-waiting rect:nth-child(3){animation-delay:-.2s}:host(.mk-controls-container) .mk-user-location-control .mk-icon.mk-icon-waiting rect:nth-child(4){animation-delay:-.3s}:host(.mk-controls-container) .mk-user-location-control .mk-icon.mk-icon-waiting rect:nth-child(5){animation-delay:-.4s}:host(.mk-controls-container) .mk-user-location-control .mk-icon.mk-icon-waiting rect:nth-child(6){animation-delay:-.5s}:host(.mk-controls-container) .mk-user-location-control .mk-icon.mk-icon-waiting rect:nth-child(7){animation-delay:-.6s}:host(.mk-controls-container) .mk-user-location-control .mk-icon.mk-icon-waiting rect:nth-child(8){animation-delay:-.7s}@keyframes mk-spinner{0%{opacity:1}88%{opacity:.15}}:host(.mk-controls-container) .mk-map-type-control .mk-icon,:host(.mk-controls-container) .mk-user-location-control .mk-icon{pointer-events:none;opacity:.55}:host(.mk-controls-container) .mk-map-type-control.mk-pressed .mk-icon,:host(.mk-controls-container) .mk-map-type-control:focus .mk-icon,:host(.mk-controls-container) .mk-map-type-control:hover .mk-icon,:host(.mk-controls-container) .mk-user-location-control.mk-pressed .mk-icon,:host(.mk-controls-container) .mk-user-location-control:focus .mk-icon,:host(.mk-controls-container) .mk-user-location-control:hover .mk-icon{opacity:.85}@media (hover:none){:host(.mk-controls-container) .mk-map-type-control:hover:not(.mk-pressed):not(:focus) .mk-icon,:host(.mk-controls-container) .mk-user-location-control:hover:not(.mk-pressed):not(:focus) .mk-icon{opacity:.55}}:host(.mk-controls-container) .mk-popover{visibility:hidden;transform:scale(.5);opacity:0;border-radius:10px;transition:.2s opacity cubic-bezier(.25,.1,.25,1),.2s visibility step-end,.2s transform step-end;will-change:transform,opacity,visibility;border-width:1px;border-style:solid;cursor:default}:host(.mk-controls-container) .mk-popover.mk-shown{visibility:visible;pointer-events:auto;transform:none;opacity:1;transition:.2s transform cubic-bezier(.25,.1,.25,1.3),.2s opacity cubic-bezier(.25,.1,.25,1.3)}:host(.mk-controls-container) .mk-popover-arrow path{stroke-width:1px}:host(.mk-controls-container) .mk-map-type-popover{width:241px;padding:20px 20px 0 20px}:host(.mk-controls-container) .mk-map-type-popover>div{width:67px;display:inline-block}:host(.mk-controls-container) .mk-map-type-label{margin-top:10px;margin-bottom:17px;text-align:center;font:13px/16px "-apple-system-font",HelveticaNeue-Medium,Helvetica,Arial,sans-serif}.mk-map-type-button-control{position:relative;cursor:pointer;width:65px;height:52px;border-radius:8px;overflow:hidden;margin:1px}.mk-map-type-button-control img{width:65px;height:52px}.mk-map-type-button-control::after{content:"";position:absolute;width:65px;height:52px;top:0;left:0}:host(.mk-controls-container) .mk-map-type-button-control img.mk-dark-icon,:host(.mk-controls-container.mk-color-scheme-dark) .mk-map-type-button-control img.mk-light-icon{display:none}:host(.mk-controls-container.mk-color-scheme-dark) .mk-map-type-button-control img.mk-dark-icon{display:inline}.mk-style-helper{opacity:0;pointer-events:none}.mk-rotation-control{width:48px;height:48px;cursor:-webkit-grab;cursor:grab;pointer-events:auto;border-radius:24px;overflow:hidden;line-height:0;transition:opacity .1s cubic-bezier(.19,1,.22,1)}.mk-rotation-control.mk-pressed{cursor:-webkit-grabbing;cursor:grabbing}@supports ((backdrop-filter:blur(30px)) or (-webkit-backdrop-filter:blur(30px))){.mk-focus .mk-zoom-in,.mk-focus .mk-zoom-out,.mk-legal-controls.mk-focus,.mk-pill-focus .mk-map-type-control,.mk-pill-focus .mk-user-location-control,.mk-pill-pressed .mk-map-type-control,.mk-pill-pressed .mk-user-location-control,.mk-pill-pressed .mk-zoom-in,.mk-pill-pressed .mk-zoom-out,.mk-rotation-control,.mk-top-right-controls-container:not(.mk-pill-pressed):not(.mk-pill-focus):not(:empty),.mk-zoom-controls:not(.mk-pill-pressed):not(.mk-focus){-webkit-backdrop-filter:blur(30px);backdrop-filter:blur(30px)}}.mk-rotation-control>.mk-rotation-wrapper{width:48px;height:48px;position:absolute;will-change:transform;overflow:hidden}.mk-rotation-control>.mk-rotation-wrapper>img{width:96px;height:96px;position:absolute}.mk-rotation-control.mk-focus>.mk-rotation-wrapper>img,.mk-rotation-control.mk-pressed>.mk-rotation-wrapper>img,.mk-rotation-control>.mk-rotation-wrapper:hover>img{left:-48px}:host(.mk-dark-mode) .mk-rotation-control>.mk-rotation-wrapper>img{top:-48px}.mk-rotation-control .mk-heading{font:15.5px "-apple-system-font",HelveticaNeue-Medium,Helvetica,Arial,sans-serif;font-weight:500;line-height:19px;position:absolute;top:14.5px;left:0;width:100%;overflow:hidden;text-overflow:clip;text-align:center;opacity:.55}.mk-rotation-control.mk-focus .mk-heading,.mk-rotation-control.mk-pressed .mk-heading,.mk-rotation-control:hover .mk-heading{opacity:.85}@media (hover:none){.mk-rotation-control:not(.mk-focus):not(.mk-pressed)>.mk-rotation-wrapper:hover{background-position-x:0}.mk-rotation-control:not(.mk-focus):not(.mk-pressed):hover .mk-heading{opacity:.55}}.mk-rotation-control .mk-rotation-slider{position:absolute;left:0;width:100%;height:15px;top:-30px}:host(.mk-controls-container.mk-dragging-annotation) .mk-legal-controls,:host(.mk-controls-container.mk-dragging-annotation) .mk-map-type-control,:host(.mk-controls-container.mk-dragging-annotation) .mk-rotation-control,:host(.mk-controls-container.mk-dragging-annotation) .mk-rotation-control input,:host(.mk-controls-container.mk-dragging-annotation) .mk-user-location-control,:host(.mk-controls-container.mk-dragging-annotation) .mk-zoom-in,:host(.mk-controls-container.mk-dragging-annotation) .mk-zoom-out{cursor:none}'
        }
        ,
        4923: t=>{
            t.exports = ".mk-scale{position:absolute;top:0;left:0;vertical-align:top}:host(.mk-rtl) .mk-scale{direction:rtl}:host(.mk-controls-container) .mk-popover{position:absolute;top:38px;right:-1px}:host(.mk-controls-container) .mk-popover-arrow{position:absolute;top:-13px}.mk-top-right-controls-container{position:absolute;top:9px;right:9px;direction:ltr}:host(.mk-controls-container:not(.mk-rtl)) .mk-top-right-controls-container .mk-control:first-child{border-top-left-radius:9px;border-bottom-left-radius:9px}:host(.mk-controls-container:not(.mk-rtl)) .mk-top-right-controls-container .mk-control:nth-last-child(2){border-top-right-radius:9px;border-bottom-right-radius:9px}:host(.mk-controls-container) .mk-pill-focus .mk-user-location-control{margin-right:1px}:host(.mk-controls-container) .mk-pill-focus .mk-map-type-control{margin-left:1px}:host(.mk-controls-container) .mk-popover.mk-user-location-error-popover{transform-origin:calc(100% - 69px) -12.416px}:host(.mk-controls-container) .mk-popover.mk-map-type-popover,:host(.mk-controls-container) .mk-popover.mk-user-location-error-popover:last-child{transform-origin:calc(100% - 24px) -12.416px}:host(.mk-controls-container) .mk-popover.mk-user-location-error-popover>.mk-popover-arrow{right:52.5px}:host(.mk-controls-container) .mk-popover.mk-map-type-popover>.mk-popover-arrow,:host(.mk-controls-container) .mk-popover.mk-user-location-error-popover:last-child>.mk-popover-arrow{right:10px}:host(.mk-controls-container) .mk-map-type-popover>div:not(:last-child){margin-right:20px}:host(.mk-rtl) .mk-top-right-controls-container{left:9px;right:auto;direction:rtl}:host(.mk-controls-container.mk-rtl) .mk-top-right-controls-container .mk-control:first-child{border-top-right-radius:9px;border-bottom-right-radius:9px}:host(.mk-controls-container.mk-rtl) .mk-top-right-controls-container .mk-control:nth-last-child(2){border-top-left-radius:9px;border-bottom-left-radius:9px}:host(.mk-controls-container.mk-rtl) .mk-pill-focus .mk-user-location-control{margin-left:1px;margin-right:0}:host(.mk-controls-container.mk-rtl) .mk-pill-focus .mk-map-type-control{margin-right:1px;margin-left:0}:host(.mk-controls-container.mk-rtl) .mk-popover{right:auto;left:-1px}:host(.mk-controls-container.mk-rtl) .mk-popover.mk-user-location-error-popover{transform-origin:69px -12.416px}:host(.mk-controls-container.mk-rtl) .mk-popover.mk-map-type-popover,:host(.mk-controls-container.mk-rtl) .mk-popover.mk-user-location-error-popover:last-child{transform-origin:24px -12.416px}:host(.mk-controls-container.mk-rtl) .mk-popover.mk-user-location-error-popover>.mk-popover-arrow{right:auto;left:52.5px}:host(.mk-controls-container.mk-rtl) .mk-popover.mk-map-type-popover>.mk-popover-arrow,:host(.mk-controls-container.mk-rtl) .mk-popover.mk-user-location-error-popover:last-child>.mk-popover-arrow{right:auto;left:10px}:host(.mk-controls-container.mk-rtl) .mk-map-type-popover>div:not(:last-child){margin-left:20px;margin-right:0}.mk-bottom-left-controls-container,.mk-bottom-right-controls-container{position:absolute;bottom:9px}.mk-rotation-control,.mk-zoom-controls{position:absolute;bottom:0}.mk-legal-controls,.mk-logo-control{position:absolute;bottom:-4px}.mk-bottom-right-controls-container{right:9px}.mk-bottom-left-controls-container{left:9px}:host(.mk-reduce-margin) .mk-bottom-right-controls-container{right:0}:host(.mk-reduce-margin) .mk-bottom-left-controls-container{left:4px}.mk-logo-control{left:0}:host(.mk-controls-container) div.mk-logo-control img.mk-logo.mk-logo-autonavi.mk-logo-autonavi{margin:0 0 -6px -9px}.mk-legal-controls,.mk-rotation-control,.mk-zoom-controls{right:0;left:auto}.mk-bottom-left-controls-container .mk-legal-controls{right:auto}.mk-zoom-controls .mk-zoom-in{border-top-right-radius:inherit;border-bottom-right-radius:inherit;right:0}.mk-zoom-controls .mk-zoom-out{border-top-left-radius:inherit;border-bottom-left-radius:inherit;left:0}.mk-rotation-control~.mk-legal-controls,.mk-rotation-control~.mk-zoom-controls,.mk-zoom-controls~.mk-legal-controls{right:57px;left:auto}.mk-bottom-left-controls-container .mk-legal-controls:nth-child(2){left:60px}.mk-rotation-control~.mk-zoom-controls~.mk-legal-controls{right:114px;left:auto}:host(.mk-rtl) .mk-bottom-right-controls-container{left:9px;right:auto}:host(.mk-rtl) .mk-bottom-left-controls-container{left:auto;right:9px}:host(.mk-rtl.mk-reduce-margin) .mk-bottom-right-controls-container{left:0;right:auto}:host(.mk-rtl.mk-reduce-margin) .mk-bottom-left-controls-container{left:auto;right:4px}:host(.mk-rtl) .mk-logo-control{left:auto;right:0}:host(.mk-rtl.mk-controls-container) div.mk-logo-control img.mk-logo.mk-logo-autonavi.mk-logo-autonavi{margin:0 -9px -6px 0}:host(.mk-rtl) .mk-zoom-controls .mk-zoom-in{border-top-left-radius:inherit;border-bottom-left-radius:inherit;border-top-right-radius:initial;border-bottom-right-radius:initial;right:auto;left:0}:host(.mk-rtl) .mk-zoom-controls .mk-zoom-out{border-top-left-radius:initial;border-bottom-left-radius:initial;border-top-right-radius:inherit;border-bottom-right-radius:inherit;right:0;left:auto}:host(.mk-rtl) .mk-legal-controls,:host(.mk-rtl) .mk-rotation-control,:host(.mk-rtl) .mk-zoom-controls{left:0;right:auto}:host(.mk-rtl) .mk-bottom-left-controls-container .mk-legal-controls{left:auto}:host(.mk-rtl) .mk-rotation-control~.mk-legal-controls,:host(.mk-rtl) .mk-rotation-control~.mk-zoom-controls,:host(.mk-rtl) .mk-zoom-controls~.mk-legal-controls{left:57px;right:auto}:host(.mk-rtl) .mk-bottom-left-controls-container .mk-legal-controls:nth-child(2){right:60px}:host(.mk-rtl) .mk-rotation-control~.mk-zoom-controls~.mk-legal-controls{left:114px;right:auto}"
        }
        ,
        5875: (t,e,i)=>{
            var n = i(4701)
              , o = i(6426)
              , s = i(2221)
              , a = i(7768).Node
              , r = i(351);
            function l(t) {
                a.call(this, t),
                this.classList.add(h)
            }
            var h = "mk-control"
              , c = "mk-disabled"
              , d = "mk-focus";
            function u(t) {
                this._control = t
            }
            function p(t) {
                this._control = t
            }
            function m(t) {
                this._control = t
            }
            l.prototype = s.inheritPrototype(a, l, {
                constructor: l,
                _enabled: !1,
                hasFocus: !1,
                pageHasFocus: !1,
                get enabled() {
                    return this._enabled
                },
                set enabled(t) {
                    t = !!t;
                    this._enabled !== t && (t ? this.enable() : this.disable(),
                    this._enabled = t,
                    this.reset())
                },
                set canShowTooltips(t) {
                    t ? this._updateLabels() : this._clearLabels()
                },
                willMoveToParent: function(t) {
                    t ? this.parent || (this._createListeners(),
                    r.addEventListener(r.Events.LocaleChanged, this._eventListener),
                    this.enabled && (this._addFocusAndBlurListeners(),
                    this._addKeyboardListeners(),
                    this.addEventListeners())) : (r.removeEventListener(r.Events.LocaleChanged, this._eventListener),
                    this.removeEventListeners(),
                    this._removeFocusAndBlurListeners(),
                    this._removeKeyboardListeners(),
                    this._destroyListeners())
                },
                enable: function() {
                    this.classList.remove(c),
                    this._createListeners(),
                    this.element.addEventListener(n.startEventType, this._eventListener),
                    this.element.addEventListener("click", this._eventListener),
                    this.parent && (this._addFocusAndBlurListeners(),
                    this._addKeyboardListeners(),
                    this.addEventListeners())
                },
                disable: function() {
                    this.classList.add(c),
                    this.element.removeEventListener(n.startEventType, this._eventListener),
                    this.element.removeEventListener("click", this._eventListener),
                    this.removeEventListeners(),
                    this._removeFocusAndBlurListeners(),
                    this._removeKeyboardListeners()
                },
                blurFocusedElement: function(t) {
                    var t = n.getShadowDOMTargetFromEvent(this.element, t);
                    this.element.contains(t) || (t = n.containingDocumentOrShadowRoot(this.element)).activeElement && this.element.contains(t.activeElement) && t.activeElement.blur()
                },
                reset: function() {},
                saveEndEventProps: function(t) {
                    t && t.type === n.endEventType && (t = t.changedTouches ? t.changedTouches[0] : t,
                    this._endEventProps = [t.clientX, t.clientY, t.screenX, t.screenY])
                },
                checkClickEventProps: function(t) {
                    if (!this._endEventProps)
                        return !1;
                    for (var e = [t.clientX, t.clientY, t.screenX, t.screenY], i = !0, n = 0; n < e.length; n++)
                        if (1 < Math.abs(this._endEventProps[n] - e[n])) {
                            i = !1;
                            break
                        }
                    return delete this._endEventProps,
                    i
                },
                clicked: function() {},
                touchesBegan: function(t) {},
                touchesMoved: function(t) {},
                touchesEnded: function(t) {},
                touchesCanceled: function(t) {},
                spaceBarKeyDown: function(t) {},
                spaceBarKeyUp: function(t) {},
                escapeKeyDown: function(t) {},
                escapeKeyUp: function(t) {},
                downArrowKeyUp: function(t) {},
                downArrowKeyDown: function(t) {},
                upArrowKeyUp: function(t) {},
                upArrowKeyDown: function(t) {},
                rightArrowKeyUp: function(t) {},
                leftArrowKeyUp: function(t) {},
                rightArrowKeyDown: function(t) {},
                leftArrowKeyDown: function(t) {},
                focused: function(t) {},
                blurred: function(t) {},
                pageDidFocus: function(t) {},
                pageDidBlur: function(t) {},
                updateTintColor: function(t) {},
                removeEventListeners: function() {},
                addEventListeners: function() {},
                localeChanged: function() {},
                _clearLabels: function() {
                    n.updateLabel(this.element, "")
                },
                _createListeners: function() {
                    this._eventListener || (this._eventListener = new u(this)),
                    this._windowEventListener || (this._windowEventListener = new m(this)),
                    this._cancelFocusEventListener || (this._cancelFocusEventListener = new p(this))
                },
                _destroyListeners: function() {
                    this._eventListener && (this.element.removeEventListener(n.startEventType, this._eventListener),
                    this.element.removeEventListener("click", this._eventListener),
                    this._eventListener.destroy(),
                    delete this._eventListener),
                    this._windowEventListener && (this._windowEventListener.destroy(),
                    delete this._windowEventListener),
                    this._cancelFocusEventListener && (this._cancelFocusEventListener.destroy(),
                    delete this._cancelFocusEventListener)
                },
                _addFocusAndBlurListeners: function() {
                    this.element.addEventListener("focus", this._eventListener, !0),
                    this.element.addEventListener("blur", this._eventListener, !0),
                    window.addEventListener("focus", this._windowEventListener),
                    window.addEventListener("blur", this._windowEventListener),
                    this.hasFocus = n.containingDocumentOrShadowRoot(this.element).activeElement === this.element
                },
                _removeFocusAndBlurListeners: function() {
                    this.element.removeEventListener("focus", this._eventListener, !0),
                    this.element.removeEventListener("blur", this._eventListener, !0),
                    window.removeEventListener(n.startEventType, this._cancelFocusEventListener, !0),
                    window.removeEventListener("focus", this._windowEventListener),
                    window.removeEventListener("blur", this._windowEventListener)
                },
                _addKeyboardListeners: function() {
                    this.element.addEventListener("keydown", this._eventListener),
                    this.element.addEventListener("keyup", this._eventListener)
                },
                _removeKeyboardListeners: function() {
                    this.element.removeEventListener("keydown", this._eventListener),
                    this.element.removeEventListener("keyup", this._eventListener)
                }
            }),
            o.EventTarget(l.prototype),
            u.prototype = {
                destroy: function() {
                    window.removeEventListener(n.startEventType, this._control._cancelFocusEventListener, !0),
                    this._removeEventListeners(),
                    delete this._control
                },
                handleEvent: function(t) {
                    switch (t.type) {
                    case "click":
                        this._click(t);
                        break;
                    case n.startEventType:
                        this._touchesBegan(t);
                        break;
                    case n.moveEventType:
                        this._control.touchesMoved(t);
                        break;
                    case n.endEventType:
                        this._removeEventListeners(),
                        this._control.touchesEnded(t);
                        break;
                    case n.cancelEventType:
                        this._removeEventListeners(),
                        this._control.touchesCanceled(t);
                        break;
                    case "keydown":
                        this._keyDown(t);
                        break;
                    case "keyup":
                        this._keyUp(t);
                        break;
                    case "focus":
                        this._focus(t);
                        break;
                    case "blur":
                        this._blur(t);
                        break;
                    case r.Events.LocaleChanged:
                        this._control.localeChanged(t)
                    }
                },
                _click: function(t) {
                    this._swallowEvent(t),
                    this._control.clicked(t)
                },
                _touchesBegan: function(t) {
                    this._swallowEvent(t),
                    ("mousedown" === t.type || "pointerdown" === t.type && "mouse" === t.pointerType) && (0 !== t.button || t.ctrlKey) || (window.addEventListener(n.moveEventType, this, !0),
                    window.addEventListener(n.endEventType, this, !0),
                    n.cancelEventType && window.addEventListener(n.cancelEventType, this, !0),
                    this._control.touchesBegan(t))
                },
                _keyDown: function(t) {
                    switch (t.keyCode) {
                    case s.KeyCodes.Escape:
                        this._control.escapeKeyDown(t);
                        break;
                    case s.KeyCodes.SpaceBar:
                        t.preventDefault(),
                        this._control.spaceBarKeyDown(t);
                        break;
                    case s.KeyCodes.DownArrow:
                        t.preventDefault(),
                        this._control.downArrowKeyDown(t);
                        break;
                    case s.KeyCodes.UpArrow:
                        t.preventDefault(),
                        this._control.upArrowKeyDown(t);
                        break;
                    case s.KeyCodes.RightArrow:
                        t.preventDefault(),
                        this._control.rightArrowKeyDown(t);
                        break;
                    case s.KeyCodes.LeftArrow:
                        t.preventDefault(),
                        this._control.leftArrowKeyDown(t)
                    }
                },
                _keyUp: function(t) {
                    switch (t.keyCode) {
                    case s.KeyCodes.Escape:
                        this._control.escapeKeyUp(t);
                        break;
                    case s.KeyCodes.DownArrow:
                        t.preventDefault(),
                        this._control.downArrowKeyUp(t);
                        break;
                    case s.KeyCodes.UpArrow:
                        t.preventDefault(),
                        this._control.upArrowKeyUp(t);
                        break;
                    case s.KeyCodes.RightArrow:
                        t.preventDefault(),
                        this._control.rightArrowKeyUp(t);
                        break;
                    case s.KeyCodes.LeftArrow:
                        t.preventDefault(),
                        this._control.leftArrowKeyUp(t);
                        break;
                    case s.KeyCodes.SpaceBar:
                        t.preventDefault(),
                        this._control.spaceBarKeyUp(t)
                    }
                },
                _focus: function(t) {
                    this._control.hasFocus || n.containingDocumentOrShadowRoot(this._control.element).activeElement === t.target && (this._control.hasFocus = !0,
                    this._control.classList.add(d),
                    window.addEventListener(n.startEventType, this._control._cancelFocusEventListener, !0),
                    this._control.focused(t))
                },
                _blur: function(t) {
                    this._control.hasFocus && (this._control.hasFocus = !1,
                    window.removeEventListener(n.startEventType, this._control._cancelFocusEventListener, !0),
                    this._control.classList.remove(d),
                    this._control.blurred(t))
                },
                _removeEventListeners: function() {
                    window.removeEventListener(n.moveEventType, this, !0),
                    window.removeEventListener(n.endEventType, this, !0),
                    n.cancelEventType && window.removeEventListener(n.cancelEventType, this, !0)
                },
                _swallowEvent: function(t) {
                    t.preventDefault(),
                    t.stopPropagation()
                }
            },
            p.prototype = {
                destroy: function() {
                    delete this._control
                },
                handleEvent: function(t) {
                    this._control.blurFocusedElement(t)
                }
            },
            m.prototype = {
                destroy: function() {
                    delete this._control
                },
                handleEvent: function(t) {
                    switch (t.type) {
                    case "focus":
                        this._control.pageHasFocus || (this._control.pageHasFocus = !0,
                        this._control.pageDidFocus(t));
                        break;
                    case "blur":
                        this._control.pageHasFocus = !1,
                        this._control.pageDidBlur(t)
                    }
                }
            },
            t.exports = l
        }
        ,
        9572: (t,e,i)=>{
            var n = i(5869)
              , o = i(2221)
              , s = i(4701)
              , a = i(8134)
              , r = i(4372)
              , l = i(8645)
              , h = i(6278)
              , c = i(2)
              , d = i(7813)
              , u = i(4856)
              , p = i(8756)
              , m = i(7768)
              , _ = i(7768).Node
              , g = i(7664)
              , f = i(351)
              , v = i(9842)
              , y = i(1840)
              , w = y.FeatureVisibility
              , C = ["ca-ES", "en-GB", "en-US", "es-ES", "es-MX", "hi-IN", "id-ID", "ja-JP", "ko-KR", "ms-MY", "nb-NO", "pt-BR", "pt-PT", "ro-RO", "zh-CN", "zh-HK", "zh-TW"]
              , b = "mk-with-zoom-control"
              , k = "mk-pill-focus"
              , L = "mk-pill-pressed"
              , E = new p(7,11);
            function S(t) {
                _.call(this, s.htmlElement("div", {
                    class: "mk-controls-container"
                })),
                this._map = t,
                this._topRightControlsNode = new _(s.htmlElement("div", {
                    class: "mk-top-right-controls-container"
                })),
                this._bottomRightControlsNode = new _(s.htmlElement("div", {
                    class: "mk-bottom-right-controls-container"
                })),
                this._bottomLeftControlsNode = new _(s.htmlElement("div", {
                    class: "mk-bottom-left-controls-container"
                })),
                this._setPendingControls(),
                this._shadowRootNode = s.addShadowRootChild(this, i(4378) + i(1867) + i(4923)),
                this._shadowRootNode.addChild(this._topRightControlsNode),
                this._shadowRootNode.addChild(this._bottomRightControlsNode),
                this._shadowRootNode.addChild(this._bottomLeftControlsNode),
                this._logo = new a,
                this._legalControl = new r,
                n.addEventListener(n.Events.Changed, this),
                f.activeLocale && (this._rtl = f.activeLocale.rtl,
                this.classList.toggle("mk-rtl", this._rtl)),
                f.addEventListener(f.Events.LocaleChanged, this)
            }
            function M() {
                return n.isAutoNavi || n.showMapsLogo
            }
            S.ZoomControl = c,
            S.prototype = o.inheritPrototype(_, S, {
                _rtl: !1,
                get controlsPending() {
                    return this._controlsPending
                },
                set canShowTooltips(t) {
                    this._userLocationControl && (this._userLocationControl.canShowTooltips = t),
                    this._zoomControl && (this._zoomControl.canShowTooltips = t),
                    this._mapTypeControl && (this._mapTypeControl.canShowTooltips = t),
                    this._rotationControl && (this._rotationControl.canShowTooltips = t)
                },
                mapPaddingDidChange: function(t) {
                    var e = this.element.style;
                    e.top = t.top + "px",
                    e.left = t.left + "px",
                    e.bottom = t.bottom + "px",
                    e.right = t.right + "px",
                    this.sizeDidChange()
                },
                sizeDidChange: function() {
                    var t = this._shouldHideControls();
                    this._toggleControl(this._map.showsZoomControl && !t, this._zoomControl, this.updateZoomControl),
                    this._toggleControl(this._map.showsMapTypeControl && !t, this._mapTypeControl, this.updateMapTypeControl),
                    this._toggleControl(this._map.showsUserLocationControl && !t, this._userLocationControl, this.updateUserLocationControl),
                    this.updateLogo(),
                    this.updateLegalControl(),
                    this.updateRotationControl(),
                    this.updateScale(),
                    this.zoomLevelDidChange(),
                    this._setReduceMargin()
                },
                zoomLevelDidChange: function() {
                    var t, e;
                    this._zoomControl && (t = this._map.minZoomLevel,
                    e = this._map.maxZoomLevel,
                    this._map.snapsToIntegralZoomLevels && (t = Math.ceil(t),
                    e = Math.floor(e)),
                    this._zoomControl.zoomOutEnabled = this._map.zoomLevel > t,
                    this._zoomControl.zoomInEnabled = this._map.zoomLevel < e)
                },
                update: function() {
                    this._map && (this.classList.toggle("mk-color-scheme-dark", s.darkColorScheme(this._map.colorScheme)),
                    this.classList.toggle("mk-dark-mode", s.darkColorScheme(this._map.tint)),
                    this._shouldHideControls() ? (this._removeZoomControl(),
                    this._removeMapTypeControl(),
                    this._removeUserLocationControl(),
                    this._removeRotationControl(),
                    this._removeScale()) : (this.updateZoomControl(),
                    this.updateMapTypeControl(),
                    this.updateUserLocationControl(),
                    this.updateRotationControl(),
                    this.updateScale()),
                    this.updateLogo(),
                    this.updateLegalControl(),
                    this._setReduceMargin())
                },
                scaleDidChange: function() {
                    this._scale && (this._scale.update(),
                    this._scale.hideIfNeeded())
                },
                updateScale: function() {
                    this._map.showsScale === w.Hidden || this._shouldHideControls() ? this._removeScale() : (this._addScale(),
                    this._scale.node.mapWidth = this._map._mapNode.size.width,
                    this._scale.updateTheme(this._map.mapNodeTint),
                    this._positionScale(),
                    this._scale.update())
                },
                updateZoomControl: function() {
                    this._map.showsZoomControl && !this._shouldHideControls() ? (this._addZoomControl(),
                    this._zoomControl.enabled = this._map.isZoomEnabled,
                    this.zoomLevelDidChange(),
                    this._zoomControl.updateTintColor(this._map.tintColorForControls)) : this._removeZoomControl()
                },
                updateMapTypeControl: function() {
                    this._map.showsMapTypeControl && !this._shouldHideControls() ? (this._addMapTypeControl(),
                    this._mapTypeControl.mapType = this._map.mapType,
                    this._mapTypeControl.enabled = !0,
                    this._mapTypeControl.updateTintColor(this._map.tintColorForControls)) : this._removeMapTypeControl()
                },
                updateUserLocationControl: function() {
                    if (this._map.showsUserLocationControl && !this._shouldHideControls()) {
                        switch (this._addUserLocationControl(),
                        this._userLocationControl.enabled = !0,
                        this._userLocationControl.state) {
                        case d.States.Default:
                            S.userLocation.isAvailable ? this._map.tracksUserLocation && S.userLocation.location ? this._userLocationControl.toTrackingState() : (this._map.tracksUserLocation || this._map.showsUserLocation && !this._map.userLocationAnnotation) && this._userLocationControl.toWaitingState() : this._userLocationControl.toDisabledState();
                            break;
                        case d.States.Waiting:
                            S.userLocation.location && this.userLocationDidChange(S.userLocation),
                            this._map.showsUserLocation || this._userLocationControl.toDefaultState();
                            break;
                        case d.States.Tracking:
                            this._map.tracksUserLocation || this._userLocationControl.toDefaultState()
                        }
                        this._userLocationControl.updateTintColor(this._map.tintColorForControls)
                    } else
                        this._removeUserLocationControl()
                },
                updateRotationControl: function() {
                    this._shouldHideControls() || this._map.isCompassHidden ? this._removeRotationControl() : (this._addRotationControl(),
                    this._rotationControl.rotation = this._map.rotation,
                    this._rotationControl.updateImage(s.devicePixelRatio, s.darkColorScheme(this._map.mapNodeTint)),
                    this._rotationControl.updateTintColor(this._map.tintColorForControls))
                },
                updateLegalControl: function() {
                    this._addAndUpdateLegalControl()
                },
                updateLogo: function() {
                    !this._shouldHideLogo() && M() ? this._addAndUpdateLogo() : this._logo.remove(),
                    this._legalControl.updateWithMapTypeAndTint(this._map.mapType, this._map.mapNodeTint)
                },
                devicePixelRatioDidChange: function() {
                    this._rotationControl && this._rotationControl.updateImage(s.devicePixelRatio, s.darkColorScheme(this._map.mapNodeTint)),
                    this._scale && this._scale.update(),
                    this._logo.updateWithMapNodeTint(this._map.mapNodeTint)
                },
                handleEvent: function(t) {
                    if (this._map)
                        switch (t.type) {
                        case l.EVENTS.MAP_TYPE_CHANGE:
                            this._mapTypeControl && (this._map.mapType = this._mapTypeControl.mapType);
                            break;
                        case d.EVENTS.PRESSED:
                            this._userLocationControl.state === d.States.Waiting ? this._map.tracksUserLocation = !0 : this._userLocationControl.state !== d.States.Tracking && (this._map.tracksUserLocation = !1);
                            break;
                        case f.Events.LocaleChanged:
                            this._handleLocaleChanged(t);
                            break;
                        case "update":
                            this._unsetPendingControls(),
                            this._map.addWaitingAnnotations();
                            break;
                        case n.Events.Changed:
                            this.updateLogo(),
                            this.updateLegalControl()
                        }
                },
                mapWasDestroyed: function() {
                    this._unsetPendingControls(),
                    f.removeEventListener(f.Events.LocaleChanged, this),
                    n.removeEventListener(n.Events.Changed, this),
                    this._destroyZoomControl(),
                    this._destroyMapTypeControl(),
                    this._destroyUserLocationControl(),
                    this._destroyRotationControl(!0),
                    this._legalControl.remove(),
                    delete this._legalControl,
                    this._logo.mapWasDestroyed(),
                    this._logo.remove(),
                    delete this._logo,
                    this._removeScale(),
                    this.remove(),
                    delete this._map
                },
                userLocationDidChange: function(t) {
                    this._userLocationControl && (this._map.tracksUserLocation ? this._userLocationControl.toTrackingState() : this._userLocationControl.toDefaultState())
                },
                userLocationDidError: function(t) {
                    this._userLocationControl && this._userLocationControl.toDisabledState(),
                    this._map.userLocationAnnotation || 3 === t.errorCode || (this._map.showsUserLocation = !1)
                },
                _handleLocaleChanged: function(t) {
                    this.classList.toggle("mk-rtl", t.locale.rtl),
                    this._rtl !== t.locale.rtl ? (this._rtl = t.locale.rtl,
                    this._rtlChanged = !0,
                    this.update(),
                    this._rtlChanged = !1) : this.updateLogo()
                },
                _addScale: function() {
                    this._scale || (this._setPendingControls(),
                    this._scale = new h(this._map),
                    this._shadowRootNode.addChild(this._scale, 0))
                },
                _positionScale: function() {
                    var t = this._map.ensureVisibleFrame().size
                      , e = !this._rtl;
                    this._scale.node.leftAligned = e,
                    this._scale.position = new p(e ? E.x : t.width - this._scale.size.width - E.x,E.y),
                    this._scale.shouldDisplayScale || this._scale.node.setOpacityAnimated(0, !1)
                },
                _removeScale: function() {
                    this._scale && (this._setPendingControls(),
                    this._scale.node.l10n = null,
                    this._scale.node.remove(),
                    this._scale.scene.destroy(),
                    this._scale.remove(),
                    delete this._scale)
                },
                _addZoomControl: function() {
                    !this._map.showsZoomControl || this._zoomControl || this._shouldHideControls() || (this._setPendingControls(),
                    this._zoomControl = new c,
                    this._zoomControl.enabled = this._map.isZoomEnabled,
                    this._zoomControl.addEventListener(c.EVENTS.ZOOM_START, this._map),
                    this._zoomControl.addEventListener(c.EVENTS.ZOOM_END, this._map),
                    this._bottomRightControlsNode.insertBefore(this._zoomControl, this._legalControl),
                    this._rotationControl && this._rotationControl.classList.add(b))
                },
                _removeZoomControl: function() {
                    !this._shouldHideControls() && this._map.showsZoomControl || !this._zoomControl || (this._setPendingControls(),
                    this._zoomControl.enabled = !1,
                    this._destroyZoomControl())
                },
                _destroyZoomControl: function() {
                    this._zoomControl && (this._zoomControl.removeEventListener(c.EVENTS.ZOOM_START, this._map),
                    this._zoomControl.removeEventListener(c.EVENTS.ZOOM_END, this._map),
                    this._zoomControl.remove(),
                    this._rotationControl && this._rotationControl.classList.remove(b),
                    delete this._zoomControl)
                },
                _addMapTypeControl: function() {
                    !this._map.showsMapTypeControl || this._mapTypeControl || this._shouldHideControls() || (this._setPendingControls(),
                    this._mapTypeControl = new l(i(2488).MapTypes,this._map.mapType,this),
                    this._mapTypeControl.addEventListener(l.EVENTS.MAP_TYPE_CHANGE, this),
                    this._topRightControlsNode.addChild(this._mapTypeControl))
                },
                _removeMapTypeControl: function() {
                    this._mapTypeControl && (this._setPendingControls(),
                    this._mapTypeControl.enabled = !1,
                    this._destroyMapTypeControl())
                },
                _destroyMapTypeControl: function() {
                    this._mapTypeControl && (this._mapTypeControl.removeEventListener(l.EVENTS.MAP_TYPE_CHANGE, this),
                    this._mapTypeControl.remove(),
                    delete this._mapTypeControl)
                },
                _toggleControl: function(t, e, i) {
                    (e && !t || !e && t) && i.call(this)
                },
                _shouldHideControls: function() {
                    var t;
                    return !n.ready || (t = this._map.ensureVisibleFrame().size).width < y.MapSizes.minimumSizeToShowControls.width || t.height < y.MapSizes.minimumSizeToShowControls.height
                },
                _shouldHideLogo: function() {
                    var t, e;
                    return !n.ready || (t = -1 === C.indexOf(f.localeId) ? y.MapSizes.minimumSizeToShowLogo : y.MapSizes.minimumSizeToShowLogoWithReducedMargin,
                    (e = this._map.ensureVisibleFrame().size).width < t.width) || e.height < t.height
                },
                _addRotationControl: function() {
                    this._shouldHideControls() || this._rotationControl || (this._setPendingControls(),
                    this._rotationControl = new u(this._map),
                    this._rotationControl.enabled = !0,
                    this._bottomRightControlsNode.insertBefore(this._rotationControl, this._zoomControl || this._legalControl),
                    this._zoomControl && this._rotationControl.classList.add(b))
                },
                _removeRotationControl: function() {
                    this._rotationControl && (this._setPendingControls(),
                    this._destroyRotationControl())
                },
                _destroyRotationControl: function(t) {
                    var e, i;
                    function n() {
                        clearTimeout(i),
                        e.element.removeEventListener("transitionend", n),
                        e.mapWasDestroyed(),
                        e.remove()
                    }
                    this._rotationControl && (t ? (this._rotationControl.mapWasDestroyed(),
                    this._rotationControl.remove()) : ((e = this._rotationControl).opacity = 0,
                    i = setTimeout(n, 300),
                    e.element.addEventListener("transitionend", n)),
                    delete this._rotationControl)
                },
                _addUserLocationControl: function() {
                    !this._map.showsUserLocationControl || this._userLocationControl || this._shouldHideControls() || (this._setPendingControls(),
                    this._userLocationControl = new d(this._map,this._rtl,this),
                    this._userLocationControl.addEventListener(d.EVENTS.PRESSED, this),
                    this._topRightControlsNode.insertBefore(this._userLocationControl, this._mapTypeControl))
                },
                controlDidGetFocus: function(t) {
                    this._toggleParentClass(t, k, !0)
                },
                controlDidLoseFocus: function(t) {
                    this._toggleParentClass(t, k, !1)
                },
                controlWasPressed: function(t) {
                    this._toggleParentClass(t, L, !0)
                },
                controlWasReleased: function(t) {
                    this._toggleParentClass(t, L, !1)
                },
                _toggleParentClass: function(t, e, i) {
                    t = t.parent;
                    t === this._topRightControlsNode && t.classList.toggle(e, i)
                },
                _removeUserLocationControl: function() {
                    !this._shouldHideControls() && this._map.showsUserLocationControl || !this._userLocationControl || (this._setPendingControls(),
                    this._destroyUserLocationControl())
                },
                _destroyUserLocationControl: function() {
                    this._userLocationControl && (this._userLocationControl.removeEventListener(d.EVENTS.STATE_CHANGE, this._map),
                    this._userLocationControl.mapWasDestroyed(),
                    this._userLocationControl.remove(),
                    delete this._userLocationControl)
                },
                _addAndUpdateLegalControl: function() {
                    this._setPendingControls(),
                    (!n.showMapsLogo && n.mirrorLegalLink ? this._bottomLeftControlsNode : this._bottomRightControlsNode).addChild(this._legalControl),
                    this._legalControl.updateWithMapTypeAndTint(this._map.mapType, this._map.mapNodeTint)
                },
                _addAndUpdateLogo: function() {
                    this._logo.parent || (this._setPendingControls(),
                    this._bottomLeftControlsNode.insertBefore(this._logo, this._legalControl)),
                    this._logo.updateWithMapNodeTint(this._map.mapNodeTint)
                },
                _setPendingControls: function() {
                    this._controlsPending = !0,
                    m.addEventListener("update", this)
                },
                _unsetPendingControls: function() {
                    this._controlsPending = !1,
                    m.removeEventListener("update", this)
                },
                _setReduceMargin: function() {
                    var t = this._map.ensureVisibleFrame().size.width
                      , e = y.MapSizes
                      , i = e.minimumSizeToShowLogo.width
                      , e = e.minimumSizeToShowControls.width;
                    this.classList.toggle("mk-reduce-margin", t < i && M()),
                    this.classList.toggle("mk-reduced-vertical-margin", t < e)
                },
                controlBounds: function() {
                    var e = [];
                    return [this._topRightControlsNode, this._bottomLeftControlsNode, this._bottomRightControlsNode].forEach(function(t) {
                        0 !== t.children.length && (t === this._bottomRightControlsNode ? Array.prototype.push.apply(e, t.children) : e.push(t))
                    }, this),
                    e.map(function(t) {
                        try {
                            var e, i = t.element.getBoundingClientRect(), n = window.getComputedStyle(this._map.element);
                            return "none" === (n.transform || n.msTransform || n.webkitTransform) ? (e = this._map.element.getBoundingClientRect(),
                            new v(i.left - e.left,i.top - e.top,i.width,i.height)) : v.rectFromClientRect(i)
                        } catch (t) {
                            return new v
                        }
                    }, this)
                }
            }),
            g.jsModules.userLocation ? S.userLocation = g.jsModules.userLocation : g.addEventListener("load", function t(e) {
                e.jsModules.userLocation && (S.userLocation = e.jsModules.userLocation,
                g.removeEventListener("load", t))
            }),
            t.exports = S
        }
        ,
        4372: (t,e,i)=>{
            var n = i(4701)
              , o = i(2221)
              , s = i(5869)
              , a = i(5875)
              , r = i(351)
              , l = i(7768).Node
              , h = (t.exports = d,
            "mk-legal-controls")
              , c = "mk-legal";
            function d() {
                var t = n.htmlElement("a", {
                    target: "_blank",
                    tabindex: 0
                });
                a.call(this, t),
                this.classList.add(h),
                this._elLegal = n.htmlElement("span"),
                this._elLegal.textContent = r.get("Legal.Label"),
                this._elLegalNode = new l(this._elLegal),
                this._elLegalNode.classList.add(c),
                t.appendChild(this._elLegal),
                this.enabled = !0
            }
            d.prototype = o.inheritPrototype(a, d, {
                _attributionUrl: "",
                updateWithMapTypeAndTint: function(t, e) {
                    this.mapType = t,
                    this.tint = e,
                    this.classList.toggle("mk-legal-controls-autonavi", s.isAutoNavi),
                    this._elLegalNode.classList.toggle("mk-legal-satellite", n.darkColorScheme(e)),
                    this._elLegal.textContent = r.get("Legal.Label"),
                    s.isAutoNavi ? s.ready ? (t = s.types[this.mapType].tileSources[0]).attribution && t.attribution.url && (this._attributionUrl = this.element.href = t.attribution.url) : this._attributionUrl = this.element.href = "" : this._attributionUrl = this.element.href = r.get("Legal.Apple.URL")
                },
                localeChanged: function(t) {
                    this.mapType && this.updateWithMapTypeAndTint(this.mapType, this.tint)
                },
                clicked: function(t) {
                    this._pressed(t)
                },
                spaceBarKeyUp: function(t) {
                    this._pressed(t)
                },
                _pressed: function(t) {
                    this._attributionUrl && window.open(this._attributionUrl)
                }
            })
        }
        ,
        3703: (t,e,i)=>{
            t.exports = function(t) {
                t(i(9572))
            }
        }
        ,
        8134: (t,e,i)=>{
            var s = i(4701)
              , n = i(2221)
              , a = i(5869)
              , r = i(7017)
              , o = i(7768).Node
              , l = i(351);
            i(764).Tints,
            t.exports = h;
            function h() {
                this._logoElement = s.htmlElement("img"),
                this._logoElementNode = new o(this._logoElement),
                this._logoElementNode.classList.add(c.LOGO),
                o.call(this, s.htmlElement("div", {
                    class: c.CONTROL
                }, this._logoElement)),
                l.addEventListener(l.Events.LocaleChanged, this),
                a.addEventListener(a.Events.Changed, this),
                this.rtl = l.activeLocale.rtl
            }
            var c = {
                CONTROL: "mk-logo-control",
                LOGO: "mk-logo",
                LOGO_AUTONAVI: "mk-logo-autonavi"
            };
            function d(t, e, i) {
                var n, o;
                t.classList.toggle(c.LOGO_AUTONAVI, a.isAutoNavi),
                t.element.crossOrigin = s.getCorsAttribute(a.distUrlWithCredentials),
                t.setAttribute("src", (t = i,
                i = ["logos/logo-wordmark"],
                n = ".svg",
                o = [1],
                a.isAutoNavi ? (i = ["logos/logo", "autonavi"],
                n = ".png",
                o = [1, 2, 3]) : 1 === s.devicePixelRatio && (n = ".png"),
                e && i.push("satellite"),
                a.isAutoNavi && t && i.push("rtl"),
                a.isAutoNavi || i.push(l.localeId),
                r.createImageUrl(s.imagePathForDevice(o, i.join("-"), n))))
            }
            h.prototype = n.inheritPrototype(o, h, {
                tint: void 0,
                updateWithMapNodeTint: function(t) {
                    this.tint = t;
                    var e = s.darkColorScheme(t)
                      , i = this._logoElementNode;
                    a.state === a.States.UNINITIALIZED ? a.addEventListener(a.Events.Initialized, function t() {
                        a.removeEventListener(a.Events.Initialized, t),
                        d(i, e, this.rtl)
                    }) : d(i, e, this.rtl),
                    i.setAttribute("alt", l.get("Logo." + a.tileProvider + ".Tooltip"))
                },
                handleEvent: function(t) {
                    switch (t.type) {
                    case l.Events.LocaleChanged:
                        this.rtl = t.locale.rtl,
                        this._handleLocaleChange(t);
                        break;
                    case a.Events.Changed:
                        if (!this.tint)
                            return;
                        this.updateWithMapNodeTint(this.tint)
                    }
                },
                mapWasDestroyed: function() {
                    l.removeEventListener(l.Events.LocaleChanged, this),
                    a.removeEventListener(a.Events.Changed, this)
                },
                _handleLocaleChange: function(t) {
                    this.tint && this.updateWithMapNodeTint(this.tint)
                }
            })
        }
        ,
        5377: (t,e,i)=>{
            var o = i(4701)
              , n = i(2221)
              , s = i(5875)
              , a = i(351)
              , r = i(7017)
              , l = i(5869);
            function h(t, e) {
                this.delegate = e,
                this.mapType = t,
                this.enabled = !1;
                var i = e.mapTypes[t] === e.mapType
                  , n = a.get("Mode." + t);
                s.call(this, o.htmlElement("div", {
                    class: c + (i ? " " + u : ""),
                    role: "radio",
                    "aria-checked": i,
                    "aria-label": n,
                    tabindex: 0,
                    title: n
                })),
                i = t,
                n = e.mapTypes,
                t = [],
                n[i] === n.Standard ? (t.push(o.htmlElement("img", {
                    class: p,
                    role: "presentation",
                    crossOrigin: o.getCorsAttribute(l.distUrlWithCredentials),
                    src: _(i, !1)
                })),
                t.push(o.htmlElement("img", {
                    class: m,
                    role: "presentation",
                    crossOrigin: o.getCorsAttribute(l.distUrlWithCredentials),
                    src: _(i, !0)
                }))) : t.push(o.htmlElement("img", {
                    role: "presentation",
                    crossOrigin: o.getCorsAttribute(l.distUrlWithCredentials),
                    src: _(i, !1)
                })),
                t.forEach(function(t) {
                    this.element.appendChild(t)
                }
                .bind(this))
            }
            var c = "mk-map-type-button-control"
              , d = "mk-pressed"
              , u = "mk-selected"
              , p = "mk-light-icon"
              , m = "mk-dark-icon";
            function _(t, e) {
                var i = ["icons/map-type"];
                return i.push(t.toLowerCase()),
                e && i.push("dark"),
                r.createImageUrl(o.imagePathForDevice([1, 2], i.join("-"), ".png"))
            }
            h.prototype = n.inheritPrototype(s, h, {
                setSelected: function(t) {
                    this.classList.toggle(u, t),
                    this.setAttribute("aria-checked", t)
                },
                reset: function() {
                    this.classList.remove(d)
                },
                localeChanged: function(t) {
                    var e = a.get("Mode." + this.mapType);
                    this.setAttribute("title", e),
                    this.setAttribute("aria-label", e)
                },
                touchesBegan: function(t) {
                    this._pressed()
                },
                touchesEnded: function(t) {
                    this.reset()
                },
                clicked: function() {
                    this._select()
                },
                touchesCanceled: function(t) {
                    this.reset()
                },
                spaceBarKeyDown: function(t) {
                    this._pressed()
                },
                spaceBarKeyUp: function(t) {
                    this.reset(),
                    this._select()
                },
                blurFocusedElement: function() {},
                _pressed: function() {
                    this.classList.add(d)
                },
                _select: function() {
                    this.delegate.mapType = this.delegate.mapTypes[this.mapType]
                }
            }),
            t.exports = h
        }
        ,
        8645: (t,e,i)=>{
            var n = i(4701)
              , o = i(6426)
              , s = i(2221)
              , a = i(5875)
              , r = i(351)
              , l = i(6065);
            t.exports = c;
            function h(t) {
                this._control = t
            }
            function c(t, e, i) {
                a.call(this, n.htmlElement("div", {
                    role: "button",
                    tabindex: "0"
                })),
                this.classList.add(d.CONTROL),
                this._delegate = new h(this),
                this._focusDelegate = i;
                i = n.svgElement("path");
                i = [n.createSVGIcon(i, {
                    width: 45,
                    height: 24
                }), i];
                this.element.appendChild(i[0]),
                this._iconElement = i[1],
                this._mapType = e,
                this._mapTypes = t,
                this._updateIcon(),
                this._updateLabels(),
                this.enabled = !0,
                this._isOpen = !1
            }
            h.prototype = {
                constructor: h,
                get mapTypes() {
                    return this._control.mapTypes
                },
                get mapType() {
                    return this._control.mapType
                },
                set mapType(t) {
                    this._control.mapType = t
                }
            };
            var d = {
                CONTROL: "mk-map-type-control",
                PRESSED: "mk-pressed"
            }
              , u = (c.EVENTS = {
                MAP_TYPE_CHANGE: "map-type-change"
            },
            c.prototype = s.inheritPrototype(a, c, {
                get mapType() {
                    return this._mapType
                },
                set mapType(t) {
                    t !== this._mapType && (this._mapType = t,
                    this._updateIcon(),
                    this.popover.updateSelected(),
                    this.dispatchEvent(new o.Event(c.EVENTS.MAP_TYPE_CHANGE)))
                },
                get mapTypes() {
                    return this._mapTypes
                },
                localeChanged: function(t) {
                    this._updateLabels(),
                    this.popover.updateLabels()
                },
                touchesBegan: function(t) {
                    this._pressed()
                },
                touchesEnded: function(t) {
                    this.reset()
                },
                clicked: function(t) {
                    this._toggle(!1)
                },
                touchesCanceled: function(t) {
                    this.reset()
                },
                spaceBarKeyDown: function(t) {
                    this._pressed()
                },
                spaceBarKeyUp: function(t) {
                    this.reset(),
                    this._open(!0)
                },
                updateTintColor: function(t) {
                    this.tintColor = t,
                    this._iconElement.style.fill = t
                },
                reset: function() {
                    this.classList.remove(d.PRESSED),
                    this._focusDelegate.controlWasReleased(this)
                },
                handleEvent: function(t) {
                    switch (t.type) {
                    case n.startEventType:
                        this.popover.toggleFocusStyle(!1);
                        var e = n.getShadowDOMTargetFromEvent(this.element, t);
                        this.popover.element.contains(e) || this.element.contains(e) || this._close();
                        break;
                    case "keydown":
                        this.popover.toggleFocusStyle(!0),
                        s.isEscapeKey(t) && (this._close(),
                        e = n.containingDocumentOrShadowRoot(this.element).activeElement) && this.popover.element.contains(e) && this.element.focus();
                        break;
                    case "blur":
                        this.popover.element.contains(t.relatedTarget) || this._close()
                    }
                },
                didMoveToParent: function(t) {
                    t ? (this.popover = new l(this._delegate),
                    this.parent.insertAfter(this.popover, this)) : (window.removeEventListener(n.startEventType, this, !0),
                    window.removeEventListener("keydown", this, !0),
                    this.popover.element.removeEventListener("blur", this, !0),
                    this.popover.remove(),
                    this.popover = null)
                },
                focused: function(t) {
                    this._focusDelegate.controlDidGetFocus(this)
                },
                blurred: function(t) {
                    this._focusDelegate.controlDidLoseFocus(this)
                },
                _updateLabels: function() {
                    n.updateLabel(this, r.get("MapType.Tooltip"))
                },
                _toggle: function(t) {
                    this._isOpen ? this._close() : this._open(t)
                },
                _pressed: function() {
                    this.classList.add(d.PRESSED),
                    this._focusDelegate.controlWasPressed(this)
                },
                _open: function(t) {
                    this._isOpen || (this._isOpen = !0,
                    this.popover.open(),
                    this.popover.toggleFocusStyle(t),
                    window.addEventListener(n.startEventType, this, !0),
                    window.addEventListener("keydown", this, !0),
                    this.popover.element.addEventListener("blur", this, !0))
                },
                _close: function() {
                    this._isOpen && (this._isOpen = !1,
                    this.popover.close(),
                    window.removeEventListener(n.startEventType, this, !0),
                    window.removeEventListener("keydown", this, !0),
                    this.popover.element.removeEventListener("blur", this, !0))
                },
                _handleLocaleChange: function() {
                    this.children.forEach(function(t) {
                        var e = t.element.getAttribute("data-l10n-key");
                        t.element.textContent = r.get(e)
                    })
                },
                _updateIcon: function() {
                    this._iconElement.setAttribute("d", u[this._mapType])
                }
            }),
            {
                standard: "M24.597 18.663V8.233L21.53 6.369a1.83 1.83 0 00-.413-.178v10.569l3.136 1.764c.06.03.116.058.171.083a.815.815 0 00.172.057zm-7.548-.178c.17 0 .356-.057.559-.171l2.615-1.416V6.285c-.06.026-.125.055-.197.089-.072.034-.14.07-.203.108l-2.958 1.695c-.199.11-.346.246-.44.41a1.118 1.118 0 00-.144.574v8.544c0 .25.07.442.207.577.137.136.324.203.561.203zm8.436.153a.641.641 0 00.204-.09l3.269-1.853c.203-.114.352-.251.447-.412.095-.161.143-.354.143-.578V7.18c0-.254-.07-.447-.21-.58-.14-.134-.332-.2-.577-.2-.17 0-.358.057-.565.17l-2.71 1.505v10.563z",
                hybrid: "M22.918 13.579c.13 0 .262-.023.393-.067.131-.044.275-.111.432-.2l4.951-2.875c.267-.157.456-.303.568-.438a.741.741 0 00.168-.49.724.724 0 00-.168-.475c-.112-.136-.301-.282-.568-.438L23.743 5.72a2.539 2.539 0 00-.432-.2 1.22 1.22 0 00-.79 0c-.129.045-.274.111-.435.2l-4.951 2.876c-.267.156-.456.302-.568.438a.724.724 0 00-.168.476c0 .19.056.353.168.489.112.135.301.28.568.438l4.951 2.875c.161.089.306.156.435.2.13.044.261.067.397.067zm0 3.135a.81.81 0 00.343-.076c.11-.05.237-.116.38-.197l5.409-3.192a.775.775 0 00.292-.28.656.656 0 00.095-.33.601.601 0 00-.12-.374.81.81 0 00-.267-.235l-5.847 3.377c-.055.034-.105.06-.152.08a.352.352 0 01-.133.028.366.366 0 01-.14-.029 1.063 1.063 0 01-.152-.08L16.78 12.03a.81.81 0 00-.267.235.601.601 0 00-.12.374c0 .11.032.22.098.33.065.11.164.203.295.28l5.402 3.192c.144.08.27.146.38.197.11.051.227.076.35.076zm0 2.94a.81.81 0 00.343-.077c.11-.05.237-.118.38-.203l5.409-3.186a.825.825 0 00.288-.277.644.644 0 00.099-.34.582.582 0 00-.12-.361.887.887 0 00-.267-.241l-5.847 3.383a2.55 2.55 0 01-.152.076.322.322 0 01-.133.032.335.335 0 01-.14-.032 2.55 2.55 0 01-.152-.076L16.78 14.97a.887.887 0 00-.267.241.582.582 0 00-.12.362c0 .118.032.231.098.34.065.107.164.2.295.275l5.402 3.187c.144.085.27.152.38.203.11.05.227.076.35.076z",
                satellite: "M22.915 18.923c.888 0 1.725-.169 2.51-.507a6.62 6.62 0 002.079-1.41 6.62 6.62 0 001.41-2.079 6.271 6.271 0 00.507-2.51c0-.889-.17-1.726-.508-2.51a6.583 6.583 0 00-1.41-2.076 6.682 6.682 0 00-2.081-1.41 6.26 6.26 0 00-2.514-.51c-.888 0-1.725.17-2.51.51a6.654 6.654 0 00-3.482 3.485 6.271 6.271 0 00-.508 2.511c0 .889.17 1.725.508 2.51a6.62 6.62 0 001.41 2.08c.6.6 1.293 1.07 2.078 1.409a6.271 6.271 0 002.51.507zm0-.92c-.762 0-1.48-.147-2.155-.441a5.732 5.732 0 01-1.781-1.21 5.687 5.687 0 01-1.206-1.78 5.37 5.37 0 01-.438-2.155c0-.762.146-1.479.438-2.152.209-.48.473-.92.794-1.32l.188-.222-.068.254a4.38 4.38 0 00-.127 1.04c0 .695.23 1.23.689 1.607.459.376 1.114.564 1.964.564.115 0 .196.04.245.121.048.08.041.171-.022.273a2.875 2.875 0 00-.311.584c-.055.157-.083.32-.083.489 0 .283.069.525.206.723.138.2.304.361.499.486a3.2 3.2 0 00.57.295l-.247.997c-.076.296-.039.53.111.704.15.174.348.26.594.26.245 0 .478-.114.698-.342l1.543-1.67c.258-.275.443-.524.555-.749.112-.224.168-.448.168-.672a1.11 1.11 0 00-.11-.426 3.165 3.165 0 00-.664-.958 1.378 1.378 0 00-.594-.337 3.345 3.345 0 00-.784-.076h-.342l-.35-.685.965-.362c.271.178.487.313.648.406.16.093.317.14.47.14.194 0 .347-.06.457-.178a.582.582 0 00.155-.435.742.742 0 00-.225-.485l-.99-1.048c-.064-.063-.096-.124-.096-.18 0-.058.028-.118.083-.182a4.83 4.83 0 00.431-.552c.144-.211.216-.442.216-.692a.813.813 0 00-.084-.357l-.045-.078.183.073c.675.292 1.27.695 1.784 1.21a5.709 5.709 0 011.21 1.78c.291.673.437 1.39.437 2.152a5.37 5.37 0 01-.438 2.155 5.687 5.687 0 01-1.206 1.78 5.732 5.732 0 01-1.78 1.21 5.336 5.336 0 01-2.155.44z"
            })
        }
        ,
        6065: (t,e,i)=>{
            var n = i(4872)
              , a = i(4701)
              , o = i(2221)
              , r = i(5377)
              , l = i(7768).Node
              , h = i(351)
              , c = ["Standard", "Hybrid", "Satellite"];
            function s(s) {
                n.call(this),
                this.classList.add(d),
                this.delegate = s,
                this.buttonControls = {},
                this.labels = {},
                c.forEach(function(t) {
                    var e = new l
                      , i = s.mapTypes[t] === s.mapType
                      , n = new r(t,s)
                      , o = (e.addChild(n),
                    new l(a.htmlElement("div", {
                        "aria-hidden": "true",
                        class: u
                    })));
                    o.element.textContent = h.get("Mode." + t),
                    e.addChild(o),
                    this.addChild(e),
                    this.buttonControls[t] = n,
                    this.labels[t] = o,
                    i && (this.selectedButtonControl = n)
                }
                .bind(this))
            }
            var d = "mk-map-type-popover"
              , u = "mk-map-type-label";
            s.prototype = o.inheritPrototype(n, s, {
                open: function() {
                    n.prototype.open.call(this),
                    c.forEach(function(t) {
                        this.buttonControls[t].enabled = !0
                    }
                    .bind(this))
                },
                close: function() {
                    n.prototype.close.call(this),
                    c.forEach(function(t) {
                        this.buttonControls[t].enabled = !1
                    }
                    .bind(this))
                },
                focus: function() {
                    this.selectedButtonControl.element.focus()
                },
                updateSelected: function() {
                    c.forEach(function(t) {
                        var e = this.delegate.mapTypes[t] === this.delegate.mapType;
                        this.buttonControls[t].setSelected(e),
                        e && (this.selectedButtonControl = this.buttonControls[t])
                    }
                    .bind(this))
                },
                updateLabels: function() {
                    c.forEach(function(t) {
                        this.labels[t].element.textContent = h.get("Mode." + t)
                    }
                    .bind(this))
                }
            }),
            t.exports = s
        }
        ,
        4872: (t,e,i)=>{
            var n = i(4701)
              , o = i(2221)
              , s = i(7768).Node;
            function a() {
                s.call(this, n.htmlElement("div", {
                    class: r,
                    role: "dialog",
                    tabindex: "-1"
                })),
                this.element.appendChild(n.createSVGIcon(n.svgElement("g", n.svgElement("rect", {
                    y: 12,
                    x: 0,
                    height: 2,
                    width: 30
                }), n.svgElement("path", {
                    d: "M0 13v-.5c4.038 0 8.305-3.53 12.835-10.477.454-.71 1.005-1.137 1.564-1.326h.001a2.07 2.07 0 011.814.225c.273.175.505.407.68.68C21.525 8.829 25.881 12.5 30 12.5v.5"
                })), {
                    class: l,
                    width: 30,
                    height: 14
                }))
            }
            var r = "mk-popover"
              , l = "mk-popover-arrow"
              , h = "mk-shown"
              , c = "mk-focus-style";
            a.prototype = o.inheritPrototype(s, a, {
                open: function() {
                    this.classList.add(h)
                },
                toggleFocusStyle: function(t) {
                    this.classList.toggle(c, t)
                },
                handleEvent: function(t) {
                    this.classList.contains(h) && this.focus()
                },
                focus: function() {
                    this.element.focus()
                },
                close: function() {
                    this.classList.remove(h)
                },
                didMoveToParent: function(t) {
                    t ? this.element.addEventListener("transitionend", this) : this.element.removeEventListener("transitionend", this)
                }
            }),
            t.exports = a
        }
        ,
        4856: (t,e,i)=>{
            var n = i(4701)
              , o = i(2221)
              , s = i(5875)
              , a = i(351)
              , r = i(7017)
              , l = i(5323)
              , h = i(7768)
              , c = i(5097)
              , d = i(5869)
              , u = "mk-pressed";
            function p(t) {
                this.element = n.htmlElement("div"),
                s.call(this, this.element),
                this.classList.add("mk-rotation-control");
                var e = n.htmlElement("input", {
                    class: "mk-rotation-slider",
                    type: "range",
                    min: 0,
                    max: 360,
                    value: 0,
                    "aria-label": a.get("Compass.Degrees.Plural", {
                        n: 0
                    })
                })
                  , e = (e.addEventListener("change", this),
                this._slider = e,
                this._sliderNode = new h.Node(e),
                this.element.appendChild(e),
                this._compassNode = new h.Node(n.htmlElement("div", {
                    class: "mk-rotation-wrapper"
                }, n.htmlElement("img", {
                    role: "presentation"
                }))),
                this.element.appendChild(this._compassNode.element),
                n.htmlElement("div"));
                this._heading = e,
                this._headingNode = new h.Node(e),
                this._headingNode.classList.add("mk-heading"),
                this.element.appendChild(e),
                d.state === d.States.UNINITIALIZED ? d.addEventListener(d.Events.Initialized, function t() {
                    d.removeEventListener(d.Events.Initialized, t),
                    g(this._compassNode.element.firstChild)
                }) : g(this._compassNode.element.firstChild),
                this._map = t,
                this._rotation = 0,
                this._activeKeyRightAt = null,
                this._activeKeyLeftAt = null,
                this._updateLabels()
            }
            function m(t, e, i, n) {
                var o = e - n
                  , s = t - i;
                return i < t ? e < n ? 90 + _(Math.atan(o / s)) : 180 - _(Math.atan(s / o)) : e < n ? 360 - _(Math.atan(s / o)) : 0 != s ? 270 + _(Math.atan(o / s)) : 180
            }
            function _(t) {
                return 180 * t / Math.PI
            }
            function g(t) {
                var e = r.createImageUrl("icons/compass-sheet.svg");
                t.crossOrigin = n.getCorsAttribute(d.distUrlWithCredentials),
                t.src = e
            }
            p.prototype = o.inheritPrototype(s, p, {
                enable: function() {
                    s.prototype.enable.call(this),
                    this._setupGestureRecognizers(),
                    this._sliderNode.removeAttribute("aria-disabled"),
                    this._sliderNode.setAttribute("tabindex", 0)
                },
                disable: function() {
                    s.prototype.disable.call(this),
                    this._sliderNode.setAttribute("aria-disabled", "true"),
                    this._sliderNode.setAttribute("tabindex", -1)
                },
                set rotation(t) {
                    t === this._rotation || 360 === this._rotation && 0 === t || (this._rotation = t,
                    this._updateHeading(),
                    this._updateSlider(),
                    this._rotateTo(t))
                },
                localeChanged: function(t) {
                    this._updateLabels()
                },
                mapWasDestroyed: function() {
                    delete this._map
                },
                updateTintColor: function(t) {
                    this.tintColor !== t && (this.tintColor = t,
                    this._heading.style.color = t)
                },
                updateImage: function(t, e) {
                    this._dprValue === t && this._darkColorScheme === e || (this._dprValue = t,
                    this._darkColorScheme = e,
                    d.state !== d.States.UNINITIALIZED && g(this._compassNode.element))
                },
                touchesEnded: function(t) {
                    this.saveEndEventProps(t)
                },
                clicked: function(t) {
                    this.checkClickEventProps(t) || this.reset(t)
                },
                reset: function(t) {
                    this._map && this._center && this._map.compassDraggingDidEnd(),
                    this.classList.remove(u),
                    !t || t.target !== this._tapRecognizer && "click" !== t.type && t.keyCode !== o.KeyCodes.UpArrow && t.keyCode !== o.KeyCodes.SpaceBar || this._map.setRotationAnimated(0, !0),
                    delete this._angleOffset,
                    delete this._restricted
                },
                spaceBarKeyDown: function(t) {
                    this.reset(t)
                },
                upArrowKeyUp: function(t) {
                    this.reset(t)
                },
                rightArrowKeyDown: function(t) {
                    this._beginKeyboardRotate(t)
                },
                rightArrowKeyUp: function(t) {
                    this._endKeyboardRotate(t)
                },
                leftArrowKeyDown: function(t) {
                    this._beginKeyboardRotate(t)
                },
                leftArrowKeyUp: function(t) {
                    this._endKeyboardRotate(t)
                },
                performScheduledUpdate: function() {
                    if (!this._activeKeyRightAt && !this._activeKeyLeftAt)
                        return !1;
                    this._keyboardRotate(),
                    c.scheduleOnNextFrame(this)
                },
                handleEvent: function(t) {
                    switch (t.target) {
                    case this._tapRecognizer:
                        t.target.state === l.States.Recognized && this.reset(t);
                        break;
                    case this._panRecognizer:
                        t.target.state === l.States.Possible ? this._beginDrag(t) : t.target.state === l.States.Changed ? this._drag(t) : t.target.state !== l.States.Recognized && t.target.state !== l.States.Failed || this.reset(t);
                        break;
                    case this._slider:
                        this._handleSliderChange(t)
                    }
                },
                fadeIn: function() {
                    this.element.style.opacity = 1
                },
                fadeOut: function() {
                    this.element.style.opacity = 0
                },
                _updateHeading: function() {
                    var t = 360 - this._rotation
                      , t = Math.round(t / 360 * 4) % 4;
                    this._heading.textContent = a.get("Compass." + ["NorthIndicator", "EastIndicator", "SouthIndicator", "WestIndicator"][t])
                },
                _updateLabels: function() {
                    this._updateHeading(),
                    n.updateLabel(this.element, a.get("Compass.Tooltip"))
                },
                _rotateTo: function(t) {
                    return Math.abs(t) < 5 && (t = 0),
                    this._compassNode.transform = "rotate(" + t + "deg)",
                    t
                },
                _setupGestureRecognizers: function() {
                    var t = new l.Tap
                      , t = (t.numberOfTapsRequired = 1,
                    t.addEventListener("statechange", this),
                    t.target = this.element,
                    this._tapRecognizer = t,
                    new l.Pan);
                    t.addEventListener("statechange", this),
                    t.target = this.element,
                    this._panRecognizer = t
                },
                removeEventListeners: function() {
                    this._tapRecognizer.removeEventListener("statechange", this),
                    this._tapRecognizer.enabled = !1,
                    this._tapRecognizer.target = null,
                    this._panRecognizer.removeEventListener("statechange", this),
                    this._panRecognizer.enabled = !1,
                    this._panRecognizer.target = null,
                    this._slider.removeEventListener("change", this)
                },
                _beginDrag: function(t) {
                    var e;
                    this._map.compassDraggingWillStart() && (this.classList.add(u),
                    e = this.element.getBoundingClientRect(),
                    this._center = {
                        x: e.right - e.width / 2,
                        y: e.bottom - e.height / 2
                    },
                    e = m(t.target.locationInClient().x, t.target.locationInClient().y, this._center.x, this._center.y),
                    this._angleOffset = e - this._map.rotation,
                    this._restricted = this._map.compassRotationWillStart())
                },
                _drag: function(t) {
                    var e, i;
                    this._center && !isNaN(this._angleOffset) && (t = m(t.target.locationInClient().x, t.target.locationInClient().y, this._center.x, this._center.y) - this._angleOffset,
                    this._restricted && (e = o.mod(t, 360),
                    i = n.restrictRotation(e),
                    t = e < 180 ? i + .025 * (e - i) : i - .025 * (i - e)),
                    t = this._rotateTo(t),
                    this._map.setRotationAnimated(t, !1, !0))
                },
                _beginKeyboardRotate: function(t) {
                    var e = this._activeKeyRightAt && t.keyCode === o.KeyCodes.RightArrow
                      , i = this._activeKeyLeftAt && t.keyCode === o.KeyCodes.LeftArrow;
                    e || i || (e = Date.now(),
                    t.keyCode === o.KeyCodes.RightArrow ? this._activeKeyRightAt = e : this._activeKeyLeftAt = e,
                    this._timeAtLastFrame = e,
                    c.scheduleASAP(this),
                    this._restricted = this._map.compassRotationWillStart())
                },
                _keyboardRotate: function() {
                    var t, e, i = Math.max(this._activeKeyRightAt || 0, this._activeKeyLeftAt || 0);
                    i && this._timeAtLastFrame && (e = Date.now(),
                    t = this._rotation,
                    e = e - this._timeAtLastFrame,
                    t += (4 * (i === this._activeKeyLeftAt) ? -1 : 1) * (60 * e) / 1e3,
                    this._map.rotation = this._restricted ? n.restrictRotation(o.mod(t, 360)) : t,
                    this._timeAtLastFrame = Date.now())
                },
                _endKeyboardRotate: function(t) {
                    t.keyCode === o.KeyCodes.RightArrow ? this._activeKeyRightAt = null : this._activeKeyLeftAt = null,
                    this._activeKeyRightAt || this._activeKeyLeftAt || (this._timeAtLastFrame = null),
                    this._map.compassRotationDidEnd()
                },
                _handleSliderChange: function(t) {
                    var e, t = parseInt(t.target.value);
                    t !== this._rotation && (0 === (e = t) ? e = 360 : 360 === t && (e = 0),
                    this.rotation = e,
                    this._map.setRotationAnimated(e, !1, !0))
                },
                _updateSlider: function() {
                    var t = Math.round(this._rotation)
                      , t = (this._slider.value = t,
                    a.get(1 === t ? "Compass.Degrees.Single" : "Compass.Degrees.Plural", {
                        n: t
                    }));
                    this._sliderNode.setAttribute("aria-label", t)
                }
            }),
            t.exports = p
        }
        ,
        6278: (t,e,i)=>{
            var n = i(5875)
              , o = i(5479)
              , s = i(2221)
              , a = i(4701)
              , r = i(351)
              , l = i(8756)
              , h = i(2640)
              , c = i(462)
              , d = i(3045)
              , u = i(1840).FeatureVisibility
              , p = new d(170,20);
            function m(t) {
                this._map = t,
                this.scene = new c.Scene,
                this.scene.size = p,
                this.node = this.scene.addChild(new h),
                this.node.size = p,
                this.node.position = new l(0,0),
                this.node.opacity = 0,
                this.node.l10n = r,
                this.node.useMetric = t.useMetric,
                n.call(this, this.scene.element),
                this.classList.add("mk-scale"),
                this.element.setAttribute("aria-hidden", "true"),
                this.size = p
            }
            m.prototype = s.inheritPrototype(n, m, {
                get shouldDisplayScale() {
                    return this._map._showsScale === u.Visible || this._map._showsScale === u.Adaptive && this._map.cameraIsZooming
                },
                updateTheme: function(t) {
                    this.node.theme = h.Themes[t]
                },
                update: function() {
                    var t, e = this._map;
                    this.node && this.shouldDisplayScale && (t = e.renderingMapRect.origin.toCoordinate().latitude,
                    7500 <= (t = e.renderingMapRect.size.width / o.mapUnitsPerMeterAtLatitude(t)) / e._visibleFrame.size.width * a.devicePixelRatio ? this.hideIfNeeded(!0) : (this.node.distance = t,
                    this.node.useMetric = this._map.useMetric,
                    this.node.setOpacityAnimated(1, !1)))
                },
                hideIfNeeded: function(t) {
                    !this.node || this.shouldDisplayScale && !t || this.node.setOpacityAnimated(0, !0)
                },
                localeChanged: function() {
                    this.node.useMetric = this._map.useMetric
                }
            }),
            t.exports = m
        }
        ,
        7813: (t,e,i)=>{
            var n = i(4701)
              , o = i(6426)
              , s = i(2221)
              , a = i(5875)
              , r = i(351)
              , l = i(7768)
              , h = i(7333);
            function c(t, e, i) {
                a.call(this, n.htmlElement("div", {
                    class: d.CONTROL,
                    role: "button",
                    tabindex: "0"
                })),
                this._wrapper = n.htmlElement("div", {
                    class: d.WRAPPER
                }),
                this.element.appendChild(this._wrapper),
                this._arrowIconNode = new l.Node(n.createSVGIcon(n.svgElement("path"), {
                    class: d.ARROW_ICON,
                    viewBox: p
                })),
                this._waitingIconNode = new l.Node(function() {
                    for (var t = [], e = 0; e < 8; ++e)
                        t.push(n.svgElement("rect", {
                            x: -1.25,
                            y: 5,
                            width: 2.5,
                            height: 6,
                            rx: 1.25,
                            transform: "rotate(" + 45 * e + ")"
                        }));
                    var i = ["g", {
                        transform: "scale(0.6666666666666666, -0.6666666666666666)"
                    }].concat(t);
                    return n.createSVGIcon(n.svgElement.apply(null, i), {
                        class: [d.WAITING_ICON, d.SCALED_OUT].join(" "),
                        viewBox: m
                    })
                }()),
                this._wrapper.appendChild(this._arrowIconNode.element),
                this._wrapper.appendChild(this._waitingIconNode.element),
                this._errorPopover = new h,
                this._updateLabels(),
                this._updateArrowIcon(),
                this._waitingIconBlades = this._waitingIconNode.element.querySelectorAll("rect"),
                this._map = t,
                this._rtl = e,
                this._focusDelegate = i
            }
            t.exports = c;
            var d = {
                CONTROL: "mk-user-location-control",
                WRAPPER: "mk-user-location-control-wrapper",
                PRESSED: "mk-pressed",
                TRACKING: "mk-tracking",
                WAITING: "mk-waiting",
                DISABLED: "mk-disabled",
                WAITING_ICON: "mk-icon-waiting",
                ARROW_ICON: "mk-icon-arrow",
                SCALED_OUT: "mk-scaled-out"
            }
              , u = (c.States = {
                Default: "default",
                Waiting: "waiting",
                Tracking: "tracking",
                Disabled: "disabled"
            },
            c.EVENTS = {
                PRESSED: "pressed"
            },
            c.prototype = s.inheritPrototype(a, c, {
                _state: c.States.Default,
                _tintColor: "",
                get state() {
                    return this._state
                },
                set state(t) {
                    this._state !== t && (this._state = t,
                    this.classList.toggle(d.TRACKING, this.isTrackingState()),
                    this.classList.toggle(d.WAITING, this.isWaitingState()),
                    this.classList.toggle(d.DISABLED, this.isDisabledState()),
                    this.updateTintColor(this._tintColor),
                    this.isWaitingState() ? this._animateArrowIconOut() : this._animateWaitingIconOut())
                },
                isDefaultState: function() {
                    return this.state === c.States.Default
                },
                toDefaultState: function() {
                    this.state = c.States.Default,
                    this._updateArrowIcon(),
                    this._closeErrorPopover()
                },
                isTrackingState: function() {
                    return this.state === c.States.Tracking
                },
                toTrackingState: function() {
                    this.state = c.States.Tracking,
                    this._updateArrowIcon(),
                    this._closeErrorPopover()
                },
                isWaitingState: function() {
                    return this.state === c.States.Waiting
                },
                toWaitingState: function() {
                    this.state = c.States.Waiting
                },
                isDisabledState: function() {
                    return this.state === c.States.Disabled
                },
                toDisabledState: function() {
                    this._map.tracksUserLocation && this._map.userLocationAnnotation || (this.state = c.States.Disabled,
                    this._updateArrowIcon(),
                    this._openErrorPopover())
                },
                handleEvent: function(t) {
                    switch (t.type) {
                    case n.startEventType:
                        var e = n.getShadowDOMTargetFromEvent(this.element, t);
                        this._errorPopover.errorMessageElement.contains(e) || (this._closeErrorPopover(),
                        window.removeEventListener(n.startEventType, this, !0));
                        break;
                    case "keydown":
                        27 === t.keyCode && this._closeErrorPopover();
                        break;
                    case "blur":
                        this._errorPopover.element.contains(t.relatedTarget) || this._closeErrorPopover()
                    }
                },
                touchesBegan: function(t) {
                    this._pressed(t)
                },
                touchesEnded: function() {
                    this.reset()
                },
                clicked: function() {
                    this.dispatchEvent(new o.Event(c.EVENTS.PRESSED))
                },
                touchesCanceled: function(t) {
                    this.reset()
                },
                spaceBarKeyDown: function(t) {
                    this._pressed(t)
                },
                spaceBarKeyUp: function(t) {
                    this.reset(t),
                    this.dispatchEvent(new o.Event(c.EVENTS.PRESSED))
                },
                updateTintColor: function(t) {
                    this._tintColor = t,
                    this._arrowIconNode.element.querySelector("g").style.fill = this.isTrackingState() ? "" : t,
                    this._waitingIconNode.element.querySelector("g").style.fill = t,
                    this.element.style.backgroundColor = this.isTrackingState() ? t : ""
                },
                reset: function() {
                    this.classList.contains(d.PRESSED) && (this.classList.remove(d.PRESSED),
                    this._focusDelegate.controlWasReleased(this),
                    this.isDefaultState() || this.isDisabledState() ? this.toWaitingState() : this.toDefaultState()),
                    delete this._mousedown,
                    window.removeEventListener(n.endEventType, this),
                    n.supportsPointerEvents ? window.removeEventListener("pointercancel", this) : n.supportsTouches && window.removeEventListener("touchcancel", this)
                },
                localeChanged: function(t) {
                    this._updateLabels(),
                    this._rtl = t.locale.rtl,
                    this._errorPopover.update()
                },
                mapWasDestroyed: function() {
                    delete this._map
                },
                focused: function(t) {
                    this._focusDelegate.controlDidGetFocus(this)
                },
                blurred: function(t) {
                    this._focusDelegate.controlDidLoseFocus(this)
                },
                didMoveToParent: function(t) {
                    t ? this.parent.insertAfter(this._errorPopover, this) : (this._closeErrorPopover(),
                    this._errorPopover.remove())
                },
                _updateLabels: function() {
                    n.updateLabel(this.element, r.get("Track.User.Location.Tooltip"))
                },
                _pressed: function(t) {
                    this.classList.add(d.PRESSED),
                    this._focusDelegate.controlWasPressed(this)
                },
                _animateArrowIconOut: function() {
                    this._arrowIconNode.classList.add(d.SCALED_OUT),
                    this._waitingIconNode.classList.remove(d.SCALED_OUT)
                },
                _animateWaitingIconOut: function() {
                    this._waitingIconNode.classList.add(d.SCALED_OUT),
                    this._arrowIconNode.classList.remove(d.SCALED_OUT)
                },
                _openErrorPopover: function() {
                    this._errorPopover.open(),
                    window.addEventListener(n.startEventType, this, !0),
                    window.addEventListener("keydown", this, !0),
                    this._errorPopover.element.addEventListener("blur", this, !0)
                },
                _closeErrorPopover: function() {
                    this._errorPopover.close(),
                    window.removeEventListener(n.startEventType, this, !0),
                    window.removeEventListener("keydown", this, !0),
                    this._errorPopover.element.removeEventListener("blur", this, !0)
                },
                _updateArrowIcon: function() {
                    this._arrowIconNode.element.querySelector("path").setAttribute("d", u[this.state])
                }
            }),
            {
                default: "M24.675 17.91L29.48 7.512c.514-1.11-.349-1.847-1.409-1.358l-10.448 4.818c-.971.444-.768 1.802.342 1.809l4.723.019c.095 0 .127.038.127.133l.013 4.691c0 1.092 1.365 1.34 1.847.286zm-.711-1.448l.025-4.272c0-.387-.184-.577-.584-.577l-4.272.025c-.05 0-.07-.057-.012-.089l8.95-4.094c.076-.032.12.013.082.089l-4.1 8.925c-.025.063-.089.05-.089-.007z",
                disabled: "M27.112 12.641l2.368-5.129c.514-1.11-.349-1.847-1.409-1.358l-5.097 2.348.882.883 4.215-1.93c.076-.032.12.013.082.089l-1.93 4.208.89.89zm2.4 4.196a.51.51 0 000-.717l-9.934-9.934a.517.517 0 00-.724 0 .522.522 0 000 .717l9.947 9.934c.197.197.52.197.71 0zm-4.837 1.073l1.301-2.812-.882-.883-1.041 2.254c-.025.063-.089.05-.089-.007l.02-3.351-1.493-1.492-3.358.02c-.05 0-.07-.058-.012-.09l2.266-1.034-.876-.876-2.888 1.333c-.971.444-.768 1.802.342 1.809l4.723.019c.095 0 .127.038.127.133l.013 4.691c0 1.092 1.365 1.34 1.847.286z",
                tracking: "M24.675 17.91L29.48 7.512c.514-1.11-.349-1.847-1.409-1.358l-10.448 4.818c-.971.444-.768 1.802.342 1.809l4.723.019c.095 0 .127.038.127.133l.013 4.691c0 1.092 1.365 1.34 1.847.286z"
            })
              , p = "0 0 45 24"
              , m = "-22.5 -12 45 24"
        }
        ,
        7333: (t,e,i)=>{
            var n = i(4872)
              , o = i(2221)
              , s = i(4701)
              , a = i(7768).Node
              , r = i(351);
            function l() {
                n.call(this),
                this.classList.add(h),
                this._errorMessageElement = this._createErrorMessageElement(),
                this._errorMessageNode = new a(this._errorMessageElement),
                this.update(),
                this.addChild(this._errorMessageNode)
            }
            var h = "mk-user-location-error-popover"
              , c = "mk-error-message"
              , d = "mk-error-text"
              , u = "mk-error-support";
            l.prototype = o.inheritPrototype(n, l, {
                get errorMessageElement() {
                    return this._errorMessageElement
                },
                update: function() {
                    this._errorMessageElement.getElementsByClassName(d)[0].textContent = r.get("Location.Error.Message") + " ",
                    this._supportLink.textContent = r.get("Location.Error.Support.Label"),
                    s.supportsTouches ? this._supportLink.href = "https://support.apple.com/HT203033" : this._supportLink.href = "https://support.apple.com/guide/mac-help/allow-apps-to-detect-the-location-of-your-mac-mh35873/mac"
                },
                _createErrorMessageElement: function() {
                    var t = s.htmlElement("div", {
                        class: c
                    });
                    return this._supportLink = s.htmlElement("a", {
                        class: u,
                        target: "__blank"
                    }),
                    t.appendChild(s.htmlElement("span", {
                        class: d
                    })),
                    t.appendChild(this._supportLink),
                    t
                }
            }),
            t.exports = l
        }
        ,
        2: (t,e,i)=>{
            var n = i(4701)
              , o = i(6426)
              , s = i(2221)
              , a = i(5875)
              , r = i(7768)
              , l = i(351);
            function h() {
                var t, e = n.htmlElement("div");
                a.call(this, e),
                this.classList.add(c.CONTROL),
                this._zoomInButton = n.htmlElement("div", {
                    role: "button",
                    tabindex: "0"
                }),
                this._zoomInButtonNode = new r.Node(this._zoomInButton),
                this._zoomInButtonNode.classList.add(c.BUTTON_ZOOM_IN),
                this._zoomInButton.appendChild((t = n.svgElement("path", {
                    d: "M11.813 17.404c.4 0 .724-.33.724-.705v-3.974h3.872a.726.726 0 00.717-.723.73.73 0 00-.717-.724h-3.872V7.305a.72.72 0 00-.724-.705.724.724 0 00-.724.705v3.973H7.217a.739.739 0 00-.717.724c0 .4.343.723.717.723h3.872V16.7c0 .375.33.705.724.705z"
                }),
                n.createSVGIcon(t, {
                    width: 24,
                    height: 24
                }))),
                e.appendChild(this._zoomInButton),
                e.appendChild(n.htmlElement("div", {
                    class: c.BUTTON_DIVIDER
                })),
                this._zoomOutButton = n.htmlElement("div", {
                    role: "button",
                    tabindex: "0"
                }),
                this._zoomOutButtonNode = new r.Node(this._zoomOutButton),
                this._zoomOutButtonNode.classList.add(c.BUTTON_ZOOM_OUT),
                this._zoomOutButton.appendChild((t = n.svgElement("path", {
                    d: "M16.325 12.75c.364 0 .675-.336.675-.75 0-.408-.31-.75-.675-.75h-8.65c-.352 0-.675.342-.675.75 0 .414.323.75.675.75h8.65z"
                }),
                n.createSVGIcon(t, {
                    width: 24,
                    height: 24
                }))),
                e.appendChild(this._zoomOutButton),
                this._updateLabels()
            }
            t.exports = h;
            var c = {
                CONTROL: "mk-zoom-controls",
                BUTTON_DIVIDER: "mk-divider",
                BUTTON_ZOOM_IN: "mk-zoom-in",
                BUTTON_ZOOM_OUT: "mk-zoom-out",
                PRESSED: "mk-pressed",
                PILL_PRESSED: "mk-pill-pressed",
                DISABLED: "mk-disabled"
            };
            function d(t, e) {
                e ? (t.classList.remove(c.DISABLED),
                t.removeAttribute("aria-disabled"),
                t.setAttribute("tabindex", 0)) : (t.classList.add(c.DISABLED),
                t.setAttribute("aria-disabled", "true"),
                t.setAttribute("tabindex", -1))
            }
            h.EVENTS = {
                ZOOM_START: "zoom-start",
                ZOOM_END: "zoom-end"
            },
            h.prototype = s.inheritPrototype(a, h, {
                _zoomInEnabled: !0,
                _zoomOutEnabled: !0,
                get zoomInEnabled() {
                    return this._zoomInEnabled
                },
                set zoomInEnabled(t) {
                    this._enabled && t === this._zoomInEnabled || (this._zoomInEnabled = this._enabled && t,
                    d(this._zoomInButtonNode, this._zoomInEnabled))
                },
                get zoomOutEnabled() {
                    return this._zoomOutEnabled
                },
                set zoomOutEnabled(t) {
                    this._enabled && t === this._zoomOutEnabled || (this._zoomOutEnabled = this._enabled && t,
                    d(this._zoomOutButtonNode, this._zoomOutEnabled))
                },
                localeChanged: function(t) {
                    this._updateLabels()
                },
                touchesBegan: function(t) {
                    this._pressed(t)
                },
                touchesEnded: function(t) {
                    this.saveEndEventProps(t),
                    this.reset(t)
                },
                clicked: function(t) {
                    this.checkClickEventProps(t) || (this._pressed(t),
                    this.reset(t))
                },
                touchesCanceled: function(t) {
                    this.reset(t)
                },
                focused: function(t) {
                    this.updateTintColor(this.tintColor),
                    t.target.style.fill = n.focusColor
                },
                blurred: function(t) {
                    this.updateTintColor(this.tintColor)
                },
                spaceBarKeyDown: function(t) {
                    this._pressed(t)
                },
                spaceBarKeyUp: function(t) {
                    this.reset(t)
                },
                updateTintColor: function(t) {
                    this.tintColor = t,
                    this._zoomInButton.firstChild.style.fill = t,
                    this._zoomOutButton.firstChild.style.fill = t
                },
                reset: function(t) {
                    var e;
                    this._zoomInButtonNode.classList.contains(c.PRESSED) ? e = this._zoomInButtonNode : this._zoomOutButtonNode.classList.contains(c.PRESSED) && (e = this._zoomOutButtonNode),
                    e && (e.classList.remove(c.PRESSED),
                    this.classList.remove(c.PILL_PRESSED),
                    e = new o.Event(h.EVENTS.ZOOM_END),
                    this.dispatchEvent(e)),
                    window.removeEventListener(n.endEventType, this),
                    n.supportsPointerEvents ? window.removeEventListener("pointercancel", this) : n.supportsTouches && window.removeEventListener("touchcancel", this)
                },
                _clearLabels: function(t) {
                    n.updateLabel(this._zoomInButtonNode, ""),
                    n.updateLabel(this._zoomOutButtonNode, "")
                },
                _updateLabels: function(t) {
                    n.updateLabel(this._zoomInButtonNode, l.get("Zoom.In.Tooltip")),
                    n.updateLabel(this._zoomOutButtonNode, l.get("Zoom.Out.Tooltip"))
                },
                _pressed: function(t) {
                    var e, t = this._findButtonNodeFromButtonDOMElement(n.parentNodeForSvgTarget(t.target));
                    t && !t.classList.contains(c.DISABLED) && (this.hasFocus && (e = n.containingDocumentOrShadowRoot(this.element).activeElement) !== t.element && e.blur(),
                    t.classList.add(c.PRESSED),
                    this.classList.add(c.PILL_PRESSED),
                    (e = new o.Event(h.EVENTS.ZOOM_START)).zoomIn = t === this._zoomInButtonNode,
                    this.dispatchEvent(e))
                },
                _findButtonNodeFromButtonDOMElement: function(t) {
                    return t === this._zoomOutButton ? this._zoomOutButtonNode : t === this._zoomInButton ? this._zoomInButtonNode : null
                }
            })
        }
        ,
        1389: t=>{
            t.exports = ".mk-map-view{width:100%;height:100%;overflow:hidden;-webkit-tap-highlight-color:transparent}.mk-map-view.mk-dragging-annotation{cursor:none}.mk-map-view.mk-disable-all-gestures{touch-action:none}.mk-map-view.mk-disable-pinch-gestures{touch-action:pan-x pan-y}.mk-map-view.mk-disable-zoom-gestures{touch-action:manipulation}.mk-map-view.mk-disable-pan-gestures{touch-action:none;touch-action:pinch-zoom}div.mk-map-view.mk-map-view img,div.mk-map-view.mk-map-view svg{margin:0;padding:0}.mk-annotation-container,.mk-map-view{z-index:0}.mk-map-view>*{position:absolute;left:0;-webkit-user-select:none;-moz-user-select:none}.mk-map-view .rt-root{letter-spacing:.3px}.mk-controls-container{position:absolute;overflow:hidden;top:0;bottom:0;left:0;right:0;z-index:3;pointer-events:none}.mk-map-view .mk-annotation-container,.mk-map-view .mk-controls-container{-ms-user-select:text}.mk-map-view.mk-panning ::selection{background:0 0}.mk-map-view.mk-dragging-cursor{cursor:pointer;cursor:-moz-grabbing;cursor:-webkit-grabbing;cursor:grabbing}.mk-map-view>iframe{width:100%;height:100%;pointer-events:none;opacity:0;border:0}"
        }
        ,
        8717: (t,e,i)=>{
            var n = i(4891)
              , o = i(5869)
              , s = i(6814)
              , a = i(2221)
              , r = i(5410)
              , l = i(7664)
              , h = i(3276)
              , c = i(8947)
              , i = i(7017);
            function d() {
                throw new TypeError("[MapKit] MapKit may not be constructed.")
            }
            function u(t) {
                var e = new s.Event(t.type);
                e.status = t.status,
                t.message && (e.message = t.message),
                _.dispatchEvent(e)
            }
            d.prototype = a.inheritPrototype(s.EventTarget, d, {
                init: function(t) {
                    o.init(t),
                    o.addEventListener(o.Events.Changed, u),
                    o.addEventListener(o.Events.Error, u)
                },
                get version() {
                    return n.version
                },
                get build() {
                    return n.build + "" + r
                },
                get language() {
                    return o.language
                },
                set language(t) {
                    o.language = t
                },
                toString: function() {
                    return ["MapKit JS", this.version, "(" + this.build + ")"].join(" ")
                },
                get _tileProvider() {
                    return o.tileProvider
                },
                get _countryCode() {
                    return o.countryCode
                },
                set _countryCode(t) {
                    o.countryCode = t
                },
                _restore: function() {
                    o._restore()
                },
                get _environment() {
                    return o.environment
                }
            });
            var p = ["importGeoJSON", "FeatureVisibility", "CoordinateRegion", "CoordinateSpan", "Coordinate", "BoundingRegion", "MapPoint", "MapRect", "MapSize", "Padding", "CameraZoomRange", "MapFeatureType", "Style", "LineGradient", "CircleOverlay", "PolylineOverlay", "PolygonOverlay", "Geocoder", "Search", "Directions", "PointsOfInterestSearch", "Map", "Annotation", "PinAnnotation", "ImageAnnotation", "MarkerAnnotation", "MapFeatureAnnotation", "TileOverlay", "PointOfInterestCategory", "PointOfInterestFilter"]
              , m = !1
              , _ = (h(l),
            l.addEventListener(l.Events.LOAD, function(t) {
                var i = t.jsModules;
                i.mapkit && Object.keys(i.mapkit).forEach(function(t) {
                    var e = p.indexOf(t);
                    -1 !== e ? (delete d.prototype[t],
                    d.prototype[t] = i.mapkit[t],
                    p.splice(e, 1)) : t in d.prototype || (d.prototype[t] = i.mapkit[t])
                }),
                i.MapInternal && (delete d.prototype.maps,
                Object.defineProperty(d.prototype, "maps", {
                    get: function() {
                        return i.MapInternal.maps
                    },
                    configurable: !0
                })),
                i.PointOfInterestFilter && (delete d.prototype.filterIncludingAllCategories,
                delete d.prototype.filterExcludingAllCategories,
                Object.defineProperties(d.prototype, {
                    filterIncludingAllCategories: {
                        get: function() {
                            return i.PointOfInterestFilter.filterIncludingAllCategories
                        },
                        configurable: !0
                    },
                    filterExcludingAllCategories: {
                        get: function() {
                            return i.PointOfInterestFilter.filterExcludingAllCategories
                        },
                        configurable: !0
                    }
                })),
                !m && l.jsModules.css && l.jsModules.utils && (document.head.appendChild(l.jsModules.utils.htmlElement("style", l.jsModules.css)),
                m = !0)
            }),
            l.loadAll(),
            c(i.findScriptAndSetBasePath()),
            o.state !== o.States.UNINITIALIZED && (o.addEventListener(o.Events.Changed, u),
            o.addEventListener(o.Events.Error, u)),
            Object.create(d.prototype));
            t.exports = _
        }
        ,
        8947: (t,e,i)=>{
            var l = i(5869);
            i(7664),
            t.exports = function(t) {
                var e, i, n, o, s, a, r;
                t && (e = t.dataset.callback,
                i = t.dataset.language,
                n = t.dataset.libraries,
                o = t.dataset.initialToken,
                s = t.dataset.distUrl,
                t = t.dataset.proxyPrefix,
                a = {},
                e || i || n || o || s || t) && (i && (a.language = i),
                o && (a.authorizationCallback = function(t) {
                    t(o)
                }
                ),
                s && (a._distUrl = s),
                t && (a._proxyPrefixes = [t]),
                l.init(a, !0),
                e ? setTimeout(function() {
                    "function" == typeof window[e] && window[e]()
                }) : (r = function() {
                    document.removeEventListener("DOMContentLoaded", r),
                    setTimeout(function() {
                        l.authorizationCallback === a.authorizationCallback && console.warn("[MapKit] MapKit was initialized with a static authorization token. authorizationCallback is needed to refresh authorization later.")
                    }, 5e3)
                }
                ,
                o && ("loading" === document.readyState ? document.addEventListener("DOMContentLoaded", r) : r())))
            }
        }
        ,
        5911: (t,e,i)=>{
            var n = i(4701)
              , o = i(2221)
              , s = i(5097);
            function a(t, e) {
                this._delegate = e,
                this._snapsToIntegralZoomLevels = t
            }
            a.prototype = {
                constructor: a,
                _speed: .03,
                _startTime: 0,
                _shouldStop: !1,
                _animating: !1,
                start: function(t, e) {
                    var i = Date.now();
                    return this._gasPedalValue = 0,
                    this._startTime = i,
                    this._shouldStop && this._cleanUp(),
                    this._shouldStop = !1,
                    this.zoomsIn = !!e,
                    n.supportsForceTouch && window.addEventListener("webkitmouseforcechanged", this),
                    !this._animating && (this._animating = !0,
                    this._zoomLevel = t,
                    this._timeAtLastFrame = i,
                    s.scheduleOnNextFrame(this),
                    !0)
                },
                stop: function() {
                    this._shouldStop = !0,
                    n.supportsForceTouch && (window.removeEventListener("webkitmouseforcechanged", this),
                    delete this._speed)
                },
                set snapsToIntegralZoomLevels(t) {
                    this._snapsToIntegralZoomLevels = !!t
                },
                performScheduledUpdate: function() {
                    var t = !0
                      , e = Date.now()
                      , i = e - this._timeAtLastFrame
                      , n = this._speed * (this.zoomsIn ? 1 : -1);
                    this._zoomLevel += 60 * i * o.log2(1 + n) / 1e3,
                    this._timeAtLastFrame = e,
                    this._shouldStop && 250 <= e - this._startTime && (this._zoomLevelAtWhichToStop ? (t = this.zoomsIn && this._zoomLevel < this._zoomLevelAtWhichToStop || !this.zoomsIn && this._zoomLevel > this._zoomLevelAtWhichToStop) || (this._zoomLevel = this._zoomLevelAtWhichToStop) : this._snapsToIntegralZoomLevels ? this._zoomLevelAtWhichToStop = this.zoomsIn ? Math.ceil(this._zoomLevel) : Math.floor(this._zoomLevel) : t = !1),
                    this._delegate && this._delegate.linearZoomControllerDidZoom(this._zoomLevel),
                    t ? s.scheduleOnNextFrame(this) : this._cleanUp()
                },
                handleEvent: function(t) {
                    this._handleForceChangedEvent(t)
                },
                _handleForceChangedEvent: function(t) {
                    t = o.clamp(t.webkitForce, MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN, MouseEvent.WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN) - MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN;
                    .01 < Math.abs(t - this._gasPedalValue) && (this._gasPedalValue = t),
                    this._speed = .01 + this._gasPedalValue * (.06 - .01)
                },
                _cleanUp: function() {
                    this._animating = !1,
                    this._shouldStop = !1,
                    delete this._zoomLevelAtWhichToStop,
                    this._delegate && this._delegate.linearZoomControllerDidStop()
                }
            },
            t.exports = a
        }
        ,
        2562: (t,e,i)=>{
            var n = i(2221)
              , o = i(8756)
              , s = i(5323);
            function a() {
                s.LongPress.call(this),
                this.minimumPressDuration = 500
            }
            a.prototype = n.inheritPrototype(s.LongPress, a, {
                constructor: a,
                touchesBegan: function(t) {
                    (n.isIEAndNotEdge() || n.isEdge()) && document.getSelection().removeAllRanges(),
                    s.LongPress.prototype.touchesBegan.call(this, t),
                    this._domEvents.push(t),
                    this.translation = new o,
                    this._translationOrigin = this._lastTouchLocation = this.locationInElement()
                },
                enterRecognizedState: function() {
                    s.LongPress.prototype.enterBeganState.call(this)
                },
                touchesMoved: function(t) {
                    this.preventDefault(t);
                    var e = this.locationInElement();
                    this.state === s.States.Possible ? s.LongPress.prototype.touchesMoved.call(this, t) : this.state !== s.States.Began && this.state !== s.States.Changed || (this.translation.x += e.x - this._lastTouchLocation.x,
                    this.translation.y += e.y - this._lastTouchLocation.y,
                    this.enterChangedState()),
                    this._lastTouchLocation = e
                },
                touchesCanceled: function(t) {
                    this.interruptGesture()
                },
                touchesEnded: function(t) {
                    this.state === s.States.Changed ? (this.preventDefault(t),
                    this.enterEndedState()) : this.enterFailedState()
                },
                interruptGesture: function() {
                    this.state === s.States.Changed ? this.enterEndedState() : this.state === s.States.Began && this.enterFailedState()
                },
                reset: function() {
                    s.LongPress.prototype.reset.call(this),
                    delete this._translationOrigin,
                    delete this._lastTouchLocation,
                    this._domEvents = []
                }
            }),
            t.exports = a
        }
        ,
        8325: (t,e,i)=>{
            var n = i(5323)
              , o = i(2562)
              , s = i(4701)
              , a = "mk-disable-all-gestures"
              , r = "mk-disable-pan-gestures"
              , l = "mk-disable-pinch-gestures"
              , h = "mk-disable-zoom-gestures";
            function c(t, e) {
                this._target = t,
                this._delegate = e,
                this._touchCount = 0,
                this.initialEventTargetForCurrentInteraction = null,
                this._doubleTapWithOneFingerRecognizer = this._addGestureRecognizer(n.Tap),
                this._doubleTapWithOneFingerRecognizer.numberOfTouchesRequired = 1,
                this._doubleTapWithOneFingerRecognizer.numberOfTapsRequired = 2,
                this._singleTapWithOneFingerRecognizer = this._addGestureRecognizer(n.Tap),
                this._longPressAndPanRecognizer = this._addGestureRecognizer(o),
                this._longPressAndPanRecognizer.delegate = this,
                t.addEventListener(s.startEventType, this),
                t.addEventListener("dragstart", this),
                this.updateGestureEnableState()
            }
            c.prototype = {
                constructor: c,
                handleEvent: function(t) {
                    switch (t.type) {
                    case "pointerdown":
                        this._installEndListeners(),
                        this._touchCount++,
                        this.initialEventTargetForCurrentInteraction = this._delegate.getEventTargetFromSubShadowDOM(t),
                        this._suppressDefaultBehavior(t);
                        break;
                    case "pointerup":
                    case "pointercancel":
                        this._touchCount--,
                        0 === this._touchCount && (this._removeEndListeners(),
                        document.removeEventListener("selectstart", this, !0),
                        this.initialEventTargetForCurrentInteraction = null);
                        break;
                    case "dragstart":
                        this._delegate.elementShouldPreventDragstart(t.target) && t.preventDefault();
                        break;
                    case "mousedown":
                        this._installEndListeners(),
                        this.initialEventTargetForCurrentInteraction = this._delegate.getEventTargetFromSubShadowDOM(t),
                        this._suppressDefaultBehavior(t);
                        break;
                    case "mouseup":
                        this._removeEndListeners(),
                        document.removeEventListener("selectstart", this, !0),
                        this.initialEventTargetForCurrentInteraction = null;
                        break;
                    case "touchstart":
                        t.touches.length === t.changedTouches.length && (this._installEndListeners(),
                        this.initialEventTargetForCurrentInteraction = this._delegate.getEventTargetFromSubShadowDOM(t),
                        this._delegate.elementWantsDefaultBrowserBehavior(this.initialEventTargetForCurrentInteraction, t, t.touches.length) || t.preventDefault());
                        break;
                    case "touchend":
                    case "touchcancel":
                        0 === t.touches.length && (this._removeEndListeners(),
                        this.initialEventTargetForCurrentInteraction = null);
                        break;
                    case "statechange":
                        this._handleStatechange(t);
                        break;
                    case "selectstart":
                        t.preventDefault()
                    }
                },
                _handleStatechange: function(t) {
                    switch (t.target) {
                    case this._doubleTapWithOneFingerRecognizer:
                        this._handleDoubleTapWithOneFingerChange(t);
                        break;
                    case this._singleTapWithOneFingerRecognizer:
                        this._handleSingleTapWithOneFingerChange(t);
                        break;
                    case this._longPressAndPanRecognizer:
                        this._handleLongPressAndPanChange(t)
                    }
                },
                gestureRecognizerShouldBegin: function(t) {
                    return this._delegate.userDidLongPress(t)
                },
                updateGestureEnableState: function() {
                    var t = (this._delegate.isScrollEnabled ? 1 : 0) | (this._delegate.isRotationEnabled ? 2 : 0) | (this._delegate.isZoomEnabled ? 4 : 0)
                      , e = [void 0, r, l, a, h, a, l, a];
                    this._delegate.rootNode.classList.remove(a),
                    this._delegate.rootNode.classList.remove(r),
                    this._delegate.rootNode.classList.remove(l),
                    this._delegate.rootNode.classList.remove(h),
                    e[t] && this._delegate.rootNode.classList.add(e[t])
                },
                mapWasDestroyed: function() {
                    this._removeEndListeners(),
                    this._target.removeEventListener(s.startEventType, this),
                    this._target.removeEventListener("dragstart", this),
                    this._doubleTapWithOneFingerRecognizer.removeEventListener("statechange", this),
                    this._doubleTapWithOneFingerRecognizer.enabled = !1,
                    this._doubleTapWithOneFingerRecognizer = null,
                    this._singleTapWithOneFingerRecognizer.removeEventListener("statechange", this),
                    this._singleTapWithOneFingerRecognizer.enabled = !1,
                    this._singleTapWithOneFingerRecognizer = null,
                    this._longPressAndPanRecognizer.removeEventListener("statechange", this),
                    this._longPressAndPanRecognizer.enabled = !1,
                    this._longPressAndPanRecognizer.delegate = null,
                    this._longPressAndPanRecognizer = null,
                    window.clearTimeout(this._delayedSingleTapRecognizerTimeoutID),
                    delete this.initialEventTargetForCurrentInteraction,
                    delete this._target,
                    delete this._delegate
                },
                _addGestureRecognizer: function(t) {
                    t = new t;
                    return t.target = this._target,
                    t.addEventListener("statechange", this),
                    t
                },
                _handleDoubleTapWithOneFingerChange: function(t) {
                    t = t.target;
                    t.state === n.States.Recognized && (this._delayedSingleTapRecognizerTimeoutID && (this._delegate.userCanceledTap(),
                    window.clearTimeout(this._delayedSingleTapRecognizerTimeoutID),
                    delete this._delayedSingleTapRecognizerTimeoutID),
                    this._singleTapWithOneFingerRecognizer.enabled = !1,
                    this._delegate.userDidDoubleTap(t))
                },
                _handleSingleTapWithOneFingerChange: function(t) {
                    t = t.target;
                    this._singleTapWithOneFingerRecognizer.enabled && t.state === n.States.Recognized && (this._delegate.userWillTap(t),
                    this._delegate.shouldDelaySingleTap(),
                    this._delayedSingleTapRecognizerTimeoutID = window.setTimeout(function() {
                        delete this._delayedSingleTapRecognizerTimeoutID,
                        this._delegate.userDidTap()
                    }
                    .bind(this), 0))
                },
                _handleLongPressAndPanChange: function(t) {
                    var e = t.target;
                    switch (e.state) {
                    case n.States.Possible:
                        this._delegate.userMayStartPanningAfterLongPress();
                        break;
                    case n.States.Began:
                        this._singleTapWithOneFingerRecognizer.enabled = !1,
                        this._doubleTapWithOneFingerRecognizer.enabled = !1,
                        this._doubleTapWithOneFingerRecognizer.enabled = !0;
                        break;
                    case n.States.Changed:
                        this._delegate.userDidPanAfterLongPress(e.translation);
                        break;
                    case n.States.Ended:
                    case n.States.Failed:
                        this._singleTapWithOneFingerRecognizer.enabled = !0,
                        this._delegate.userDidStopPanningAfterLongPress(e.state !== n.States.Failed)
                    }
                },
                _stopDraggingAnnotation: function() {
                    this._longPressAndPanRecognizer.interruptGesture()
                },
                _suppressDefaultBehavior: function(t) {
                    this._delegate.elementWantsDefaultBrowserBehavior(this.initialEventTargetForCurrentInteraction, t, this._touchCount) || ("pointerType"in t && "mouse" !== t.pointerType || !s.insideIframe ? t.preventDefault() : (document.addEventListener("selectstart", this, !0),
                    document.getSelection().removeAllRanges()))
                },
                _installEndListeners: function() {
                    window.addEventListener(s.endEventType, this),
                    s.cancelEventType && window.addEventListener(s.cancelEventType, this)
                },
                _removeEndListeners: function() {
                    window.removeEventListener(s.endEventType, this),
                    s.cancelEventType && window.removeEventListener(s.cancelEventType, this)
                }
            },
            t.exports = c
        }
        ,
        351: (t,e,i)=>{
            var n = i(9780)
              , o = (i(2221),
            i(5869))
              , s = i(7017)
              , a = new n.L10n({
                supportedLocales: i(8946),
                primaryLocales: i(2245),
                localesMap: i(3120),
                regionToScriptMap: i(6260),
                rtlLocales: i(1969),
                enUSDictionary: i(8872),
                get localeUrl() {
                    return s.createUrl("locales/{{locale}}/strings.json")
                },
                get withCredentials() {
                    return o.distUrlWithCredentials
                }
            });
            a._useMetric = !1,
            a.addEventListener(n.L10n.Events.LocaleChanged, function() {
                var t = n.LangTag.parse(a.requestedLocaleId);
                a._useMetric = n.UseMetric.forLanguageTag(t)
            }),
            a.useMetric = function() {
                return this._useMetric
            }
            ,
            o.setL10n(a),
            t.exports = a
        }
        ,
        6217: (t,e,i)=>{
            i = new (i(7748))({
                supportedLocales: i(2602),
                regionToScriptMap: i(6260),
                localesMap: i(3120)
            });
            t.exports = i
        }
        ,
        9614: (t,e,i)=>{
            var _ = i(5479)
              , s = i(2221)
              , g = _.MapRect
              , n = _.CoordinateSpan
              , f = _.MapPoint
              , v = i(7016)
              , y = i(2444)
              , o = i(6814)
              , w = new n(.001,.001)
              , C = new v(12,12,12,12);
            function a(t) {
                this._map = t,
                this._items = []
            }
            a.checkShowItemsParameters = function(t, e) {
                return s.checkArray(t, "[MapKit] Map.showItems expects an array of items as its first parameter."),
                e = s.checkOptions(e, "object", "[MapKit] Map.showItems expects an object as optional second parameter."),
                Object.keys(e).forEach(function(t) {
                    switch (t) {
                    case "animate":
                        break;
                    case "padding":
                        s.checkInstance(e.padding, v, "[MapKit] Map.showItems expects a Padding object for `options.padding`.");
                        break;
                    case "minimumSpan":
                        s.checkInstance(e.minimumSpan, n, "[MapKit] Map.showItems expects a CoordinateSpan for `options.minimumSpan`.");
                        break;
                    case "cameraDistance":
                        s.checkType(e.cameraDistance, "number", "[MapKit] Map.showItems expects a number for `options.cameraDistance`.");
                        break;
                    default:
                        console.warn("[MapKit] `" + t + "` is not a valid option of Map.showItems.")
                    }
                }),
                e
            }
            ,
            a.getRegionForItems = function(t, e, i) {
                for (var n = i.padding || C, o = i.minimumSpan || w, s = 0, a = 0, r = 0, l = 0, h = [], c = 0, d = e.length; c < d; ++c) {
                    var u, p, m = e[c];
                    m.map === t.public && ((u = m._impl._boundingRect || m._impl.boundingRectAtScale && m._impl.boundingRectAtScale(1)) ? (m._impl.style && (p = m._impl.style._impl.halfStrokeWidthAtResolution(),
                    s = Math.max(s, p),
                    a = Math.max(a, p),
                    r = Math.max(r, p),
                    l = Math.max(l, p)),
                    h.push(u)) : (m._impl.updateLayout(!0),
                    p = m._impl.delegate.paddingForAnnotation(m),
                    s = Math.max(s, p.top),
                    a = Math.max(a, p.right),
                    r = Math.max(r, p.bottom),
                    l = Math.max(l, p.left),
                    h.push(new g(m._impl.x,m._impl.y,0,0))))
                }
                return 0 === h.length ? null : (n = new v(n.top + s,n.right + a,n.bottom + r,n.left + l),
                o = function(t, e) {
                    var i = t.toCoordinateRegion();
                    if (i.span.latitudeDelta >= e.latitudeDelta && i.span.longitudeDelta >= e.longitudeDelta)
                        return t;
                    i.span.latitudeDelta = Math.max(i.span.latitudeDelta, e.latitudeDelta),
                    i.span.longitudeDelta = Math.max(i.span.longitudeDelta, e.longitudeDelta);
                    var t = i.span.latitudeDelta / 2
                      , e = i.span.longitudeDelta / 2
                      , n = new f(_.convertLongitudeToX(i.center.longitude - e),_.convertLatitudeToY(i.center.latitude + t))
                      , e = new f(_.convertLongitudeToX(i.center.longitude + e),_.convertLatitudeToY(i.center.latitude - t));
                    return n.x > e.x && n.x--,
                    new g(n.x,n.y,Math.min(e.x - n.x, 1),e.y - n.y)
                }(y.boundingRectForSortedRects(h.sort(function(t, e) {
                    return t.minX() - e.minX()
                })), o),
                t.padMapRect(o, n, i.cameraDistance))
            }
            ,
            a.setRegionForItems = function(t, e, i) {
                var n;
                return !(t.ensureRenderingFrame().size.height <= 0 || t.ensureRenderingFrame().size.width <= 0 || 0 !== e.length && (n = !!i.animate,
                e = a.getRegionForItems(t, e, i)) && (t.setVisibleMapRectAnimated(e, n),
                0))
            }
            ,
            a.prototype = {
                constructor: a,
                _map: null,
                _selectedItem: null,
                _selectionDistance: 10,
                get node() {
                    return this._node
                },
                get items() {
                    return this._items.filter(this.isItemExposed, this)
                },
                set items(t) {
                    s.checkArray(t, "[MapKit] Map." + this.itemName + "s expected an array of " + this.itemName + "s, but got `" + t + "` instead."),
                    t.forEach(function(t, e) {
                        s.checkInstance(t, this.itemConstructor, "[MapKit] Map." + this.itemName + "s expected an " + this.itemName + " at index " + e + ", but got `" + t + "` instead.")
                    }, this),
                    t = t.filter(function(t) {
                        return !t.map || t.map._impl === this._map || (console.warn("[MapKit] Map." + this.capitalizedItemName + "s: " + this.itemName + " is already in another map."),
                        !1)
                    }, this);
                    var e = [].concat(this._items);
                    t = [].concat(this._items.filter(function(t) {
                        return !this.isItemExposed(t)
                    }, this), t);
                    for (var i = 0, n = 0, o = !1; i < t.length; )
                        e[n] !== t[i] ? e[n] && -1 === t.indexOf(e[n]) ? (this.removedItem(e[n], !0),
                        o = !0,
                        n++) : (t[i].map && t[i].map._impl === this._map ? e.splice(e.indexOf(t[i]), 1) : (this.addedItem(t[i], !0),
                        o = !0),
                        i++) : (i++,
                        n++);
                    for (; n < e.length; )
                        this.removedItem(e[n], !0),
                        o = !0,
                        n++;
                    this._items = t,
                    o && this.manyItemsChanged(t, !0)
                },
                get selectedItem() {
                    return this._selectedItem
                },
                set selectedItem(t) {
                    if (t !== this._selectedItem) {
                        if (null != t && (s.checkInstance(t, this.itemConstructor, "[MapKit] Map.selected" + this.capitalizedItemName + " expected an " + this.itemName + " or `null`, but got `" + t + "` instead."),
                        t.map !== this._map.public))
                            throw new Error("[MapKit] Map.selected" + this.capitalizedItemName + " cannot be set to an " + this.itemName + " that is not in the map.");
                        var e;
                        this._selectedItem && (e = this._selectedItem,
                        this._selectedItem = null,
                        e.selected = !1,
                        this._map.selectionMayChange = !1,
                        e.dispatchEvent(new o.Event("deselect")),
                        delete this._map.selectionMayChange),
                        t && ((this._selectedItem = t).selected = !0,
                        this._map.selectionMayChange = !1,
                        t.dispatchEvent(new o.Event("select")),
                        delete this._map.selectionMayChange)
                    }
                },
                addItem: function(t, e) {
                    return s.checkInstance(t, this.itemConstructor, "[MapKit] Map.add" + this.capitalizedItemName + " expected an " + this.itemName + ", but got `" + t + "` instead."),
                    (t = this.addItemToList(t, !1, e)) && this.manyItemsAdded([t], !1),
                    t
                },
                addItems: function(t) {
                    s.checkArray(t, "[MapKit] Map.add" + this.capitalizedItemName + "s expected an array of " + this.itemName + "s, but got `" + t + "` instead.");
                    t = t.filter(function(t, e) {
                        return s.checkInstance(t, this.itemConstructor, "[MapKit] Map.add" + this.capitalizedItemName + "s expected an " + this.itemName + " at index " + e + ", but got `" + t + "` instead."),
                        !!this.addItemToList(t, !0)
                    }, this);
                    return 0 < t.length && this.manyItemsAdded(t, !0),
                    t
                },
                shouldAddItem: function(t, e) {
                    return t.map ? (t.map._impl !== this._map && console.warn("[MapKit] Map." + this.capitalizedItemName + (e ? "s" : "") + ": " + this.itemName + " is already in another map."),
                    !1) : !t._impl.isMapFeature || (console.warn("[MapKit] Map." + this.capitalizedItemName + (e ? "s" : "") + ": " + this.itemName + " cannot be added to another map."),
                    !1)
                },
                removeItem: function(t) {
                    return s.checkInstance(t, this.itemConstructor, "[MapKit] Map.remove" + this.capitalizedItemName + " expected an " + this.itemName + ", but got `" + t + "` instead."),
                    this.isItemExposed(t) ? t.map !== this._map.public ? console.warn("[MapKit] Map.remove" + this.capitalizedItemName + ": cannot remove " + this.itemName + " as it is not attached to this map.") : this.removeAnyItem(t) : console.warn("[MapKit] Map.remove" + this.capitalizedItemName + ": cannot remove " + this.itemName),
                    t
                },
                removeAnyItem: function(t) {
                    var e = this._items.indexOf(t);
                    return 0 <= e && (this._items.splice(e, 1),
                    this.removedItem(t),
                    this.manyItemsRemoved([t], !1)),
                    t
                },
                removeItems: function(t) {
                    return s.checkArray(t, "[MapKit] Map.remove" + this.capitalizedItemName + "s expected an array of " + this.itemName + "s, but got `" + t + "` instead."),
                    t.forEach(function(t, e) {
                        s.checkInstance(t, this.itemConstructor, "[MapKit] Map.remove" + this.capitalizedItemName + "s expected an " + this.itemName + " at index " + e + ", but got `" + t + "` instead."),
                        this.isItemExposed(t) ? t.map !== this._map.public ? console.warn("[MapKit] Map.remove" + this.capitalizedItemName + "s: cannot remove " + this.itemName + " at index " + e + " as it is not attached to this map.") : t._impl._toBeRemoved = !0 : console.warn("[MapKit] Map.remove" + this.capitalizedItemName + "s: cannot remove " + this.itemName + " at index " + e)
                    }, this),
                    this._items = this._items.filter(function(t) {
                        return !t._impl._toBeRemoved
                    }),
                    t.forEach(function(t) {
                        t._impl._toBeRemoved && (delete t._impl._toBeRemoved,
                        this.removedItem(t, !0))
                    }, this),
                    0 < t.length && this.manyItemsRemoved(t, !0),
                    t
                },
                enabledItemCloseToPoint: function(t, e) {
                    return this._previousPointForPickingItem && this._previousPointForPickingItem.equals(t) ? e || (this._closeItemIndex = (this._closeItemIndex + 1) % this._closeItems.length) : (this._previousPointForPickingItem = t,
                    this._closeItems = this._itemsCloseToPoint(t).filter(function(t) {
                        return t.enabled
                    }),
                    this._closeItemIndex = !e && 1 < this._closeItems.length && this._closeItems[0].selected ? 1 : 0),
                    this._closeItems[this._closeItemIndex]
                },
                get selectionMayChange() {
                    return !this._map || this._map.selectionMayChange
                },
                addItemToList: function(t, e, i) {
                    if (this.shouldAddItem(t, e))
                        return (void 0 === i || i < 0 || i > this._items.length) && (i = this._items.length),
                        this._items.splice(i, 0, t),
                        this.addedItem(t, e),
                        t
                },
                addedItem: function(t, e) {
                    "function" == typeof t._impl.setDelegate ? t._impl.setDelegate(this) : t._impl.delegate = this,
                    t._impl.addedToMap && t._impl.addedToMap()
                },
                manyItemsAdded: function(t, e) {},
                removedItem: function(t) {
                    t.selected = !1,
                    delete t._impl.delegate,
                    t._impl.removedFromMap && t._impl.removedFromMap()
                },
                manyItemsRemoved: function(t, e) {},
                manyItemsChanged: function(t, e) {},
                mapWasDestroyed: function() {
                    delete this._map,
                    this.removedReferenceToMap()
                },
                _node: null,
                _deletePreviousPointForPickingItem: function() {
                    delete this._previousPointForPickingItem,
                    delete this._closeItems,
                    delete this._closeItemIndex
                },
                _itemsCloseToPoint: function(t) {
                    var e = this._items.filter(function(t) {
                        return t._impl.canBePicked()
                    });
                    return 0 === e.length ? [] : this.pickableItemsCloseToPoint(e, t)
                }
            },
            t.exports = a
        }
        ,
        6916: (t,e,i)=>{
            var n = i(4891)
              , o = i(6426)
              , s = i(1207)
              , a = i(5869)
              , i = i(3191);
            for (Object.defineProperties(s.prototype, {
                forcedRenderingMode: {
                    get: function() {
                        return this._forcedRenderingMode
                    }
                },
                didFallback: {
                    get: function() {
                        return this._syrupRequestedFallback
                    }
                },
                fallbackType: {
                    get: function() {
                        return this._syrupRequestedFallbackType
                    }
                },
                distUrlWithCredentials: {
                    get: function() {
                        return this._distUrl ? /\bproxy\.geo\.apple\.com\b/.test(this._distUrl) : !n.useLocalResources && this.withCredentials
                    }
                },
                syrupUrlWithCredentials: {
                    get: function() {
                        return this._syrupUrl ? /\bproxy\.geo\.apple\.com\b/.test(this._syrupUrl) : this.withCredentials
                    }
                },
                showMapsLogo: {
                    get: function() {
                        return this._showMapsLogo
                    }
                },
                mirrorLegalLink: {
                    get: function() {
                        return this._mirrorLegalLink
                    }
                },
                showsTileInfo: {
                    get: function() {
                        return this._showsTileInfo
                    }
                },
                canRunCSR: {
                    get: function() {
                        var t = "CLIENT" === this.forcedRenderingMode || "HYBRID" === this.forcedRenderingMode
                          , e = "SERVER" === this.forcedRenderingMode;
                        return !(!this.ready || e || this._disableCsr && !t || this._syrupRequestedFallback)
                    }
                },
                madabaDomains: {
                    get: function() {
                        return this.customMadabaUrl || !this._madabaDomains && this._madabaBaseUrl ? [this._madabaBaseUrl] : this._madabaDomains || null
                    }
                }
            }),
            s.prototype.syrupRequestedFallback = function(t) {
                this._syrupRequestedFallback = !0,
                this._syrupRequestedFallbackType = t,
                setTimeout(function() {
                    var t = new o.Event(this.Events.Changed);
                    t.status = s.ChangeStatus.Refreshed,
                    this.dispatchEvent(t)
                }
                .bind(this), 0)
            }
            ,
            s.prototype.getMadabaDomainFromStringHash = function(t) {
                t = function(t) {
                    for (var e = 0, i = t.length; i--; )
                        e += t.charCodeAt(i);
                    return e
                }(t);
                return this.madabaDomains[t % this.madabaDomains.length]
            }
            ,
            s.prototype._parseMapData = function() {
                var t, e = this._data, i = (this.customMadabaUrl || !e.madabaBaseUrl && !e.madabaDomains || (this._madabaBaseUrl = e.madabaBaseUrl,
                this._madabaDomains = e.madabaDomains && e.madabaDomains.length && e.madabaDomains.map(function(t) {
                    return t.match(/^(https?:)?\/\//) ? t : -1 !== t.indexOf(":") && this.proxyPrefixes ? "http://" + t : s.PROTOCOL + "//" + t
                }
                .bind(this))),
                this._disableCsr = !!e.disableCsr,
                {}), n = (e.attributions && e.attributions.forEach(function(t) {
                    i[t.attributionId] = t,
                    this.tileGroup = t.attributionId
                }, this),
                {});
                for (t in e.tileSources.forEach(function(t) {
                    var e = t.tileSource;
                    n[e] = {
                        name: e,
                        path: t.path,
                        domains: t.domains,
                        proxyPrefixes: this.proxyPrefixes,
                        withCredentials: this.withCredentials,
                        crossOrigin: !0,
                        protocol: t.protocol || (this.proxyPrefixes && -1 !== t.domains[0].indexOf(":") ? "http:" : "https:"),
                        attribution: i[t.attributionId],
                        minZoomLevel: t.minZoomLevel,
                        maxZoomLevel: t.maxZoomLevel,
                        supportedSizes: t.supportedSizes,
                        supportedResolutions: t.supportedResolutions,
                        showPrivacyLink: t.showPrivacyLink,
                        showTermsOfUseLink: t.showTermsOfUseLink
                    },
                    n[e].attribution && n[e].attribution.global && (n[e].attribution.name = n[e].attribution.global[0].name,
                    n[e].attribution.url = n[e].attribution.global[0].url)
                }
                .bind(this)),
                this.types = {},
                this.rasterTilesForSyrup = {},
                e.modes) {
                    var o = e.modes[t].layers;
                    this.types[t] = {
                        name: t,
                        provider: this.tileProvider,
                        lowResolutionTileSource: n[o[0].lowResTileSource],
                        tileSources: o.map(function(t) {
                            return n[t.tileSource]
                        })
                    },
                    this.rasterTilesForSyrup[t] = {
                        name: t,
                        provider: this.tileProvider,
                        tileSources: o.map(function(t) {
                            return n[t.tileSource]
                        })
                    }
                }
            }
            ,
            a._data && a._parseMapData(),
            s.prototype._checkJwtToken = i; a._jwtTokensToCheck.length; ) {
                var r = a._jwtTokensToCheck.shift();
                a._checkJwtToken(r)
            }
        }
        ,
        9467: t=>{
            t.exports = {
                PointOfInterest: "PointOfInterest",
                Territory: "Territory"
            }
        }
        ,
        433: t=>{
            t.exports = ":host(.mk-map-features-container) .mk-map-features>div{position:absolute;top:0;left:0}"
        }
        ,
        5403: (P,N,t)=>{
            var h = t(5479)
              , F = t(462)
              , Z = t(764).Tints
              , _ = t(4701)
              , s = t(6814)
              , c = t(2221)
              , o = t(5869)
              , n = t(7664)
              , U = t(2444)
              , d = t(7016)
              , B = t(5911)
              , W = t(8325)
              , a = t(351)
              , K = t(4290)
              , G = t(3703)
              , j = t(8756)
              , r = t(9842)
              , l = t(3045)
              , e = t(7768)
              , u = t(5097)
              , p = t(2137)
              , m = t(1840)
              , i = m.FeatureVisibility
              , g = t(863)
              , f = h.CoordinateRegion
              , v = h.Coordinate
              , y = h.MapPoint
              , V = h.MapSize
              , w = h.MapRect
              , C = _.supportsTouches
              , H = new w(0,0,1,1)
              , b = "mk-panning"
              , k = "mk-dragging-cursor"
              , L = "mk-dragging-annotation"
              , E = (t(6916),
            "InitializedWithoutConfiguration")
              , S = "Initialized"
              , Y = "ReadyWithoutConfiguration"
              , M = "Rendered"
              , T = "Destroyed"
              , X = {
                padding: "rw",
                isScrollEnabled: "rw",
                isZoomEnabled: "rw",
                center: "rw",
                region: "rw",
                rotation: "rw",
                isRotationEnabled: "rw",
                showsCompass: "rw",
                visibleMapRect: "rw",
                tintColor: "rw",
                annotations: "rw",
                selectedAnnotation: "rw",
                overlays: "rw",
                selectedOverlay: "rw",
                showsUserLocation: "rw",
                tracksUserLocation: "rw",
                mapType: "rw",
                colorScheme: "rw",
                _allowWheelToZoom: "rw",
                _showsDefaultTiles: "rw",
                _internalAppDelegate: "rw",
                loadPriority: "rw",
                showsPointsOfInterest: "rw",
                showsMapTypeControl: "rw",
                showsZoomControl: "rw",
                showsScale: "rw",
                showsUserLocationControl: "rw",
                pointOfInterestFilter: "rw",
                annotationForCluster: "rw",
                cameraDistance: "rw",
                cameraZoomRange: "rw",
                cameraBoundary: "rw",
                distances: "rw",
                tileOverlays: "rw",
                selectableMapFeatures: "rw",
                annotationForMapFeature: "rw",
                element: "ro",
                userLocationAnnotation: "ro"
            };
            function x(t) {
                return new Error("[MapKit] Map." + t + " is not available until the required library is loaded.")
            }
            function A(t, e, i) {
                o.state === o.States.READY ? this.state = S : this.state = E;
                try {
                    (e = this._checkParent(e)) && (this._bootstrapSize = new l(e.offsetWidth,e.offsetHeight)),
                    this.public = t,
                    A.maps.push(this.public),
                    i = c.checkOptions(i),
                    this._checkOptions(i),
                    "_internalAppDelegate"in i && (this.public._internalAppDelegate = i._internalAppDelegate),
                    this._setDefaultState(i),
                    this._setupScene(),
                    this._setupRenderTree(),
                    this._setupControllers(i);
                    var n = "isRotationEnabled"in i;
                    this._setIsRotationEnabled(!n || i.isRotationEnabled, n),
                    "selectableMapFeatures"in i && (this.selectableMapFeatures = i.selectableMapFeatures),
                    this._flushToDOM(e),
                    this._handleOptions(i, e),
                    this._setupListeners(),
                    u.scheduleOnNextFrame(this)
                } catch (t) {
                    throw t
                }
            }
            A.maps = [];
            var q = "mk-dark-mode"
              , R = "single-tap"
              , I = "double-tap";
            function J(t) {
                t.selected = !0,
                this._logWithMap(p.Events.AnnotationClick)
            }
            function D(t, e, i, n) {
                if (!c.checkValueIsInEnum(t, e))
                    throw new Error("[MapKit] Unknown value for `" + i + "`. Choose from " + n + ".")
            }
            function O(t, e) {
                var t = new s.Event(t)
                  , i = e.locationInElement();
                return t.pointOnPage = new DOMPoint(i.x,i.y),
                t.domEvents = e.domEvents.slice(),
                t
            }
            A.MapTypes = m.MapTypes,
            A.Distances = m.Distances,
            A.ColorSchemes = Z,
            A.LoadPriorities = m.LoadPriorities,
            A.prototype = {
                constructor: A,
                _showsUserLocation: !1,
                _tracksUserLocation: !1,
                _tintColor: "",
                _annotationForCluster: null,
                _emphasis: m.Emphasis.Standard,
                get padding() {
                    return this._padding.copy()
                },
                set padding(t) {
                    var e, i;
                    c.checkInstance(t, d, "[MapKit] The `padding` parameter passed to `Map.padding` is not a Padding."),
                    this._padding.equals(t) || (this._padding = t.copy(),
                    (t = this.ensureRenderingFrame()).equals(r.Zero) || (this.rotation = 0,
                    i = (e = this._mapRectAccountingForPadding()).midX(),
                    e = e.midY(),
                    this._setRenderingFrameValue(t),
                    i = i - (t = this._mapRectAccountingForPadding()).midX(),
                    e = e - t.midY(),
                    i = new w(t.minX() + i,t.minY() + e,t.size.width,t.size.height),
                    this.setVisibleMapRectAnimated(i, !1)),
                    this.controlsLayer && this.controlsLayer.mapPaddingDidChange(this._adjustedPadding))
                },
                get isScrollEnabled() {
                    return this._mapNode.pannable
                },
                set isScrollEnabled(t) {
                    this._mapNode.pannable = !!t,
                    this._mapUserInteractionController.updateGestureEnableState()
                },
                get isZoomEnabled() {
                    return this._mapNode.zoomable
                },
                set isZoomEnabled(t) {
                    this._mapNode.zoomable = !!t,
                    this.controlsLayer && this.controlsLayer.updateZoomControl(),
                    this._mapUserInteractionController.updateGestureEnableState()
                },
                get snapsToIntegralZoomLevels() {
                    return this._mapNode.snapsToIntegralZoomLevels
                },
                set snapsToIntegralZoomLevels(t) {
                    this._mapNode.snapsToIntegralZoomLevels = !!t
                },
                get showsZoomControl() {
                    return this._showsZoomControl
                },
                set showsZoomControl(t) {
                    (t = !!t) !== this._showsZoomControl && (this._showsZoomControl = t,
                    this.controlsLayer) && (this.controlsLayer.updateZoomControl(),
                    this.controlsLayer.updateScale())
                },
                get showsScale() {
                    return this._showsScale
                },
                set showsScale(t) {
                    c.checkValueIsInEnum(t, i) ? t !== this._showsScale && (this._showsScale = t,
                    this.controlsLayer) && this.controlsLayer.updateScale() : console.warn("[MapKit] value passed to `Map.showsScale` setter must be part of the mapkit.FeatureVisibility enum.")
                },
                get mapType() {
                    return this._mapType
                },
                set mapType(t) {
                    t !== this._mapType && (D(t, A.MapTypes, "mapType", "Map.MapTypes"),
                    this._setMapTypeAndEmphasis(t, this._emphasis))
                },
                getMapTypeWithEmphasis: function() {
                    return this._mapType === A.MapTypes.Standard && this._emphasis === m.Emphasis.Muted ? A.MapTypes.MutedStandard : this._mapType
                },
                setMapTypeWithEmphasis: function(t) {
                    var e = m.Emphasis.Standard;
                    t === A.MapTypes.MutedStandard ? (t = A.MapTypes.Standard,
                    e = m.Emphasis.Muted) : D(t, A.MapTypes, "mapType", "Map.MapTypes"),
                    e === this._emphasis && t === this._mapType || this._setMapTypeAndEmphasis(t, e)
                },
                _setMapTypeAndEmphasis: function(t, e) {
                    this._mapType = t,
                    this._emphasis = e,
                    this._annotationsController && this._annotationsController.mapTypeDidChange(),
                    this._updateMapNodeTintAndEmphasis(this._mapNode),
                    this._mapNodeController.handleMapConfigurationChange(),
                    this.controlsLayer && this.controlsLayer.update(),
                    this.public.dispatchEvent(new s.Event("map-type-change")),
                    this._logWithMap(p.Events.MapTypeChange)
                },
                get distances() {
                    return this._distances
                },
                set distances(t) {
                    t !== this._distances && (D(t, A.Distances, "distances", "Map.Distances"),
                    this._distances = t,
                    this.controlsLayer) && this.controlsLayer.updateScale()
                },
                get colorScheme() {
                    return this._colorScheme
                },
                set colorScheme(t) {
                    t !== this._colorScheme && (D(t, A.ColorSchemes, "colorScheme", "Map.ColorSchemes"),
                    this._colorScheme = t,
                    this._updateMapNodeTintAndEmphasis(this._mapNode))
                },
                get _allowWheelToZoom() {
                    return this._mapNode.allowWheelToZoom
                },
                set _allowWheelToZoom(t) {
                    this._mapNode.allowWheelToZoom = t
                },
                get loadPriority() {
                    return this._mapNodeController.loadPriority
                },
                set loadPriority(t) {
                    c.checkValueIsInEnum(t, A.LoadPriorities) ? this._mapNodeController.loadPriority = t : console.warn("[MapKit] Unknown value for `loadPriority`. Choose from mapkit.Map.LoadPriorities.")
                },
                get _showsTileInfo() {
                    return this._mapNode._impl.debug
                },
                set _showsTileInfo(t) {
                    this._mapNode._impl.debug = t
                },
                get _showsDefaultTiles() {
                    return this._mapNode.showsDefaultTiles
                },
                set _showsDefaultTiles(t) {
                    this._mapNode.showsDefaultTiles = t
                },
                get tileOverlays() {
                    return this._mapNode.tileOverlays
                },
                set tileOverlays(t) {
                    this._mapNode.tileOverlays = t,
                    this.controlsLayer && this.controlsLayer.updateZoomControl()
                },
                addTileOverlay: function(t) {
                    if (this._overlaysController)
                        return t = this._mapNode.addTileOverlay(t),
                        this.controlsLayer && this.controlsLayer.updateZoomControl(),
                        t;
                    throw x("addTileOverlay")
                },
                addTileOverlays: function(t) {
                    if (this._overlaysController)
                        return t = this._mapNode.addTileOverlays(t),
                        this.controlsLayer && this.controlsLayer.updateZoomControl(),
                        t;
                    throw x("addTileOverlays")
                },
                removeTileOverlay: function(t) {
                    if (this._overlaysController)
                        return t = this._mapNode.removeTileOverlay(t),
                        this.controlsLayer && this.controlsLayer.updateZoomControl(),
                        t;
                    throw x("removeTileOverlay")
                },
                removeTileOverlays: function(t) {
                    if (this._overlaysController)
                        return t = this._mapNode.removeTileOverlays(t),
                        this.controlsLayer && this.controlsLayer.updateZoomControl(),
                        t;
                    throw x("removeTileOverlays")
                },
                get showsMapTypeControl() {
                    return this._showsMapTypeControl
                },
                set showsMapTypeControl(t) {
                    (t = !!t) !== this._showsMapTypeControl && (this._showsMapTypeControl = t,
                    this.controlsLayer) && this.controlsLayer.updateMapTypeControl()
                },
                get showsUserLocationControl() {
                    return !!this._userLocationController && this._showsUserLocationControl
                },
                set showsUserLocationControl(t) {
                    if ((t = !!t) !== this._showsUserLocationControl) {
                        if (!this._userLocationController)
                            throw x("showsUserLocationControl");
                        this._showsUserLocationControl = t,
                        this.controlsLayer && (this.controlsLayer.updateUserLocationControl(),
                        this.controlsLayer.updateScale())
                    }
                },
                get showsPointsOfInterest() {
                    return null === this.pointOfInterestFilter || null === this.pointOfInterestFilter._includes && 0 === this.pointOfInterestFilter._excludes.length
                },
                set showsPointsOfInterest(t) {
                    t ? null !== this.pointOfInterestFilter && (this.pointOfInterestFilter = null) : this.pointOfInterestFilter !== g.filterExcludingAllCategories && (this.pointOfInterestFilter = g.filterExcludingAllCategories)
                },
                get pointOfInterestFilter() {
                    return this._mapNode.pointOfInterestFilter
                },
                set pointOfInterestFilter(t) {
                    null !== t && c.checkInstance(t, g, "[MapKit] Value passed to `Map.pointOfInterestFilter` setter must be an instance of mapkit.PointOfInterestFilter."),
                    this._mapNode.pointOfInterestFilter = t,
                    this._mapNodeController.setPointOfInterestFilter(t)
                },
                get element() {
                    return this.rootNode && this.rootNode.element
                },
                set element(t) {
                    console.warn("[MapKit] The `element` property is read-only.")
                },
                get renderingMapRect() {
                    return this._mapNode.visibleMapRect
                },
                get visibleMapRect() {
                    return this._visibleMapRect || (this._visibleMapRect = this._mapRectAccountingForPadding()),
                    this._visibleMapRect
                },
                set visibleMapRect(t) {
                    this.setVisibleMapRectAnimated(t, !1)
                },
                setVisibleMapRectAnimated: function(t, e, i) {
                    c.required(t, "[MapKit] Missing `visibleMapRect` parameter in call to `Map.setVisibleMapRectAnimated()`.").checkInstance(t, w, "[MapKit] The `visibleMapRect` parameter passed to `Map.setVisibleMapRectAnimated()` is not a MapRect.");
                    var n, o, s, a, r, l = this.ensureRenderingFrame();
                    return 0 === l.size.width || 0 === l.size.height ? this._visibleMapRect = t : (delete this._visibleMapRect,
                    n = this._visibleFrame,
                    r = t,
                    (o = this._adjustedPadding).equals(d.Zero) || (s = l.size.width / n.size.width,
                    a = l.size.height / n.size.height,
                    r = new w(t.minX() - o.left * s * t.size.width,t.minY() - o.top * a * t.size.height,t.size.width * s,t.size.height * a)),
                    o = new y(t.midX(),t.midY()),
                    s = h.zoomLevelForMapRectInViewport(r, l.size, h.tileSize),
                    s = c.clamp(this._mapNode.snapsToIntegralZoomLevels ? _.getIntegralZoom(s) : s, this.minZoomLevel, this.maxZoomLevel),
                    a = Math.pow(2, Math.ceil(s)) * (h.tileSize * Math.pow(2, s - Math.ceil(s))),
                    r = new V(n.size.width / a,n.size.height / a),
                    t = new w(o.x - r.width / 2,o.y - r.height / 2,r.width,r.height)),
                    this._setVisibleMapRect(t, e = null == e || !!e, i),
                    delete this._delayedShowItems,
                    this.public
                },
                get region() {
                    return this.visibleMapRect.toCoordinateRegion()
                },
                set region(t) {
                    this.setRegionAnimated(t, !1)
                },
                setRegionAnimated: function(t, e, i) {
                    return c.required(t, "[MapKit] Tried to set `Map.region` property to a non-existent value.").checkInstance(t, f, "[MapKit] Region passed to `Map.region` setter is not a CoordinateRegion."),
                    this.region.equals(t) || this.setVisibleMapRectAnimated(t.toMapRect(), e, i),
                    this.public
                },
                get isRotationAvailable() {
                    return "HYBRID" === o.forcedRenderingMode || "CLIENT" === o.forcedRenderingMode ? !o.didFallback && this.csrCapable : (!o.ready && !o.didFallback || o.canRunCSR) && this.csrCapable
                },
                set isRotationAvailable(t) {
                    console.warn("[MapKit] Map.isRotationAvailable is a read-only property")
                },
                get isRotationEnabled() {
                    return this._mapNode.isRotationEnabled
                },
                set isRotationEnabled(t) {
                    this._setIsRotationEnabled(t, !0)
                },
                get isRotationLocked() {
                    return this._mapNode.isRotationLocked
                },
                get rotation() {
                    return this._mapNode.rotation
                },
                set rotation(t) {
                    this.setRotationAnimated(t, !1),
                    this.controlsLayer && this.controlsLayer.updateRotationControl()
                },
                get showsCompass() {
                    return this.usingCSR ? this._showsCompass : i.Hidden
                },
                set showsCompass(t) {
                    c.checkValueIsInEnum(t, i) ? (this.isRotationEnabled || t !== i.Visible && t !== i.Adaptive || console.warn("[MapKit] The compass cannot be shown when `Map.isRotationEnabled` is false."),
                    this._usingDefaultShowsCompassValue = !1,
                    t !== this._showsCompass && (this._showsCompass = t,
                    this.controlsLayer) && this.controlsLayer.updateRotationControl()) : console.warn("[MapKit] value passed to `Map.showsCompass` setter must be part of the MapKit.FeatureVisibility enum.")
                },
                get usingCSR() {
                    return !this._mapNodeController.usingSSR
                },
                setRotationAnimated: function(t, e, i) {
                    if (this.isRotationAvailable) {
                        var n, o;
                        if (c.required(t, "[MapKit] Tried to set `Map.rotation` property to a non-existent value."),
                        "number" == typeof t && isFinite(t))
                            return n = this._centerMapPoint(),
                            t = t - this._mapNode.getRotation(),
                            o = (e || null == e || !i) && this.mapCanStartRotating(),
                            (e || null == e) && o ? ((e = this.camera.copy()).rotateAroundCenter(n, t),
                            this._mapNode.setCameraAnimated(e, !0, n)) : ((o || i) && this._mapNode.rotateCameraAroundMapPoint(n, t),
                            i || this.mapDidStopRotating()),
                            this.public;
                        console.warn("[MapKit] Argument for `Map.rotation` is not a finite number.")
                    } else
                        console.warn("[MapKit] Rotation is not available.")
                },
                get center() {
                    return this._centerMapPoint().toCoordinate()
                },
                set center(t) {
                    this.setCenterAnimated(t, !1)
                },
                setCenterAnimated: function(t, e, i) {
                    c.required(t, "[MapKit] Tried to set `Map.center` property to a non-existent value.").checkInstance(t, v, "[MapKit] Value passed to `Map.center` setter is not a Coordinate object.");
                    var n = this.ensureRenderingFrame();
                    return 0 !== n.size.width && 0 !== n.size.height && (n = this._offsetCenterWithPaddingAndRotation(t.toMapPoint(), -1)) && (t = n.toCoordinate()),
                    this._mapNode.setCenterAnimated(t, null == e || !!e),
                    delete this._visibleMapRect,
                    i || (this.tracksUserLocation = !1),
                    this.public
                },
                get cameraZoomRange() {
                    return this._mapNode.cameraZoomRange
                },
                set cameraZoomRange(t) {
                    this.setCameraZoomRangeAnimated(t, !1)
                },
                setCameraZoomRangeAnimated: function(t, e) {
                    return null != t && c.checkInstance(t, h.CameraZoomRange, "[MapKit] Expected a `mapkit.CameraZoomRange` object for `Map.cameraZoomRange`, but got `" + t + "` instead."),
                    this._mapNode.setCameraZoomRangeAnimated(t, null == e || !!e),
                    this.public
                },
                get cameraDistance() {
                    return this._mapNode.getCurrentCameraDistance()
                },
                set cameraDistance(t) {
                    this.setCameraDistanceAnimated(t, !1)
                },
                setCameraDistanceAnimated: function(t, e) {
                    if (0 <= t)
                        return this._mapNode.setCameraDistanceAnimated(t, null == e || !!e),
                        this.public;
                    throw new Error("[MapKit] Expected a number for Map.cameraDistance, but got `" + t + "` instead")
                },
                get cameraBoundary() {
                    var t = this._cameraBoundary;
                    return t ? {
                        region: t.toCoordinateRegion ? t.toCoordinateRegion() : t.copy(),
                        mapRect: t.toMapRect ? t.toMapRect() : t.copy()
                    } : null
                },
                set cameraBoundary(t) {
                    this.setCameraBoundaryAnimated(t, !1)
                },
                setCameraBoundaryAnimated: function(t, e) {
                    var i = null;
                    if (null == t)
                        delete this._cameraBoundary;
                    else if (t instanceof f)
                        i = t.toMapRect(),
                        this._cameraBoundary = t.copy();
                    else {
                        if (!(t instanceof w))
                            throw new Error("[MapKit] `Map.cameraBoundaryRect` expected a CoordinateRegion or a MapRect, but got `" + t + "` instead.");
                        this._cameraBoundary = (i = t).copy()
                    }
                    t = this._centerMapPoint();
                    return this._mapNode.setCameraBoundaryAnimated(i, null == e || !!e),
                    this.tracksUserLocation && !this._mapNode.isMapPointWithinBounds(t) && (this.tracksUserLocation = !1),
                    this.public
                },
                get overlays() {
                    return this._overlaysController ? this._overlaysController.items : []
                },
                set overlays(t) {
                    if (!this._overlaysController)
                        throw x("overlays");
                    this._overlaysController.items = t
                },
                get selectedOverlay() {
                    return this._overlaysController ? this._overlaysController.selectedItem : null
                },
                set selectedOverlay(t) {
                    if (!this._overlaysController)
                        throw x("selectedOverlay");
                    this._overlaysController.selectedItem = t
                },
                addOverlay: function(t) {
                    if (this._overlaysController)
                        return this._overlaysController.addItem(t);
                    throw x("addOverlay")
                },
                addOverlays: function(t) {
                    if (this._overlaysController)
                        return this._overlaysController.addItems(t),
                        t;
                    throw x("addOverlays")
                },
                removeOverlay: function(t) {
                    if (this._overlaysController)
                        return this._overlaysController.removeItem(t);
                    throw x("removeOverlay")
                },
                removeOverlays: function(t) {
                    if (this._overlaysController)
                        return this._overlaysController.removeItems(t);
                    throw x("removeOverlays")
                },
                topOverlayAtPoint: function(t) {
                    if (!this._overlaysController)
                        throw x("topOverlayAtPoint");
                    c.checkInstance(t, window.DOMPoint, "[MapKit] Map.topOverlayAtPoint expected a DOMPoint, but got `" + t + "` instead.");
                    var t = this.rootNode.convertPointFromPage(t)
                      , t = this._overlaysController.pickableItemsCloseToPoint(this.overlays, t, 0)
                      , e = this.selectedOverlay;
                    return e && 0 < t.indexOf(e) ? e : t[0]
                },
                overlaysAtPoint: function(t) {
                    if (!this._overlaysController)
                        throw x("overlaysAtPoint");
                    c.checkInstance(t, window.DOMPoint, "[MapKit] Map.overlaysAtPoint expected a DOMPoint, but got `" + t + "` instead.");
                    t = this.rootNode.convertPointFromPage(t);
                    return this._overlaysController.pickableItemsCloseToPoint(this.overlays, t, 0).reverse()
                },
                get annotations() {
                    if (this._annotationsController)
                        return this._annotationsController.items;
                    throw x("annotations")
                },
                set annotations(t) {
                    if (!this._annotationsController)
                        throw x("annotations");
                    this._annotationsController.items = t
                },
                get selectedAnnotation() {
                    if (this._annotationsController)
                        return this._annotationsController.selectedItem;
                    throw x("selectedAnnotation")
                },
                set selectedAnnotation(t) {
                    if (!this._annotationsController)
                        throw x("selectedAnnotation");
                    this._annotationsController.selectedItem = t
                },
                addAnnotation: function(t) {
                    if (this._annotationsController)
                        return this._annotationsController.addItem(t);
                    throw x("addAnnotation")
                },
                addAnnotations: function(t) {
                    if (this._annotationsController)
                        return this._annotationsController.addItems(t);
                    throw x("addAnnotations")
                },
                removeAnnotation: function(t) {
                    if (this._annotationsController)
                        return this._annotationsController.removeItem(t);
                    throw x("removeAnnotation")
                },
                removeAnnotations: function(t) {
                    if (this._annotationsController)
                        return this._annotationsController.removeItems(t);
                    throw x("removeAnnotations")
                },
                showItems: function(t, e) {
                    var i, n, o;
                    if (A.LayerItemsController && A.ItemCollection)
                        return i = new A.ItemCollection(t).getFlattenedItemList(),
                        e = A.LayerItemsController.checkShowItemsParameters(i, e),
                        n = [],
                        o = [],
                        i.forEach(function(t) {
                            A.OverlaysController && t instanceof A.OverlaysController.Overlay && !t.map && (t._impl._map = this.public,
                            n.push(t)),
                            A.AnnotationsController && t instanceof A.AnnotationsController.Annotation && this._annotationsController && this._annotationsController.preAddedAnnotation(t) && o.push(t)
                        }, this),
                        this.isRooted() && A.LayerItemsController.setRegionForItems(this, i, e) || (this._delayedShowItems = [i, e]),
                        n.forEach(function(t) {
                            delete t._impl._map
                        }),
                        o.forEach(this._annotationsController.resetAnnotation.bind(this._annotationsController)),
                        this._addItems(i),
                        t;
                    throw x("showItems")
                },
                addItems: function(t) {
                    var e;
                    if (A.ItemCollection)
                        return e = new A.ItemCollection(t).getFlattenedItemList(),
                        this._addItems(e),
                        t;
                    throw x("addItems")
                },
                removeItems: function(t) {
                    var e, o, s;
                    if (A.ItemCollection)
                        return e = new A.ItemCollection(t).getFlattenedItemList(),
                        o = [],
                        s = [],
                        e.forEach(function(t, e) {
                            var i = A.OverlaysController && t instanceof A.OverlaysController.Overlay
                              , n = A.AnnotationsController && t instanceof A.AnnotationsController.Annotation;
                            if (!i && !n)
                                throw new Error("[MapKit] Map.removeItems expected an Annotation, Overlay, ItemCollection, or Array of valid items at index " + e + ", but got `" + t + "` instead.");
                            (i ? o : s).push(t)
                        }, this),
                        this.removeOverlays(o),
                        this.removeAnnotations(s),
                        t;
                    throw x("removeItems")
                },
                annotationsInMapRect: function(t) {
                    if (this._annotationsController)
                        return this._annotationsController.annotationsInMapRect(t);
                    throw x("annotationsInMapRect")
                },
                updateSize: function(t) {
                    return console.warn("[MapKit] Map resizing is now automatic, the Map.updateSize() method has been deprecated and will be removed in a future version."),
                    this.public
                },
                convertCoordinateToPointOnPage: function(t) {
                    c.checkInstance(t, v, "[MapKit] Map.convertCoordinateToPointOnPage expected a Coordinate, but got `" + t + "` instead.");
                    t = this.camera.transformMapPoint(t.toMapPoint()),
                    t = this.rootNode.convertPointToPage(t);
                    return new window.DOMPoint(t.x,t.y)
                },
                convertPointOnPageToCoordinate: function(t) {
                    c.checkInstance(t, window.DOMPoint, "[MapKit] Map.convertPointOnPageToCoordinate expected a DOMPoint, but got `" + t + "` instead.");
                    var t = this.camera.transformGestureCenter(this.rootNode.convertPointFromPage(new j(t.x,t.y)))
                      , e = this.renderingMapRect.origin;
                    return new v(h.convertYToLatitude(e.y + t.y / this.worldSize),h.convertXToLongitude(e.x + t.x / this.worldSize))
                },
                get showsUserLocation() {
                    return !!this._userLocationController && this._userLocationController.showsUserLocation
                },
                set showsUserLocation(t) {
                    if ((t = !!t) !== this.showsUserLocation) {
                        if (!this._userLocationController)
                            throw x("showsUserLocation");
                        (this._userLocationController.showsUserLocation = t) || (this._removeUserLocationDisplay(),
                        this.tracksUserLocation = !1),
                        this.showsUserLocationControl && this.controlsLayer && (this.controlsLayer.updateUserLocationControl(),
                        this.controlsLayer.updateScale())
                    }
                },
                get userLocationAnnotation() {
                    return this._userLocationController ? this._annotationsController.userLocationAnnotation : null
                },
                get tracksUserLocation() {
                    return !!this._userLocationController && this._userLocationController.tracksUserLocation
                },
                set tracksUserLocation(t) {
                    if ((t = !!t) !== this.tracksUserLocation) {
                        if (!this._userLocationController)
                            throw x("tracksUserLocation");
                        this._userLocationController.tracksUserLocation = t,
                        (this._mapNode.staysCenteredDuringZoom = t) ? this.showsUserLocation = !0 : this.userLocationAnnotation || (this.showsUserLocation = !1),
                        this._firstCameraUpdateToTrackUserLocationPending = t,
                        this._updateCameraToTrackUserLocation(this._userLocationController.userLocation),
                        this._userLocationController.tracksUserLocation === t && (this.controlsLayer && this.controlsLayer.updateUserLocationControl(),
                        this._userLocationTrackingDelegate) && "function" == typeof this._userLocationTrackingDelegate.mapUserLocationTrackingDidChange && this._userLocationTrackingDelegate.mapUserLocationTrackingDidChange(this.public)
                    }
                },
                get tintColor() {
                    return this._tintColor
                },
                set tintColor(t) {
                    if (t !== this._tintColor) {
                        if (null != t) {
                            if (c.checkType(t, "string", "[MapKit] Expected a string value for Map.tintColor, but got `" + t + "` instead"),
                            "" !== t && !_.isValidCSSColor(t))
                                return void console.warn("[MapKit] value passed to `Map.tintColor` is not a valid color value. Ignoring: " + t);
                            this._tintColor = t
                        } else
                            delete this._tintColor;
                        this.controlsLayer && this.controlsLayer.update()
                    }
                },
                get tintColorForControls() {
                    return _.darkColorScheme(this.mapNodeTint) ? "" : this._tintColor
                },
                get minZoomLevel() {
                    return this._mapNode.minZoomLevel
                },
                get maxZoomLevel() {
                    return this._mapNode.maxZoomLevel
                },
                get zoomLevel() {
                    return this._mapNode.zoomLevel
                },
                set zoomLevel(t) {
                    this._mapNode.zoomLevel = t
                },
                get worldSize() {
                    return h.pointsPerAxis(this._mapNode.zoomLevel)
                },
                get camera() {
                    return this._mapNodeController.node.camera
                },
                get cameraIsPanning() {
                    return this._mapNode.cameraIsPanning
                },
                get cameraIsZooming() {
                    return this._mapNode.cameraIsZooming
                },
                get cameraIsRotating() {
                    return this._mapNode.cameraIsRotating
                },
                get cameraIsAnimating() {
                    return this._mapNode.cameraIsAnimating
                },
                get cameraIsMoving() {
                    return this.cameraIsPanning || this.cameraIsZooming || this.cameraIsRotating || this.cameraIsAnimating
                },
                get _mapNode() {
                    return this._mapNodeController.node
                },
                get csrCapable() {
                    return this._mapNodeController.csrCapable
                },
                destroy: function() {
                    var t;
                    this.state !== T ? (this.state = T,
                    this._annotationsController && this.removeAnnotations(this.annotations),
                    this._overlaysController && this.removeOverlays(this.overlays),
                    this._stopStabilizationTimeout(),
                    this._linearZoomController.stop(),
                    this.showsUserLocation && this._removeUserLocationDisplay(),
                    this.controlsLayer && (this.controlsLayer.mapWasDestroyed(),
                    this.controlsLayer = null),
                    this._mapUserInteractionController.mapWasDestroyed(),
                    this._overlaysController && this._overlaysController.mapWasDestroyed(),
                    this._annotationsController && this._annotationsController.mapWasDestroyed(),
                    this._userLocationController && this._userLocationController.mapWasDestroyed(),
                    this._linearZoomController._delegate = null,
                    o.removeEventListener(o.Events.Changed, this),
                    a.removeEventListener(a.Events.LocaleChanged, this),
                    this._boundDevicePixelRatioDidChange && (this._dppxMediaQueryList.removeListener(this._boundDevicePixelRatioDidChange),
                    this._dppxMediaQueryList = null,
                    this._boundDevicePixelRatioDidChange = null),
                    this._iframe && (this._iframe.removeEventListener("load", this),
                    this._iframe.contentWindow && this._iframe.contentWindow.removeEventListener("resize", this),
                    this.element.removeChild(this._iframe),
                    this._iframe = null),
                    this._resizeObserver && (this._resizeObserver.disconnect(),
                    this._resizeObserver = null),
                    this._mapNodeController.destroy(),
                    this._mapRoot.remove(),
                    this._mapRoot = null,
                    this._scene.destroy(),
                    this._scene = null,
                    this._removePrintListener(),
                    this.element && this.element.parentNode && this.element.parentNode.removeChild(this.element),
                    this.rootNode.remove(),
                    this.rootNode = null,
                    0 <= (t = A.maps.indexOf(this.public)) && A.maps.splice(t, 1)) : console.warn("[MapKit] Map was already destroyed.")
                },
                adjustMapItemPoint: function(t) {
                    return this._mapNode.adjustMapItemPoint(t)
                },
                get annotationForCluster() {
                    return this._annotationForCluster
                },
                set annotationForCluster(t) {
                    if (null == t)
                        delete this._annotationForCluster;
                    else {
                        if ("function" != typeof t)
                            throw new Error("[MapKit] annotationForCluster must be a function or null");
                        this._annotationForCluster = t
                    }
                },
                selectionMayChange: !0,
                get selectableMapFeatures() {
                    return !this._selectableMapFeatures || o.ready && (o.didFallback || !o.canRunCSR) || !this.csrCapable || "SERVER" === o.forcedRenderingMode ? [] : this._selectableMapFeatures.slice()
                },
                set selectableMapFeatures(e) {
                    if (null != e) {
                        if (!A.MapFeatureType)
                            throw x("selectableMapFeatures");
                        c.checkArray(e, "[MapKit] Map.selectableMapFeatures expected an array of values, but got `" + e + "` instead."),
                        e.forEach(function(t) {
                            D(t, A.MapFeatureType, "MapFeatureType", "mapkit.MapFeatureType")
                        });
                        var i = [];
                        Object.values(A.MapFeatureType).forEach(function(t) {
                            -1 !== e.indexOf(t) && i.push(t)
                        }),
                        0 !== i.length ? ((!o.ready || !o.didFallback && o.canRunCSR) && this.csrCapable && "SERVER" !== o.forcedRenderingMode || console.warn("[MapKit] Selectable map features is not available."),
                        this._selectableMapFeatures = i) : delete this._selectableMapFeatures
                    } else
                        delete this._selectableMapFeatures
                },
                get annotationForMapFeature() {
                    return this._annotationForMapFeature
                },
                set annotationForMapFeature(t) {
                    if (null == t)
                        delete this._annotationForMapFeature;
                    else {
                        if ("function" != typeof t)
                            throw new Error("[MapKit] annotationForMapFeature must be a function or null");
                        this._annotationForMapFeature = t
                    }
                },
                handleEvent: function(t) {
                    var e = A.ControlsLayer ? A.ControlsLayer.ZoomControl.EVENTS.ZOOM_START : void 0
                      , i = A.ControlsLayer ? A.ControlsLayer.ZoomControl.EVENTS.ZOOM_END : void 0;
                    switch (t.type) {
                    case o.Events.Changed:
                        this._configurationDidBecomeAvailable();
                        break;
                    case e:
                        this._handleZoomStartEvent(t);
                        break;
                    case i:
                        this._handleZoomEndEvent(t);
                        break;
                    case a.Events.LocaleChanged:
                        this._handleLocaleChange(t);
                        break;
                    case "load":
                        this._iframeDidLoad();
                        break;
                    case "resize":
                        this._sizeDidChange()
                    }
                },
                elementShouldPreventDragstart: function(t) {
                    return !!this._annotationsController && !this._annotationsController.isElementInCustomCallout(t)
                },
                elementWantsDefaultBrowserBehavior: function(t, e, i) {
                    if (e && i && ("touchstart" === e.type || "pointerdown" === e.type && "touch" === e.pointerType)) {
                        if (1 === i && !this.isScrollEnabled)
                            return !0;
                        if (2 === i && !this.isZoomEnabled && !this.isRotationEnabled)
                            return !0
                    }
                    return !!this._annotationsController && this._annotationsController.isElementInCallout(t)
                },
                getEventTargetFromSubShadowDOM: function(t) {
                    var e = (t.touches ? t.touches[0] : t).target;
                    return _.supportsShadowDOM && this._annotationsController && e === this._annotationsController.node.element && this._annotationsController.getShadowDOMTargetFromEvent(t) || e
                },
                tileAccessForbidden: function() {
                    o.accessKeyHasExpired()
                },
                previousMapDidFinishRendering: function(t) {
                    this.state !== T && this.public.dispatchEvent(new s.Event("start-up-complete"))
                },
                mapDidFinishRendering: function(t) {
                    this.state !== T && (this.state = M,
                    this._controlsLayer || setTimeout(this._loadControlsLayer.bind(this, !1)),
                    this._mapNodeController.handleMapRendered(),
                    this.addWaitingAnnotations(),
                    this._startStabilizationTimeoutIfNeeded())
                },
                mapCanStartPanning: function(t) {
                    return this._panningWasPrevented ? (delete this._panningWasPrevented,
                    !1) : !(this.tracksUserLocation && this.cameraIsZooming || this._annotationsController && this._annotationsController.dragging || this._isInitialInteractionTargetInUIElement() || !this.public.dispatchEvent(new s.Event("scroll-start")))
                },
                mapWillStartPanning: function(t) {
                    this._stopStabilizationTimeout(),
                    this.tracksUserLocation = !1,
                    this.rootNode.classList.add(b),
                    this.rootNode.classList.add(k)
                },
                mapWillStopPanning: function(t) {
                    this.rootNode.classList.remove(k)
                },
                mapDidStopPanning: function(t) {
                    this._startStabilizationTimeoutIfNeeded(),
                    this.rootNode.classList.remove(b),
                    this.public.dispatchEvent(new s.Event("scroll-end"))
                },
                mapCanStartZooming: function(t) {
                    return !(this._isInitialInteractionTargetInUIElement() || !this.public.dispatchEvent(new s.Event("zoom-start")))
                },
                mapWillStartZooming: function(t, e, i, n) {
                    this._stopStabilizationTimeout(),
                    n && (this.tracksUserLocation = !1),
                    this._logWithMap(p.Events.Zoom, {
                        eventValue: e
                    })
                },
                mapDidStopZooming: function(t) {
                    this._startStabilizationTimeoutIfNeeded(),
                    this.public.dispatchEvent(new s.Event("zoom-end")),
                    this.controlsLayer && this.controlsLayer.scaleDidChange()
                },
                mapCameraWillChange: function(t, e) {
                    this.mapNodeCameraBeforeChange = t.camera
                },
                mapCameraDidChange: function(t, e) {
                    var i;
                    this.state !== T && (i = this.mapNodeCameraBeforeChange,
                    delete this.mapNodeCameraBeforeChange,
                    delete this._visibleMapRect,
                    this._mapNodeController.mapCameraDidChange(),
                    this._overlaysController && this._overlaysController.mapCameraDidChange(),
                    this._annotationsController && this._annotationsController.updateVisibleAnnotations(),
                    this.controlsLayer) && (this.controlsLayer.scaleDidChange(),
                    i && i.rotation === t.camera.rotation || this.controlsLayer.updateRotationControl())
                },
                mapCameraChangesWillStart: function(t, e) {
                    this._mapFeaturesLayerController && this._mapFeaturesLayerController.node.remove(),
                    this._zoomLevelWhenCameraChangeStarted = this.zoomLevel,
                    this.public.dispatchEvent(new s.Event("region-change-start"))
                },
                mapCameraChangesDidEnd: function(t) {
                    this.state !== T && (this._zoomLevelWhenCameraChangeStarted !== this.zoomLevel && this.controlsLayer && this.controlsLayer.zoomLevelDidChange(),
                    delete this._zoomLevelWhenCameraChangeStarted,
                    this.public.dispatchEvent(new s.Event("region-change-end")))
                },
                mapMinAndMaxZoomLevelsDidChange: function(t) {
                    this.controlsLayer && this.controlsLayer.zoomLevelDidChange()
                },
                mapCanStartRotating: function(t) {
                    return this.public.dispatchEvent(new s.Event("rotation-start"))
                },
                mapRotationDidChange: function(t) {
                    this.controlsLayer && this.controlsLayer.updateRotationControl()
                },
                mapDidStopRotating: function(t) {
                    this.public.dispatchEvent(new s.Event("rotation-end"))
                },
                mapTransformCenter: function(t) {
                    return this._centerMapPoint()
                },
                userWillTap: function(t) {
                    var e = t.locationInElement();
                    if (this._isInitialInteractionTargetInUIElement())
                        _.supportsTouches && (this._delayedTapFunction = this._elementWasTapped.bind(this, this._mapUserInteractionController.initialEventTargetForCurrentInteraction));
                    else if (!(this._annotationsController && this._annotationsController.selectedItem && this._annotationsController.selectedItem._impl.alwaysSelected)) {
                        var i = this.rootNode.convertPointFromPage(e)
                          , e = this._annotationsController ? this._annotationsController.enabledItemCloseToPoint(i) : void 0;
                        if (e)
                            this._delayedTapFunction = J.bind(this, e);
                        else {
                            if (this._overlaysController) {
                                e = this._overlaysController.enabledItemCloseToPoint(i);
                                if (e)
                                    return void (this._delayedTapFunction = function(t) {
                                        this.selected = t
                                    }
                                    .bind(e, !0))
                            }
                            if (this._selectableMapFeatures && this._mapNode.getMapFeatureRegions) {
                                for (var n, o = this._mapNode.getMapFeatureRegions(), s = -1 !== this._selectableMapFeatures.indexOf(A.MapFeatureType.PointOfInterest), a = -1 !== this._selectableMapFeatures.indexOf(A.MapFeatureType.Territory), r = 0; r < o.length; r++) {
                                    var l = o[r];
                                    if (-1 !== ["Poi", "Territory"].indexOf(l.category) && (s || "Poi" !== l.category) && (a || "Territory" !== l.category)) {
                                        for (var h = this.camera.transformMapPoint(new y(l.position[0],l.position[1])), c = 0; c < l.rects.length; c++) {
                                            var d = l.rects[c]
                                              , u = d.size
                                              , p = h.x + d.offset[0]
                                              , d = h.y + d.offset[1];
                                            if (u[0] < 44 && (p -= (44 - u[0]) / 2,
                                            u[0] = 44),
                                            u[1] < 44 && (d -= (44 - u[1]) / 2,
                                            u[1] = 44),
                                            p < i.x && i.x < p + u[0] && d < i.y && i.y < d + u[1]) {
                                                n = l;
                                                break
                                            }
                                        }
                                        if (n)
                                            break
                                    }
                                }
                                if (n)
                                    return void this._annotationsController.mapFeatureDidSelect(n)
                            }
                            var m = O(R, t);
                            this._delayedTapFunction = function() {
                                this.public.dispatchEvent(m),
                                m.defaultPrevented || (this._annotationsController && (this._annotationsController.selectedItem = null),
                                this._overlaysController && (this._overlaysController.selectedItem = null))
                            }
                            .bind(this)
                        }
                    }
                },
                shouldDelaySingleTap: function() {
                    return this.isZoomEnabled || this.public._listeners && (this.public._listeners[R] && 0 < this.public._listeners[R].length || this.public._listeners[I] && 0 < this.public._listeners[I].length)
                },
                userDidTap: function(t) {
                    this._delayedTapFunction && (this._delayedTapFunction(),
                    delete this._delayedTapFunction)
                },
                userCanceledTap: function(t) {
                    delete this._delayedTapFunction
                },
                userDidDoubleTap: function(t) {
                    var e = t.modifierKeys.alt;
                    (!this.isZoomEnabled || e && this.zoomLevel === this._mapNode.minZoomLevel || !e && this.zoomLevel === this._mapNode.maxZoomLevel) && this.public.dispatchEvent(O(I, t))
                },
                userDidLongPress: function(t) {
                    var e, i;
                    return !this._isInitialInteractionTargetInUIElement() && (i = t.locationInElement(),
                    (e = this._annotationsController ? this._annotationsController.enabledItemCloseToPoint(this.rootNode.convertPointFromPage(i), !0) : void 0) ? e._impl.isDraggable() && !this.cameraIsMoving ? (this._annotationsController.startDraggingAnnotation(e, i),
                    !0) : _.supportsTouches && (J.call(this, e),
                    !0) : (i = O("long-press", t),
                    this.public.dispatchEvent(i),
                    i.defaultPrevented && (this._panningWasPrevented = !0),
                    _.supportsTouches))
                },
                userMayStartPanningAfterLongPress: function() {
                    delete this._panningWasPrevented
                },
                userDidPanAfterLongPress: function(t) {
                    this._annotationsController && this._annotationsController.annotationDraggingDidChange(t)
                },
                userDidStopPanningAfterLongPress: function(t) {
                    this._annotationsController && this._annotationsController.annotationDraggingDidEnd(t)
                },
                linearZoomControllerDidZoom: function(t) {
                    this.cameraIsZooming && ((this.zoomLevel = t) <= this.minZoomLevel && !this._linearZoomController.zoomsIn || t >= this.maxZoomLevel && this._linearZoomController.zoomsIn) && this._mapNode.cameraDidStopZooming()
                },
                linearZoomControllerDidStop: function() {
                    this._mapNode.cameraDidStopZooming()
                },
                userLocationDidChange: function(t) {
                    this._updateUserLocationDisplay(t.target),
                    this.controlsLayer && this.controlsLayer.userLocationDidChange(t.target),
                    this.tracksUserLocation && this._updateCameraToTrackUserLocation(t.target),
                    this.public.dispatchEvent(t)
                },
                userLocationDidError: function(t) {
                    this._updateUserLocationDisplay(t.target),
                    this.controlsLayer && this.controlsLayer.userLocationDidError(t.target),
                    this.public.dispatchEvent(t)
                },
                get mapNodeTint() {
                    var t = this._mapNodeController && this._mapNodeController.node;
                    return t ? t.tint : A.ColorSchemes.Light
                },
                isRooted: function() {
                    return this.element && this.element.ownerDocument.body.contains(this.element)
                },
                stopDraggingAnnotation: function() {
                    this._mapUserInteractionController._stopDraggingAnnotation()
                },
                translateVisibleMapRectAnimated: function(t, e) {
                    var i = this.visibleMapRect;
                    this._setVisibleMapRect(new w(i.minX() + t.x / this.worldSize,i.minY() + t.y / this.worldSize,i.size.width,i.size.height), !!e)
                },
                translateCameraAnimated: function(t, e) {
                    this._mapNode.setCameraAnimated(this.camera.translate(t), !!e)
                },
                setCameraAnimated: function(t, e) {
                    this._mapNode.setCameraAnimated(t, !!e)
                },
                shouldWaitForTilesAndControls: function() {
                    return this.state !== M || !this.controlsLayer || this.controlsLayer.controlsPending
                },
                ensureRenderingFrame: function() {
                    return this._renderingFrame || new r
                },
                ensureVisibleFrame: function() {
                    return this._visibleFrame || new r
                },
                annotationDraggingWillStart: function() {
                    this.rootNode.classList.add(L),
                    this._loadControlsLayer(!1),
                    this.controlsLayer && (this.controlsLayer.classList.add(L),
                    this.controlsLayer.canShowTooltips = !1)
                },
                annotationDraggingDidEnd: function() {
                    this.rootNode.classList.remove(L),
                    this.controlsLayer && (this.controlsLayer.classList.remove(L),
                    this.controlsLayer.canShowTooltips = !0)
                },
                get useMetric() {
                    switch (this.distances) {
                    case A.Distances.Adaptive:
                        return a.useMetric();
                    case A.Distances.Metric:
                        return !0;
                    case A.Distances.Imperial:
                        return !1
                    }
                },
                get isCompassHidden() {
                    return this.showsCompass === i.Hidden || _.supportsTouches && this.showsCompass === i.Adaptive && 0 === this.rotation || !this.isRotationEnabled
                },
                compassDraggingWillStart: function() {
                    var t = this.mapCanStartRotating();
                    return t && this.rootNode.classList.add(k),
                    t
                },
                compassRotationWillStart: function() {
                    return this._mapNodeController.node.compassRotationWillStart()
                },
                compassDraggingDidEnd: function() {
                    this.mapDidStopRotating(),
                    this._mapNodeController.node.compassRotationDidEnd(),
                    this.rootNode.classList.remove(k)
                },
                compassRotationDidEnd: function() {
                    this._mapNodeController.node.compassRotationDidEnd()
                },
                panningDuringAnnotationDrag: function() {
                    this._annotationsController && this._annotationsController.mapPanningDuringAnnotationDrag()
                },
                padMapRect: function(t, i, e) {
                    c.checkType(i, "object", "[MapKit] padding must be an object with any of `top`, `left`, `bottom`, `right`"),
                    ["top", "left", "bottom", "right"].forEach(function(t) {
                        if (t in i) {
                            var e = i[t];
                            if ("number" != typeof e || e < 0)
                                throw new Error("[MapKit] property `" + t + "` of padding must be a number >= 0; got `" + e + "`")
                        } else
                            i[t] = 0
                    });
                    var n = this.ensureRenderingFrame().size
                      , n = c.log2(Math.min((n.width - (i.left + i.right)) / (t.size.width * h.tileSize), (n.height - (i.top + i.bottom)) / (t.size.height * h.tileSize)))
                      , o = h.pointsPerAxis(n)
                      , t = U.padMapRect(t, {
                        top: i.top / o,
                        left: i.left / o,
                        bottom: i.bottom / o,
                        right: i.right / o
                    });
                    return void 0 !== e && 0 <= e ? (n = this._mapNode.zoomLevelForCameraDistanceAtY(e, t.midY()),
                    e = o / h.pointsPerAxis(n),
                    t.scale(e, new h.MapPoint(t.midX(),t.midY()))) : t
                },
                supportsLabelRegions: function() {
                    return !this._mapNodeController.usingSSR
                },
                createLabelRegion: function() {
                    return this._mapNode.createLabelRegion()
                },
                updatedLabelRegion: function() {
                    this._mapNode.updatedLabelRegion()
                },
                unregisterLabelRegion: function(t) {
                    this._mapNode.unregisterLabelRegion(t)
                },
                _addItems: function(t) {
                    var o = [];
                    return t.forEach(function(t, e) {
                        var i = A.OverlaysController && t instanceof A.OverlaysController.Overlay
                          , n = A.AnnotationsController && t instanceof A.AnnotationsController.Annotation;
                        if (!i && !n)
                            throw new Error("[MapKit] Map.addItems expected an Annotation, Overlay, ItemCollection, or Array of valid items at index " + e + ", but got `" + t + "` instead.");
                        t.map || (i ? this.addOverlay(t) : o.push(t))
                    }, this),
                    this._annotationsController && this.addAnnotations(o),
                    t
                },
                _configurationDidBecomeAvailable: function(t) {
                    var e = t && this.state === S;
                    t || (this.state === E ? (this.state = S,
                    e = !0) : this.state === Y && (this.state = "Ready",
                    e = !0)),
                    this._mapNodeController.configurationDidBecomeAvailable(t),
                    e && this._logWithMap(p.Events.MapsLoad),
                    this.controlsLayer && this.controlsLayer.update(),
                    this.public._internalAppDelegate && "function" == typeof this.public._internalAppDelegate.networkConfigurationUpdated && this.public._internalAppDelegate.networkConfigurationUpdated({
                        madabaDomains: o.madabaDomains,
                        tileGroup: o.tileGroup,
                        accessKey: o.accessKey
                    })
                },
                _setupScene: function() {
                    this._scene = new F.Scene,
                    this._scene.element.className = "rt-root",
                    this._scene.element.setAttribute("aria-hidden", "true")
                },
                _checkOptions: function(t) {
                    c.checkType(t, "object", "[MapKit] The `options` object is invalid."),
                    Object.keys(t).forEach(function(t) {
                        var e = X[t];
                        "rw" !== e && ("ro" === e ? console.warn("[MapKit] `" + t + "` is read-only and can't be set on a Map.") : console.warn("[MapKit] `" + t + "` is not a valid property of Map."))
                    })
                },
                _checkParent: function(t) {
                    if (null != t) {
                        t = "string" == typeof t ? document.getElementById(t) : t;
                        if (t && c.isElement(t))
                            return t;
                        throw new Error("[MapKit] `parent` must either be a DOM element or its ID.")
                    }
                },
                _setDefaultState: function(t) {
                    this._showsScale = i.Hidden,
                    this._visibleMapRect = H,
                    this._padding = new d,
                    this._adjustedPadding = new d,
                    this._showsCompass = i.Adaptive,
                    this._usingDefaultShowsCompassValue = !0,
                    this._distances = A.Distances.Adaptive,
                    this._showsZoomControl = "showsZoomControl"in t ? !!t.showsZoomControl : !C,
                    this._showsMapTypeControl = "showsMapTypeControl"in t ? !!t.showsMapTypeControl : !C,
                    this._showsUserLocationControl = "showsUserLocationControl"in t && !!t.showsUserLocationControl;
                    var e = t.mapType || A.MapTypes.Standard
                      , e = (D(e, A.MapTypes, "mapType", "Map.MapTypes"),
                    e === A.MapTypes.MutedStandard ? (this._emphasis = m.Emphasis.Muted,
                    this._mapType = A.MapTypes.Standard) : (this._emphasis = m.Emphasis.Standard,
                    this._mapType = e),
                    t.colorScheme || A.ColorSchemes.Light);
                    D(e, A.ColorSchemes, "colorScheme", "Map.ColorSchemes"),
                    this._colorScheme = e
                },
                _setIsRotationEnabled: function(t, e) {
                    "boolean" == typeof t ? (this.isRotationAvailable ? this._mapNode.isRotationEnabled = t : e && t && console.warn("[MapKit] Rotation can't be enabled because it's not available."),
                    this.controlsLayer && this.controlsLayer.updateRotationControl(),
                    this._mapUserInteractionController.updateGestureEnableState()) : console.warn("[MapKit] Value passed to `Map.isRotationEnabled` is not a Boolean.")
                },
                _setupRenderTree: function() {
                    var t = document.createElement("div");
                    t.className = "mk-map-view",
                    t.appendChild(this._scene.element),
                    this.rootNode = new e.Node(t)
                },
                _setupControllers: function(t) {
                    this._loadControlsLayer(!0),
                    A.OverlaysController && this.addOverlaysController(),
                    A.MapFeaturesLayerController && this.addMapFeaturesLayerController(),
                    A.AnnotationsController && this.addAnnotationsController(),
                    A.UserLocationController && this.addUserLocationController(),
                    this._mapNodeController = new K(this,t),
                    this._linearZoomController = new B(this._mapNode.snapsToIntegralZoomLevels,this),
                    this._mapUserInteractionController = new W(this.rootNode.element,this)
                },
                addOverlaysController: function() {
                    this.state === T || this._overlaysController || (this._overlaysController = new A.OverlaysController(this),
                    this._scene.insertAfter(this._overlaysController.node, this._mapNodeController ? this._mapNodeController.node : void 0))
                },
                addMapFeaturesLayerController: function() {
                    this._mapFeaturesLayerController = new A.MapFeaturesLayerController(this),
                    this._startStabilizationTimeoutIfNeeded()
                },
                addAnnotationsController: function() {
                    this.state === T || this._annotationsController || (this._annotationsController = new A.AnnotationsController(this),
                    this._mapRoot && this._mapRoot.insertAfter(this._annotationsController.node, this._mapFeaturesLayerController.node),
                    this._scene.insertAfter(this._annotationsController.sceneGraphNode, this._overlaysController ? this._overlaysController.node : this._mapNodeController ? this._mapNodeController.node : void 0))
                },
                addUserLocationController: function() {
                    this._userLocationController = new A.UserLocationController(this)
                },
                getControlBounds: function() {
                    return this.controlsLayer ? this.controlsLayer.controlBounds() : []
                },
                _loadControlsLayer: function(e) {
                    if (!this._loadControlsLayerHasFailed)
                        return !e && A.ControlsLayer ? (this._insertControlsLayer(),
                        void this._updateInitialControlsLayerState()) : void G(function(t) {
                            t ? (A.ControlsLayer = t,
                            e ? (u.scheduleInBackground(this._insertControlsLayer.bind(this)),
                            u.scheduleInBackground(this._updateInitialControlsLayerState.bind(this))) : (this._insertControlsLayer(),
                            this._updateInitialControlsLayerState())) : (this._showsDefaultTiles = !1,
                            Object.defineProperty(this, "_showsDefaultTiles", {
                                get: function() {
                                    return !1
                                },
                                set: function() {
                                    throw new Error("[MapKit] Default tiles are not shown because map controls has failed to load.")
                                },
                                configurable: !0
                            }),
                            this._loadControlsLayerHasFailed = !0)
                        }
                        .bind(this))
                },
                _insertControlsLayer: function() {
                    this.state === T || this.controlsLayer || (this.controlsLayer = new A.ControlsLayer(this),
                    this._mapRoot.insertAfter(this.controlsLayer, this._annotationsController ? this._annotationsController.node : void 0))
                },
                _updateInitialControlsLayerState: function() {
                    this.state === T || this._updateInitialControlsLayerStateCalled || (this._updateInitialControlsLayerStateCalled = !0,
                    this.controlsLayer.update(),
                    this.controlsLayer.mapPaddingDidChange(this._adjustedPadding))
                },
                _handleOptions: function(t, e) {
                    t.showsScale && (this.showsScale = t.showsScale),
                    t.showsCompass && (this.showsCompass = t.showsCompass),
                    t.padding && (this.padding = t.padding),
                    t.cameraZoomRange && (this.cameraZoomRange = t.cameraZoomRange),
                    t.cameraBoundary && (this.cameraBoundary = t.cameraBoundary),
                    t.visibleMapRect ? this.visibleMapRect = t.visibleMapRect : t.region ? this.region = t.region : (t.center && (this.center = t.center),
                    "cameraDistance"in t && (this.cameraDistance = t.cameraDistance)),
                    t.rotation && (this.rotation = t.rotation);
                    var i = []
                      , e = !t.visibleMapRect && !t.region && !t.center && e;
                    t.overlays && (c.checkArray(t.overlays, "[MapKit] Map constructor overlays option expected an array of overlays, but got `" + t.annotations + "` instead."),
                    e ? i.push.apply(i, t.overlays) : this.overlays = t.overlays),
                    t.annotations && (c.checkArray(t.annotations, "[MapKit] Map constructor annotations option expected an array of annotations, but got `" + t.annotations + "` instead."),
                    e ? i.push.apply(i, t.annotations) : this.annotations = t.annotations),
                    0 < i.length && (e = {},
                    "cameraDistance"in t && (e.cameraDistance = t.cameraDistance),
                    this.showItems(i, e)),
                    t.selectedOverlay && (this.selectedOverlay = t.selectedOverlay),
                    t.selectedAnnotation && (this.selectedAnnotation = t.selectedAnnotation),
                    t.distances && (this.distances = t.distances),
                    this.tintColor = t.tintColor,
                    this.showsUserLocation = t.showsUserLocation,
                    this.tracksUserLocation = t.tracksUserLocation,
                    t.tileOverlays && (this.tileOverlays = t.tileOverlays),
                    t.annotationForCluster && (this.annotationForCluster = t.annotationForCluster),
                    t.annotationForMapFeature && (this.annotationForMapFeature = t.annotationForMapFeature)
                },
                _flushToDOM: function(t) {
                    this._addMapToParent(t),
                    u.flush(),
                    this._ensureContainerIsPositioned()
                },
                _addMapToParent: function(t) {
                    null != t && (t.appendChild(this.element),
                    this._bootstrapSize.width && this._bootstrapSize.height && this._updateRenderingFrameSize(this._bootstrapSize),
                    delete this._bootstrapSize)
                },
                performScheduledUpdate: function() {
                    var t;
                    this.state !== T && ((t = this._mapNode.camera.zoom) % 1 == 0 || this.state !== E && this.state !== S || "SERVER" !== o.forcedRenderingMode && (!o.ready || !o.didFallback && o.canRunCSR) && this.csrCapable && "HYBRID" !== o.forcedRenderingMode && (this._mapNodeController.knownGoodRendering && this._mapNodeController.manageableMap || "CLIENT" === o.forcedRenderingMode) && this._mapNodeController.loadPriority !== m.LoadPriorities.PointsOfInterest || this._mapNode.setZoomLevelAnimated(_.getIntegralZoom(t)),
                    this.state === E ? this.state = Y : this.state === S && (this.state = "Ready"),
                    this._loadResizeDetector())
                },
                _loadResizeDetector: function() {
                    this._iframe || this._resizeObserver || (window.ResizeObserver ? (this._resizeObserver = new window.ResizeObserver(function(t) {
                        this._sizeDidChange()
                    }
                    .bind(this)),
                    this._resizeObserver.observe(this.rootNode.element),
                    this._resizeDetectorDidInstall()) : (this._iframe = _.htmlElement("iframe", {
                        tabindex: -1,
                        "aria-hidden": !0
                    }),
                    this._iframe.addEventListener("load", this),
                    this.element.insertBefore(this._iframe, this._scene.element)))
                },
                _updateUserLocationDisplay: function(t) {
                    this._annotationsController.updateUserLocationAnnotation(t),
                    this._overlaysController.updateUserLocationAccuracyRingOverlay(t)
                },
                _removeUserLocationDisplay: function() {
                    this._annotationsController.removeUserLocationAnnotation(),
                    this._overlaysController.removeUserLocationAccuracyRingOverlay()
                },
                _updateCameraToTrackUserLocation: function(t) {
                    var e, i, n, o;
                    this.tracksUserLocation && this.showsUserLocation && t.coordinate && (this._mapNode.isMapPointWithinBounds(t.coordinate.toMapPoint()) ? this._firstCameraUpdateToTrackUserLocationPending && this.zoomLevel < 9.5 ? (o = 14,
                    0 < t.location.accuracy && (i = 5 * t.location.accuracy * h.mapUnitsPerMeterAtLatitude(t.location.latitude),
                    i = new w(0,0,i,i),
                    n = this.ensureVisibleFrame().size,
                    o = Math.max(this.zoomLevel, h.zoomLevelForMapRectInViewport(i, n, h.tileSize))),
                    i = this._mapRectForCenterAndZoomLevel(t.coordinate.toMapPoint(), o),
                    this._userLocationTrackingDelegate && "function" == typeof this._userLocationTrackingDelegate.mapRegionWillChangeToTrackUserLocation && (e = i.toCoordinateRegion(),
                    this._userLocationTrackingDelegate.mapRegionWillChangeToTrackUserLocation(this.public, e),
                    i = e.toMapRect()),
                    this._mapNode.setCameraAnimated(this.camera.withNewMapRect(i), !0, !0)) : this._userLocationTrackingDelegate && "function" == typeof this._userLocationTrackingDelegate.mapRegionWillChangeToTrackUserLocation ? (e = (i = this._mapRectForCenterAndZoomLevel(t.coordinate.toMapPoint(), this.zoomLevel)).toCoordinateRegion(),
                    this._userLocationTrackingDelegate.mapRegionWillChangeToTrackUserLocation(this.public, e),
                    this._mapNode.setCameraAnimated(this.camera.withNewMapRect(i), !0, !0)) : this.setCenterAnimated(t.coordinate, !0, !0) : (this.setCenterAnimated(t.coordinate, !0, !0),
                    this._userLocationController.tracksUserLocation = !1,
                    this._mapNode.staysCenteredDuringZoom = !1,
                    this.controlsLayer && this.controlsLayer.updateUserLocationControl()),
                    delete this._firstCameraUpdateToTrackUserLocationPending)
                },
                _updateRenderingFrameFromElement: function() {
                    var t = this.rootNode.element
                      , e = t.offsetWidth
                      , t = t.offsetHeight;
                    0 !== e && 0 !== t && this._updateRenderingFrameSize(new l(e,t))
                },
                _setRenderingFrameValue: function(t) {
                    this._renderingFrame = t,
                    this._visibleFrame = t;
                    var e = this._adjustedPadding.copy()
                      , i = this._adjustedPadding = this._adjustedPaddingForMapSize(t.size);
                    i.equals(d.Zero) || (this._visibleFrame = new r(t.origin.x + i.left,t.origin.y + i.top,t.size.width - i.left - i.right,t.size.height - i.top - i.bottom)),
                    !i.equals(e) && this.controlsLayer && this.controlsLayer.mapPaddingDidChange(i)
                },
                _adjustedPaddingForMapSize: function(t) {
                    var e = new l(Math.min(m.MapSizes.minimumSizeToShowLogo.width, t.width),Math.min(m.MapSizes.minimumSizeToShowLogo.height, t.height))
                      , i = this._padding.copy()
                      , n = (i.top < 0 && (i.top = 0),
                    i.left < 0 && (i.left = 0),
                    i.bottom < 0 && (i.bottom = 0),
                    i.right < 0 && (i.right = 0),
                    i.left + i.right)
                      , o = i.top + i.bottom
                      , s = n + e.width - t.width
                      , e = o + e.height - t.height;
                    return 0 < s && 0 < n && (i.left *= t = (n - s) / n,
                    i.right *= t),
                    0 < e && 0 < o && (i.top *= s = (o - e) / o,
                    i.bottom *= s),
                    i
                },
                _iframeDidLoad: function() {
                    try {
                        this._iframe.contentWindow.addEventListener("resize", this)
                    } catch (t) {
                        console.warn("[MapKit] Map resize detection is disabled when loaded in a sandboxed iframe.")
                    }
                    this._resizeDetectorDidInstall()
                },
                _resizeDetectorDidInstall: function() {
                    var t = this._visibleMapRect && this._visibleMapRect.copy()
                      , e = this.rotation
                      , i = this._padding && !this._padding.equals(d.Zero);
                    this._ensureContainerIsPositioned(),
                    this._sizeDidChange(),
                    t && i && (0 < t.size.width || 0 < t.size.height ? (this.setVisibleMapRectAnimated(t, !1),
                    e && this.setRotationAnimated(e, !1)) : this.setCenterAnimated(new y(t.midX(),t.midY()).toCoordinate()))
                },
                _sizeDidChange: function() {
                    this._printMediaQueryList && this._printMediaQueryList.matches || this._updateRenderingFrameFromElement()
                },
                _updateRenderingFrameSize: function(t) {
                    var e = !this._renderingFrame;
                    0 === t.width || 0 === t.height || !e && this._renderingFrame.size.equals(t) || (this._setRenderingFrameValue(new r(0,0,t.width,t.height)),
                    this._scene.size = t,
                    this._mapRoot.size = t,
                    this._mapNodeController.updateSize(t),
                    this._delayedShowItems && (A.LayerItemsController.setRegionForItems(this, this._delayedShowItems[0], this._delayedShowItems[1]),
                    delete this._delayedShowItems),
                    this.controlsLayer && this.controlsLayer.sizeDidChange(),
                    this._annotationsController && this._annotationsController.mapSizeDidUpdate())
                },
                _mapRectForCenterAndZoomLevel: function(t, e) {
                    var i = this.ensureVisibleFrame().size
                      , e = h.pointsPerAxis(e)
                      , n = i.width / e
                      , i = i.height / e;
                    return new w(t.x - n / 2,t.y - i / 2,n,i)
                },
                _isInitialInteractionTargetInUIElement: function() {
                    var t = this._mapUserInteractionController.initialEventTargetForCurrentInteraction;
                    return !!(t && (this._annotationsController && this._annotationsController.isElementInCallout(t) || this.controlsLayer && this.controlsLayer.element.contains(t)))
                },
                _handleZoomStartEvent: function(t) {
                    t.zoomIn && this.zoomLevel >= this.maxZoomLevel || !t.zoomIn && this.zoomLevel <= this.minZoomLevel || this._linearZoomController.start(this.zoomLevel, t.zoomIn) && this._mapNode.cameraWillStartZooming(m.ZoomTypes.Button)
                },
                _handleZoomEndEvent: function(t) {
                    this._linearZoomController.stop()
                },
                _centerMapPoint: function() {
                    if (0 !== this.rotation) {
                        var t = this.renderingMapRect
                          , t = new y(t.midX(),t.midY())
                          , t = this._offsetCenterWithPaddingAndRotation(t, 1);
                        if (t)
                            return t
                    }
                    t = this.visibleMapRect;
                    return new y(t.midX(),t.midY())
                },
                _offsetCenterWithPaddingAndRotation: function(t, e) {
                    var i, e = 2 * e * this.worldSize, n = (this._adjustedPadding.right - this._adjustedPadding.left) / e, e = (this._adjustedPadding.bottom - this._adjustedPadding.top) / e;
                    if (0 != n || 0 != e)
                        return i = -this.rotation / 180 * Math.PI,
                        new y(t.x - n * Math.cos(i) + e * Math.sin(i),t.y - n * Math.sin(i) - e * Math.cos(i))
                },
                _setVisibleMapRect: function(t, e, i) {
                    i || (this.tracksUserLocation = !1);
                    var i = t
                      , n = this._adjustedPadding
                      , o = this.ensureRenderingFrame()
                      , s = this.ensureVisibleFrame();
                    n.equals(d.Zero) || s.equals(r.Zero) || (i = new w(t.minX() - n.left / s.size.width * t.size.width,t.minY() - n.top / s.size.height * t.size.height,t.size.width * (o.size.width / s.size.width),t.size.height * (o.size.height / s.size.height))),
                    this._mapNode.setVisibleMapRectAnimated(i, e)
                },
                _ensureContainerIsPositioned: function() {
                    var t = this.rootNode.element;
                    "static" === t.ownerDocument.defaultView.getComputedStyle(t).position && (t.style.position = "relative")
                },
                didInsertNewMapNode: function(t) {
                    (t.delegate = this).state === M && (this.state = "Switched"),
                    this._updateMapRoot(t),
                    this._updateMapNodeTintAndEmphasis(t),
                    window.setTimeout(function() {
                        this.public.dispatchEvent(new s.Event("map-node-change"))
                    }
                    .bind(this), 0)
                },
                didReconfigureMapNode: function(t) {
                    t.snapsToIntegralZoomLevels && t.zoomLevel % 1 != 0 && !t.cameraIsAnimating && (t.zoomLevel = _.getIntegralZoom(t.zoomLevel)),
                    this._linearZoomController && (this._linearZoomController.snapsToIntegralZoomLevels = t.snapsToIntegralZoomLevels),
                    this.controlsLayer && this.controlsLayer.updateZoomControl()
                },
                didFinishMapNodeInitialization: function(t) {
                    var e;
                    t.customCanvas ? (e = this._scene.element,
                    t.customCanvas.setAttribute("aria-hidden", "true"),
                    e.parentNode.insertBefore(t.customCanvas, e.parentNode.firstChild)) : this._scene.addChild(t, 0)
                },
                mapNodeReady: function(e) {
                    window.setTimeout(function() {
                        var t = new s.Event("map-node-ready");
                        t.usingCSR = e,
                        this.public.dispatchEvent(t),
                        this._logWithMap(p.Events.MapNodeReady)
                    }
                    .bind(this), 0),
                    this.controlsLayer && this.controlsLayer.updateRotationControl(),
                    this._annotationsController && this._annotationsController.mapSupportForLabelRegionsChanged()
                },
                _updateMapRoot: function(t) {
                    this._mapRoot && this._mapRoot.remove(),
                    this._mapRoot = this.rootNode.insertBefore(new e.Node(t.element), this.rootNode.firstChild),
                    t.element.className = "mk-map-node-element",
                    this._mapRoot.size = t.size = this._scene.size,
                    this._annotationsController && this._mapRoot.addChild(this._annotationsController.node),
                    this.controlsLayer && this._mapRoot.addChild(this.controlsLayer)
                },
                _updateMapNodeTintAndEmphasis: function(t) {
                    var e = this.tint = this._mapType === A.MapTypes.Standard ? this._colorScheme : A.ColorSchemes.Dark
                      , i = this._colorScheme;
                    this._mapType === A.MapTypes.Hybrid && (i = A.ColorSchemes.Light),
                    t.setTintAndEmphasis(e, i, this._emphasis),
                    this._mapNodeController && this._mapNodeController.setTintAndEmphasis(e, i, this._emphasis),
                    this.controlsLayer && this.controlsLayer.update(),
                    this._annotationsController && (this._annotationsController.mapNodeTintWasSet(e),
                    this._annotationsController.node.classList.toggle(q, _.darkColorScheme(e))),
                    this.rootNode.classList.toggle(q, _.darkColorScheme(e))
                },
                overlaySelectionDidChange: function(t) {
                    t.selected && this._annotationsController && (this._annotationsController.selectedItem = null);
                    var e = new s.Event(t.selected ? "select" : "deselect");
                    e.overlay = t,
                    this.selectionMayChange = !1,
                    this.public.dispatchEvent(e),
                    delete this.selectionMayChange
                },
                annotationSelectionDidChange: function(t) {
                    t.selected && this._overlaysController && (this._overlaysController.selectedItem = null),
                    this.selectionMayChange = !1,
                    this.dispatchEventWithAnnotation(t.selected ? "select" : "deselect", t),
                    delete this.selectionMayChange
                },
                dispatchEventWithAnnotation: function(t, e, i) {
                    var n = new s.Event(t);
                    if (n.annotation = e,
                    i)
                        for (var o in i)
                            n[o] = i[o];
                    this.public.dispatchEvent(n)
                },
                addWaitingAnnotations: function() {
                    this.shouldWaitForTilesAndControls() || (this._annotationsController ? this._annotationsController.addWaitingAnnotations(this._dispatchCompleteEvent.bind(this)) : this._dispatchCompleteEvent())
                },
                _dispatchCompleteEvent: function() {
                    this._mapNode.fullyRendered && this.public.dispatchEvent(new s.Event("complete"))
                },
                _handleLocaleChange: function(t) {
                    this._mapNodeController.handleMapConfigurationChange(),
                    this._annotationsController && (this._annotationsController.rtl = t.locale.rtl,
                    this._userLocationController) && this._annotationsController.updateUserLocationAnnotation(this._userLocationController.userLocation, !0);
                    t = this.ensureRenderingFrame();
                    0 !== t.size.width && 0 !== t.size.height && this._setRenderingFrameValue(t)
                },
                _elementWasTapped: function(t) {
                    for (; null !== t; t = t.parentNode)
                        if ("a" === (e = t).localName || "button" === e.localName || "input" === e.localName && "button" === e.type)
                            return void t.click();
                    var e
                },
                _devicePixelRatioDidChange: function() {
                    this._scene.needsDisplay = !0,
                    this.controlsLayer && this.controlsLayer.devicePixelRatioDidChange(),
                    this._annotationsController && this._annotationsController.devicePixelRatioDidChange(),
                    this._mapNode.devicePixelRatioDidChange() || this._mapNodeController.handleRecreate()
                },
                _mapRectAccountingForPadding: function() {
                    var t, e, i = this.renderingMapRect;
                    return this._adjustedPadding.equals(d.Zero) ? i.copy() : (t = this.ensureVisibleFrame(),
                    e = this.ensureRenderingFrame(),
                    new w(i.minX() + this._adjustedPadding.left / e.size.width * i.size.width,i.minY() + this._adjustedPadding.top / e.size.height * i.size.height,i.size.width * (t.size.width / e.size.width),i.size.height * (t.size.height / e.size.height)))
                },
                _setupListeners: function() {
                    o.state === o.States.READY && this._configurationDidBecomeAvailable(!0),
                    o.addEventListener(o.Events.Changed, this),
                    a.activeLocale && this._handleLocaleChange({
                        locale: a.activeLocale
                    }),
                    a.addEventListener(a.Events.LocaleChanged, this),
                    this._boundDevicePixelRatioDidChange = this._devicePixelRatioDidChange.bind(this),
                    this._dppxMediaQueryList = window.matchMedia("(-webkit-device-pixel-ratio: 1)"),
                    this._dppxMediaQueryList.addListener(this._boundDevicePixelRatioDidChange),
                    this._boundPrintMediaQueryChanged = this._printMediaQueryChanged.bind(this),
                    this._printMediaQueryList = window.matchMedia("print"),
                    this._printMediaQueryList.addListener(this._boundPrintMediaQueryChanged)
                },
                _removePrintListener: function() {
                    this._printMediaQueryList.removeListener(this._boundPrintMediaQueryChanged),
                    this._boundPrintMediaQueryChanged = null,
                    this._printMediaQueryList = null
                },
                _printMediaQueryChanged: function() {
                    var t = this._mapNode;
                    this._printMediaQueryList.matches ? (this.rootNode.element.style.background = this.rootNode.element.parentNode.dataset.mapPrintingBackground,
                    t.fullyRendered ? this._ensureMapCenterDuringPrint(!0) : (t.opacity = 0,
                    this._annotationsController && this._annotationsController.addWaitingAnnotations()),
                    this._loadControlsLayer(!1),
                    this._mapNodeController.handlePrintMatch(),
                    u.flush()) : (this._mapNodeController.handlePrintUnmatch(),
                    t.opacity = 1,
                    this.rootNode.element.style.background = "",
                    this._ensureMapCenterDuringPrint(!1))
                },
                _ensureMapCenterDuringPrint: function(i) {
                    var t = [this._scene.element];
                    this._mapNode.customCanvas && t.push(this._mapNode.customCanvas),
                    t.forEach(function(t) {
                        var e;
                        i ? (e = this._scene.size,
                        t.style.left = "50%",
                        t.style.marginLeft = "-" + e.width / 2 + "px",
                        t.style.top = "50%",
                        t.style.marginTop = "-" + e.height / 2 + "px") : (t.style.left = "",
                        t.style.marginLeft = "",
                        t.style.top = "",
                        t.style.marginTop = "")
                    }, this)
                },
                _mapStabilizationTimeout: null,
                _startStabilizationTimeoutIfNeeded: function() {
                    this._mapNodeController && this._mapNode && this._mapNode.fullyRendered && !this.cameraIsMoving && (this._stopStabilizationTimeout(),
                    this._mapStabilizationTimeout = window.setTimeout(u.scheduleInBackground.bind(u, this._mapIsStabilized.bind(this)), 500))
                },
                _stopStabilizationTimeout: function() {
                    this._mapStabilizationTimeout && (window.clearTimeout(this._mapStabilizationTimeout),
                    this._mapStabilizationTimeout = null)
                },
                _mapIsStabilized: function() {
                    this._updateMapFeatureRegionLayer(),
                    this._updatePrintingBackground()
                },
                _updatePrintingBackground: function() {
                    this._mapNode && this._mapNode.cssBackgroundProperty && this._mapNode.fullyRendered && this.isRooted() && (this.rootNode.element.parentNode.dataset.mapPrintingBackground = this._mapNode.cssBackgroundProperty)
                },
                _updateMapFeatureRegionLayer: function() {
                    var e, i, t;
                    this._selectableMapFeatures && this._mapNode && this._mapNode.getMapFeatureRegions && this._mapFeaturesLayerController && this._mapNode.fullyRendered && this.isRooted() && (e = -1 !== this._selectableMapFeatures.indexOf(A.MapFeatureType.PointOfInterest),
                    i = -1 !== this._selectableMapFeatures.indexOf(A.MapFeatureType.Territory),
                    t = this._mapNode.getMapFeatureRegions().filter(function(t) {
                        return e && "Poi" === t.category || i && "Territory" === t.category
                    }),
                    this._mapFeaturesLayerController.update(t, this._mapNode.camera),
                    this._mapRoot.addChild(this._mapFeaturesLayerController.node, 0))
                },
                _logWithMap: function(t, e) {
                    if (this.state !== T) {
                        var i = {
                            map: this,
                            eventTarget: p.EventTarget
                        };
                        if (e)
                            for (var n in e)
                                i[n] = e[n];
                        p.log(t, i)
                    }
                }
            };
            var Q = ["LayerItemsController", "ItemCollection", "OverlaysController", "MapFeaturesLayerController", "AnnotationsController", "UserLocationController", "MapFeatureType"];
            function z() {
                for (var t = !0, e = 0; e < Q.length; e++) {
                    var i = Q[e];
                    !A[i] && n.jsModules[i] ? A[i] = n.jsModules[i] : t = !1
                }
                A.OverlaysController && A.maps.forEach(function(t) {
                    t._impl.addOverlaysController()
                }),
                A.MapFeaturesLayerController && A.maps.forEach(function(t) {
                    t._impl.addMapFeaturesLayerController()
                }),
                A.AnnotationsController && A.maps.forEach(function(t) {
                    t._impl.addAnnotationsController()
                }),
                A.UserLocationController && A.maps.forEach(function(t) {
                    t._impl.addUserLocationController()
                }),
                t && n.removeEventListener("load", z)
            }
            n.addEventListener("load", z),
            z(),
            P.exports = A
        }
        ,
        4290: (t,e,i)=>{
            var o = i(5869)
              , s = i(2221)
              , n = i(5097)
              , a = i(4701)
              , r = i(8086).SceneGraphMapNode
              , l = i(8086).SyrupMapNode
              , h = i(7017)
              , c = i(2241)
              , d = i(7095).XHRLoader
              , u = i(7095).Priority
              , p = i(1840).FeatureVisibility
              , m = i(863)
              , _ = i(2137)
              , g = i(764).FallbackType
              , f = i(6490)
              , v = i(1840)
              , y = "mapkit.SpileTestResults"
              , w = {
                sg_grid: {
                    "global-configuration": "sg_ready",
                    upgrade: "syrup_insert"
                },
                sg_insert: {
                    "global-configuration": "sg_ready",
                    upgrade: "syrup_insert",
                    recreate: "sg_insert"
                },
                syrup_insert: {
                    "global-configuration": "syrup_need_spile",
                    fallback: "sg_insert",
                    recreate: "syrup_insert"
                },
                syrup_need_spile: {
                    "spile-load": "syrup_init",
                    fallback: "sg_insert",
                    recreate: "syrup_insert"
                },
                syrup_init: {
                    "global-configuration": "syrup_network_stalled",
                    fallback: "sg_insert",
                    recreate: "syrup_insert",
                    "syrup-complete": "syrup_ready"
                },
                syrup_network_stalled: {
                    "global-configuration": "syrup_network_stalled",
                    fallback: "sg_insert",
                    recreate: "syrup_insert",
                    "syrup-complete": "syrup_ready"
                },
                sg_ready: {
                    "global-configuration": "sg_ready",
                    upgrade: "syrup_insert",
                    recreate: "sg_insert",
                    "map-configuration": "sg_ready"
                },
                syrup_ready: {
                    "global-configuration": "syrup_ready",
                    upgrade: "syrup_insert",
                    fallback: "sg_insert",
                    recreate: "syrup_insert",
                    "map-configuration": "syrup_ready",
                    "print-match": "syrup_printing"
                },
                syrup_printing: {
                    "print-unmatch": "syrup_ready"
                }
            };
            function C(t, e) {
                this._state = null,
                this._map = t,
                this._previousNode = null,
                this.node = null,
                this._initialOptions = e,
                this._cachedWebGLCheck = null,
                this.loadPriority = v.LoadPriorities.LandCover,
                "loadPriority"in e && (this.loadPriority = e.loadPriority),
                this.hasSpile = null,
                this._previousCanRunCSR = !1,
                this._updateState("sg_grid")
            }
            function b(t) {
                this.customCanvas = t.customCanvas,
                f.Opacity.call(this, t)
            }
            function k(t) {
                return btoa(t)
            }
            function L(t) {
                if (s.supportsLocalStorage)
                    try {
                        return window.localStorage.getItem(t)
                    } catch (t) {}
            }
            function E(t) {
                try {
                    return JSON.parse(t)
                } catch (t) {}
            }
            C.prototype = {
                constructor: C,
                get defaultSpileURL() {
                    return this._defaultSpileURL || (this._defaultSpileURL = h.createSyrupUrl()),
                    this._defaultSpileURL
                },
                set defaultSpileURL(t) {
                    this._defaultSpileURL = t
                },
                get usingSSR() {
                    return "sg_insert" === this._state || "sg_ready" === this._state
                },
                get usingAdvancedAPIs() {
                    return !0
                },
                get manageableMap() {
                    var t = this._map.ensureRenderingFrame()
                      , e = .2 * this._gpuInfo.MAX_RENDERBUFFER_SIZE;
                    return t.size.width <= e && t.size.height <= e
                },
                get csrCapable() {
                    return "HYBRID" === o.forcedRenderingMode || "CLIENT" === o.forcedRenderingMode || this._webglCheckResult.shouldTryCSR && !this.knownBadRendering
                },
                get shouldDynamicallyLoadSyrup() {
                    return this._webglCheckResult.shouldTryCSR
                },
                get knownGoodRendering() {
                    return !!this._cachedSpileResult && !!this._cachedSpileResult.pass
                },
                get knownBadRendering() {
                    return !!this._cachedSpileResult && !this._cachedSpileResult.pass
                },
                get _webglCheckResult() {
                    var t;
                    return null === this._cachedWebGLCheck && (t = this._map.ensureRenderingFrame().size,
                    this._cachedWebGLCheck = c(t.width, t.height)),
                    this._cachedWebGLCheck
                },
                get _gpuInfo() {
                    return this._webglCheckResult && this._webglCheckResult.webGL ? this._webglCheckResult.webGL.gpuInfo : {
                        MAX_RENDERBUFFER_SIZE: 0,
                        VERSION: "unknown"
                    }
                },
                get gpuKey() {
                    return k(this._gpuInfo.VERSION)
                },
                get _cachedSpileResult() {
                    var t = L(y);
                    if (t) {
                        t = E(t);
                        if (t)
                            return t[this.gpuKey]
                    }
                },
                get renderingMode() {
                    var t = "CLIENT";
                    return this.usingSSR ? t = "SERVER" : this._switchedToLoCSR && (t = "HYBRID"),
                    t
                },
                configurationDidBecomeAvailable: function(t) {
                    var e = this._previousCanRunCSR
                      , i = o.canRunCSR;
                    this._previousCanRunCSR = i,
                    !e || i || this.usingSSR ? !e && i ? this.handleUpgrade() : t || this.handleGlobalConfigurationChange() : this.handleFallback(g.CONFIG_CHANGE)
                },
                forceSyrup: function() {
                    this.hasSpile = null,
                    this._transition("upgrade")
                },
                updateSize: function(t) {
                    this.node.size = t,
                    this._previousNode && (this._previousNode.size = t)
                },
                destroy: function() {
                    this.node.removeEventListener("reconfigured", this),
                    this.node.destroy(),
                    this.node.delegate = null,
                    this.node = null,
                    this._previousNode && (this._previousNode.destroy(),
                    this._previousNode = null)
                },
                handleEvent: function(t) {
                    "reconfigured" === t.type && (this._switchedToLoCSR = this.node.snapsToIntegralZoomLevels,
                    this._map.didReconfigureMapNode(this.node))
                },
                handleGlobalConfigurationChange: function() {
                    this._transition("global-configuration")
                },
                handleSpileLoad: function() {
                    this._transition("spile-load")
                },
                handleFallback: function(t) {
                    t = t === g.SPILE && t || o.didFallback && o.fallbackType || t;
                    t && this._logFallback(t),
                    this._transition("fallback")
                },
                handleUpgrade: function() {
                    this._transition("upgrade")
                },
                handleRecreate: function() {
                    this._transition("recreate")
                },
                handleMapConfigurationChange: function() {
                    this._transition("map-configuration"),
                    this._previousNode && this._previousNode.configuration && (this._previousNode.language = o.language,
                    this._previousNode.configuration = o.types[this._map.mapType])
                },
                handleSyrupComplete: function() {
                    this._transition("syrup-complete")
                },
                handlePrintMatch: function() {
                    this._transition("print-match")
                },
                handlePrintUnmatch: function() {
                    this._transition("print-unmatch")
                },
                handleMapRendered: function() {
                    this.node instanceof l && (this.node.forcedSnapsToIntegralZoomLevels = !1,
                    this._removePreviousMapNode(!0),
                    o.forcedRenderingMode || this._cachedSpileResult || n.scheduleInBackground(this.spileRun.bind(this), n.Priority.Low))
                },
                setPointOfInterestFilter: function(t) {
                    this._previousNode && (this._previousNode.pointOfInterestFilter = t)
                },
                setTintAndEmphasis: function(t, e, i) {
                    this._previousNode && this._previousNode.setTintAndEmphasis(t, e, i)
                },
                mapCameraDidChange: function() {
                    this._previousNode && this._previousNode.setCameraAnimated(this.node.camera.copy())
                },
                _transition: function(t) {
                    t = w[this._state][t];
                    t && this._updateState(t)
                },
                _updateState: function(t) {
                    this._state = t;
                    t = this["_enter_" + t];
                    "function" == typeof t && t.call(this)
                },
                _loadSpileIfNeeded: function(t) {
                    var e = null
                      , i = function() {
                        e && (e.removeEventListener("error", i),
                        e.removeEventListener("load", i),
                        e = null),
                        this.hasSpile = !!window.Spile && !!window.Spile.Syrup,
                        t.call(this, this.hasSpile)
                    }
                    .bind(this);
                    null != this.hasSpile ? t.call(this, this.hasSpile) : "function" == typeof window.Spile ? i() : ((e = document.head.appendChild(document.createElement("script"))).addEventListener("error", i),
                    e.addEventListener("load", i),
                    e.src = this.defaultSpileURL,
                    e.crossOrigin = a.getCorsAttribute(o.syrupUrlWithCredentials))
                },
                _insertSceneGraphNode: function() {
                    this.usingSSR && (this.node.isRotationEnabled = !1);
                    var t = new r;
                    this._insertNewMapNode(t),
                    this._map.didFinishMapNodeInitialization(t)
                },
                _enter_sg_grid: function() {
                    this._insertSceneGraphNode(),
                    o.ready && !o.canRunCSR && this._updateState("sg_ready")
                },
                _enter_sg_insert: function() {
                    this._insertSceneGraphNode(),
                    o.ready && this._updateState("sg_ready")
                },
                _enter_syrup_insert: function() {
                    var t = new l;
                    t.pendingConfigurationUpdates = {},
                    this._insertNewMapNode(t),
                    o.state === o.States.READY && this._updateState("syrup_need_spile")
                },
                _insertNewMapNode: function(t) {
                    var e = this._initialOptions || {};
                    this._initialOptions || this.node._impl._cameraWillChange(this.node, !1),
                    this.node ? (this._removePreviousMapNode(),
                    this.node.migrateStateTo(t),
                    this.node.removeEventListener("reconfigured", this),
                    this.node.deactivate(),
                    this._previousNode = this.node) : (t.allowWheelToZoom = "_allowWheelToZoom"in e && !!e._allowWheelToZoom,
                    t.pannable = !("isScrollEnabled"in e && !e.isScrollEnabled),
                    t.zoomable = !("isZoomEnabled"in e && !e.isZoomEnabled),
                    "pointOfInterestFilter"in e ? ("showsPointsOfInterest"in e && console.warn("[MapKit] `showsPointsOfInterest` is ignored because `pointOfInterestFilter` is set."),
                    null !== e.pointOfInterestFilter && s.checkInstance(e.pointOfInterestFilter, m, "[MapKit] Unknown value for `pointOfInterestFilter`. It must be an instance of mapkit.PointOfInterestFilter."),
                    t.pointOfInterestFilter = e.pointOfInterestFilter) : "showsPointsOfInterest"in e && (e.showsPointsOfInterest ? t.pointOfInterestFilter = null : t.pointOfInterestFilter = m.filterExcludingAllCategories),
                    t.showsDefaultTiles = !("_showsDefaultTiles"in e && !e._showsDefaultTiles)),
                    this.node = t,
                    this.node.addEventListener("reconfigured", this),
                    this._map.didInsertNewMapNode(t),
                    this._initialOptions ? delete this._initialOptions : this.node._impl._cameraDidChange(this.node, !1)
                },
                _removePreviousMapNode: function(t) {
                    this._previousNode && (t ? new b({
                        node: this._previousNode,
                        duration: 150,
                        from: 1,
                        to: 0,
                        customCanvas: this._previousNode.customCanvas,
                        done: this._removePreviousMapNode.bind(this, !1)
                    }).begin() : (this._previousNode.destroy(!0),
                    this._previousNode.remove(),
                    this._previousNode = null))
                },
                _enter_syrup_need_spile: function() {
                    var t;
                    this.shouldDynamicallyLoadSyrup ? this.knownBadRendering && !o.forcedRenderingMode ? (this.handleFallback(g.CACHE),
                    this._loadSpileIfNeeded(function(t) {
                        this.node && t && (this.isSpileResultValid(this._cachedSpileResult) || (this.invalidateSpileCache(),
                        n.scheduleInBackground(this.spileRun.bind(this), n.Priority.Low)))
                    }
                    .bind(this))) : (this.loadPriority && this._previousNode && this._previousNode instanceof r && !this._previousNode.configuration && 0 === this.node.rotation && (t = this.loadPriority === v.LoadPriorities.PointsOfInterest,
                    this._previousNode.snapsToIntegralZoomLevels = t,
                    (this._previousNode.labels = t) && (this.node.forcedSnapsToIntegralZoomLevels = !0,
                    this.node.setZoomLevelAnimated(a.getIntegralZoom(this.node.zoomLevel))),
                    this._previousNode.language = o.language,
                    this._previousNode.configuration = o.types[this._map.mapType],
                    this._previousNode.delegate = {
                        mapDidFinishRendering: function(t) {
                            this._map.previousMapDidFinishRendering(t)
                        }
                        .bind(this)
                    },
                    this._previousNode.setCameraBoundaryAnimated(null),
                    this._previousNode.setCameraZoomRangeAnimated(null)),
                    this._loadSpileIfNeeded(function(t) {
                        t ? this.handleSpileLoad() : this.handleFallback(g.FETCH)
                    })) : this.handleFallback(g.WEBGL)
                },
                _enter_syrup_init: function() {
                    var t, e;
                    o.madabaDomains && o.madabaDomains.length ? (this._cachedSpileResult && !this.isSpileResultValid(this._cachedSpileResult) && this.invalidateSpileCache(),
                    t = Spile.getRendererWithoutAnyWarranty(),
                    this._switchedToLoCSR = !this.knownGoodRendering || !this.manageableMap,
                    o.forcedRenderingMode && (this._switchedToLoCSR = "HYBRID" === o.forcedRenderingMode),
                    this.manageableMap || this.usingAdvancedAPIs || o.forcedRenderingMode ? (e = this.node,
                    this._reConfigureMapNode(),
                    e.init(o, t, Spile.Syrup.Camera, this._switchedToLoCSR, function(t) {
                        t ? (this._csrWarning(5),
                        this.handleFallback(g.INIT)) : (this._reConfigureMapNode(),
                        e.needsDisplay = !0,
                        this._map.didFinishMapNodeInitialization(e),
                        this.handleSyrupComplete())
                    }
                    .bind(this))) : this.handleFallback(g.SUFFICIENT)) : (this._csrWarning(1),
                    this.handleFallback(g.CONFIG_MISSING))
                },
                _csrWarning: function(t) {
                    console.warn("[MapKit] CSR is unavailable:", t)
                },
                _enter_syrup_network_stalled: function() {
                    this.node.updateNetworkConfiguration(o)
                },
                _enter_sg_ready: function() {
                    this._removePreviousMapNode(),
                    this.node.snapsToIntegralZoomLevels = !0,
                    this.node.isRotationEnabled = !1,
                    this._reConfigureMapNode(),
                    this._map.mapNodeReady(!1)
                },
                _enter_syrup_ready: function() {
                    !this.node.fullyRendered && this._previousNode && this._previousNode.configuration ? (this._previousNode.language = o.language,
                    this._previousNode.configuration = o.types[this._map.mapType]) : this._removePreviousMapNode(),
                    this._reConfigureMapNode(),
                    this.node.updateNetworkConfiguration(o),
                    this.node.makePendingConfigurationUpdates(),
                    this._map.mapNodeReady(!0)
                },
                _reConfigureMapNode: function() {
                    this.node.language = o.language,
                    this.node.configuration = o.types[this._map.mapType],
                    this.node._impl.debug || (this.node._impl.debug = !!o.showsTileInfo),
                    this._map.didReconfigureMapNode(this.node)
                },
                _enter_syrup_printing: function() {
                    this.node.forceRerender(),
                    this.node.needsDisplay = !0
                },
                _logFallback: function(i) {
                    var t, n;
                    s.doNotTrack() || (t = "https://gsp10-ssl.ls.apple.com/hvr/mw/v1/spile",
                    o.proxyPrefixes && (t = o.proxyPrefixes[o.proxyPrefixes.length - 1] + t),
                    n = this._usingCSRAPI(),
                    new d(t,{
                        getDataToSend: function(t) {
                            t.setRequestHeader("Content-Type", "text/plain"),
                            t.responseType = "text";
                            var t = _.uaParserInfo.browserInfo
                              , e = _.uaParserInfo.deviceInfo;
                            return JSON.stringify({
                                ssrFallback: {
                                    reason: i,
                                    usingCSRAPI: n,
                                    devicePlatform: e.platform,
                                    deviceOs: e.os,
                                    browserName: t.name,
                                    browserVersion: t.version
                                }
                            })
                        }
                    },{
                        method: "POST",
                        priority: u.Low,
                        withCredentials: o.withCredentials
                    }).schedule())
                },
                _usingCSRAPI: function() {
                    return !(this._map._showsCompass !== p.Visible && (this._map._showsCompass !== p.Adaptive || this._map._usingDefaultShowsCompassValue) && 0 === this._map.rotation && !this._map._annotationsController.containsMarkerAnnotation())
                },
                spileRun: function() {
                    this.node && Spile && Spile.testRendering && Spile.testRendering(this.cacheSpileResult.bind(this))
                },
                cacheSpileResult: function(t) {
                    if (this.node && t.status !== Spile.Status.MAYBE && t["gpu-identifier"]) {
                        var e = k(t["gpu-identifier"].VERSION)
                          , t = t.status === Spile.Status.YES
                          , i = L(y)
                          , i = i && E(i) || {}
                          , e = (i[e] = {
                            pass: t,
                            version: Spile.version
                        },
                        JSON.stringify(i));
                        if (s.supportsLocalStorage)
                            try {
                                window.localStorage.setItem("mapkit.SpileTestResults", e)
                            } catch (t) {}
                        t || this.usingSSR || this.handleFallback(g.SPILE),
                        t && (this.usingSSR || this._switchedToLoCSR) && o.canRunCSR && this.handleUpgrade()
                    }
                },
                isSpileResultValid: function(t) {
                    if (Spile && Spile.version)
                        return t.version === Spile.version
                },
                invalidateSpileCache: function() {
                    if (s.supportsLocalStorage)
                        try {
                            window.localStorage.removeItem("mapkit.SpileTestResults")
                        } catch (t) {}
                }
            },
            b.prototype = s.inheritPrototype(f.Opacity, b, {
                update: function(t) {
                    this.customCanvas && (this.customCanvas.style.opacity = this.valueAt(t)),
                    f.Opacity.prototype.update.call(this, t)
                }
            }),
            t.exports = C
        }
        ,
        2488: (t,e,i)=>{
            var n = i(5403)
              , o = i(2221)
              , s = i(6814)
              , a = i(5598);
            function r(t, e) {
                a(this, r) && (Object.defineProperty(this, "_impl", {
                    value: Object.create(n.prototype)
                }),
                n.call(this._impl, this, t, e))
            }
            window.DOMPoint || (window.DOMPoint = i(6782)),
            r.MapTypes = n.MapTypes,
            r.ColorSchemes = n.ColorSchemes,
            r.Distances = n.Distances,
            r.LoadPriorities = n.LoadPriorities,
            r.prototype = o.inheritPrototype(s.EventTarget, r, {
                get padding() {
                    return this._impl.padding
                },
                set padding(t) {
                    this._impl.padding = t
                },
                get isScrollEnabled() {
                    return this._impl.isScrollEnabled
                },
                set isScrollEnabled(t) {
                    this._impl.isScrollEnabled = t
                },
                get isZoomEnabled() {
                    return this._impl.isZoomEnabled
                },
                set isZoomEnabled(t) {
                    this._impl.isZoomEnabled = t
                },
                get showsZoomControl() {
                    return this._impl.showsZoomControl
                },
                set showsZoomControl(t) {
                    this._impl.showsZoomControl = t
                },
                get showsScale() {
                    return this._impl.showsScale
                },
                set showsScale(t) {
                    this._impl.showsScale = t
                },
                get mapType() {
                    return this._impl.getMapTypeWithEmphasis()
                },
                set mapType(t) {
                    this._impl.setMapTypeWithEmphasis(t)
                },
                get colorScheme() {
                    return this._impl.colorScheme
                },
                set colorScheme(t) {
                    this._impl.colorScheme = t
                },
                get distances() {
                    return this._impl.distances
                },
                set distances(t) {
                    this._impl.distances = t
                },
                get _allowWheelToZoom() {
                    return this._impl._allowWheelToZoom
                },
                set _allowWheelToZoom(t) {
                    this._impl._allowWheelToZoom = t
                },
                get _showsTileInfo() {
                    return this._impl._showsTileInfo
                },
                set _showsTileInfo(t) {
                    this._impl._showsTileInfo = t
                },
                get _showsDefaultTiles() {
                    return this._impl._showsDefaultTiles
                },
                set _showsDefaultTiles(t) {
                    this._impl._showsDefaultTiles = t
                },
                get loadPriority() {
                    return this._impl.loadPriority
                },
                set loadPriority(t) {
                    this._impl.loadPriority = t
                },
                get tileOverlays() {
                    return this._impl.tileOverlays
                },
                set tileOverlays(t) {
                    this._impl.tileOverlays = t
                },
                addTileOverlay: function(t) {
                    return this._impl.addTileOverlay(t)
                },
                addTileOverlays: function(t) {
                    return this._impl.addTileOverlays(t)
                },
                removeTileOverlay: function(t) {
                    return this._impl.removeTileOverlay(t)
                },
                removeTileOverlays: function(t) {
                    return this._impl.removeTileOverlays(t)
                },
                get showsMapTypeControl() {
                    return this._impl.showsMapTypeControl
                },
                set showsMapTypeControl(t) {
                    this._impl.showsMapTypeControl = t
                },
                get showsUserLocationControl() {
                    return this._impl.showsUserLocationControl
                },
                set showsUserLocationControl(t) {
                    this._impl.showsUserLocationControl = t
                },
                get showsPointsOfInterest() {
                    return this._impl.showsPointsOfInterest
                },
                set showsPointsOfInterest(t) {
                    this._impl.showsPointsOfInterest = t
                },
                get pointOfInterestFilter() {
                    return this._impl.pointOfInterestFilter
                },
                set pointOfInterestFilter(t) {
                    this._impl.pointOfInterestFilter = t
                },
                get element() {
                    return this._impl.element
                },
                set element(t) {
                    this._impl.element = t
                },
                get visibleMapRect() {
                    return this._impl.visibleMapRect
                },
                set visibleMapRect(t) {
                    this._impl.visibleMapRect = t
                },
                setVisibleMapRectAnimated: function(t, e) {
                    return this._impl.setVisibleMapRectAnimated(t, e)
                },
                get region() {
                    return this._impl.region
                },
                set region(t) {
                    this._impl.region = t
                },
                setRegionAnimated: function(t, e) {
                    return this._impl.setRegionAnimated(t, e)
                },
                get isRotationAvailable() {
                    return this._impl.isRotationAvailable
                },
                set isRotationAvailable(t) {
                    this._impl.isRotationAvailable = t
                },
                get isRotationEnabled() {
                    return this._impl.isRotationEnabled
                },
                set isRotationEnabled(t) {
                    this._impl.isRotationEnabled = t
                },
                get rotation() {
                    return this._impl.rotation
                },
                set rotation(t) {
                    this._impl.rotation = t
                },
                get showsCompass() {
                    return this._impl.showsCompass
                },
                set showsCompass(t) {
                    this._impl.showsCompass = t
                },
                setRotationAnimated: function(t, e) {
                    return this._impl.setRotationAnimated(t, e)
                },
                get center() {
                    return this._impl.center
                },
                set center(t) {
                    this._impl.center = t
                },
                setCenterAnimated: function(t, e) {
                    return this._impl.setCenterAnimated(t, e)
                },
                get cameraZoomRange() {
                    return this._impl.cameraZoomRange
                },
                set cameraZoomRange(t) {
                    this._impl.cameraZoomRange = t
                },
                setCameraZoomRangeAnimated: function(t, e) {
                    return this._impl.setCameraZoomRangeAnimated(t, e)
                },
                get cameraDistance() {
                    return this._impl.cameraDistance
                },
                set cameraDistance(t) {
                    this._impl.cameraDistance = t
                },
                setCameraDistanceAnimated: function(t, e) {
                    return this._impl.setCameraDistanceAnimated(t, e)
                },
                get cameraBoundary() {
                    return this._impl.cameraBoundary
                },
                set cameraBoundary(t) {
                    this._impl.cameraBoundary = t
                },
                setCameraBoundaryAnimated: function(t, e) {
                    return this._impl.setCameraBoundaryAnimated(t, e)
                },
                get overlays() {
                    return this._impl.overlays
                },
                set overlays(t) {
                    this._impl.overlays = t
                },
                get selectedOverlay() {
                    return this._impl.selectedOverlay
                },
                set selectedOverlay(t) {
                    this._impl.selectedOverlay = t
                },
                addOverlay: function(t) {
                    return this._impl.addOverlay(t)
                },
                addOverlays: function(t) {
                    return this._impl.addOverlays(t)
                },
                removeOverlay: function(t) {
                    return this._impl.removeOverlay(t)
                },
                removeOverlays: function(t) {
                    return this._impl.removeOverlays(t)
                },
                topOverlayAtPoint: function(t) {
                    return this._impl.topOverlayAtPoint(t)
                },
                overlaysAtPoint: function(t) {
                    return this._impl.overlaysAtPoint(t)
                },
                get annotations() {
                    return this._impl.annotations
                },
                set annotations(t) {
                    this._impl.annotations = t
                },
                get selectedAnnotation() {
                    return this._impl.selectedAnnotation
                },
                set selectedAnnotation(t) {
                    this._impl.selectedAnnotation = t
                },
                addAnnotation: function(t) {
                    return this._impl.addAnnotation(t)
                },
                addAnnotations: function(t) {
                    return this._impl.addAnnotations(t)
                },
                removeAnnotation: function(t) {
                    return this._impl.removeAnnotation(t)
                },
                removeAnnotations: function(t) {
                    return this._impl.removeAnnotations(t)
                },
                showItems: function(t, e) {
                    return this._impl.showItems(t, e)
                },
                addItems: function(t) {
                    return this._impl.addItems(t)
                },
                removeItems: function(t) {
                    return this._impl.removeItems(t)
                },
                annotationsInMapRect: function(t) {
                    return this._impl.annotationsInMapRect(t)
                },
                updateSize: function(t) {
                    return this._impl.updateSize(t)
                },
                convertCoordinateToPointOnPage: function(t) {
                    return this._impl.convertCoordinateToPointOnPage(t)
                },
                convertPointOnPageToCoordinate: function(t) {
                    return this._impl.convertPointOnPageToCoordinate(t)
                },
                get showsUserLocation() {
                    return this._impl.showsUserLocation
                },
                set showsUserLocation(t) {
                    this._impl.showsUserLocation = t
                },
                get userLocationAnnotation() {
                    return this._impl.userLocationAnnotation
                },
                get tracksUserLocation() {
                    return this._impl.tracksUserLocation
                },
                set tracksUserLocation(t) {
                    this._impl.tracksUserLocation = t
                },
                get tintColor() {
                    return this._impl.tintColor
                },
                set tintColor(t) {
                    this._impl.tintColor = t
                },
                destroy: function() {
                    this._impl.destroy()
                },
                get annotationForCluster() {
                    return this._impl.annotationForCluster
                },
                set annotationForCluster(t) {
                    this._impl.annotationForCluster = t
                },
                get selectableMapFeatures() {
                    return this._impl.selectableMapFeatures
                },
                set selectableMapFeatures(t) {
                    this._impl.selectableMapFeatures = t
                },
                get annotationForMapFeature() {
                    return this._impl.annotationForMapFeature
                },
                set annotationForMapFeature(t) {
                    this._impl.annotationForMapFeature = t
                }
            }),
            t.exports = r
        }
        ,
        4618: (t,e,i)=>{
            var n = i(2221)
              , o = i(5097);
            function s() {
                this._overlays = []
            }
            s.prototype = {
                constructor: s,
                fadeOverlayTo: function(t, e) {
                    Object.prototype.hasOwnProperty.call(t, "fadeInOutOpacity") ? t.fadeInOutOpacity.durationMs = 350 * Math.abs(t.fadeInOutOpacity.value - t.fadeInOutOpacity.end) : (t.fadeInOutOpacity = {
                        durationMs: 350
                    },
                    t.setFadeInOutOpacity(1 - e),
                    this._overlays.push(t)),
                    t.fadeInOutOpacity.start = t.fadeInOutOpacity.value,
                    t.fadeInOutOpacity.end = e,
                    t.fadeInOutOpacity.startTime = Date.now(),
                    o.scheduleASAP(this)
                },
                performScheduledUpdate: function() {
                    var e = Date.now();
                    this._overlays = this._overlays.filter(function(t) {
                        return t.setFadeInOutOpacity(n.clamp(t.fadeInOutOpacity.start + (t.fadeInOutOpacity.end - t.fadeInOutOpacity.start) * ((e - t.fadeInOutOpacity.startTime) / t.fadeInOutOpacity.durationMs), 0, 1)),
                        t.fadeInOutOpacity.value !== t.fadeInOutOpacity.end || (delete t.fadeInOutOpacity,
                        !1)
                    }),
                    0 < this._overlays.length && o.scheduleOnNextFrame(this)
                }
            },
            t.exports = s
        }
        ,
        1070: (t,e,i)=>{
            var u = i(5479).MapRect
              , n = i(2221)
              , o = ["visible", "enabled", "selected", "data"];
            function s(t, e, i) {
                this._node = t,
                this._public = e,
                i = n.checkOptions(i),
                o.forEach(function(t) {
                    t in i && (this[t] = i[t])
                }, this),
                Object.keys(i).forEach(function(t) {
                    o.indexOf(t) < 0 && console.warn("[MapKit] Unknown option: " + t + ". Use the data property to store custom data.")
                })
            }
            s.prototype = {
                constructor: s,
                delegate: null,
                _map: null,
                _visible: !0,
                _enabled: !0,
                _selected: !1,
                get map() {
                    return this._map
                },
                set map(t) {
                    console.warn("[MapKit] The `map` property of an overlay is read-only. Use map.addOverlay() instead.")
                },
                get data() {
                    return Object.prototype.hasOwnProperty.call(this, "_data") || (this._data = {}),
                    this._data
                },
                set data(t) {
                    this._data = t
                },
                get visible() {
                    return this._visible
                },
                set visible(t) {
                    t = !!t;
                    this._visible !== t && (this._visible = t,
                    this.updatedProperty("visible"))
                },
                get enabled() {
                    return this._enabled
                },
                set enabled(t) {
                    this._enabled = !!t
                },
                get selected() {
                    return this._selected
                },
                set selected(t) {
                    t = !!t;
                    t !== this._selected && (this.delegate && !this.delegate.selectionMayChange ? console.warn("[MapKit] Selection may not change in select/deselect event handler.") : (this._selected = t,
                    this.updatedProperty("selected")))
                },
                get node() {
                    return this._node
                },
                canBePicked: function() {
                    return this.shown && this._visible
                },
                setMap: function(t) {
                    t ? this._map = t : this._map && delete this._map
                },
                handleEvent: function() {},
                updatedProperty: function(t) {
                    this.delegate && this.delegate.overlayPropertyDidChange(this._public, t)
                },
                visibleAfterClipping: function(t, e, i, n, o) {
                    this._node.shapes = [];
                    var s = this.visibilityToleranceAtScale(i)
                      , a = this._boundingRect || this.boundingRectAtScale(i);
                    if (!this.visible || a.maxY() + s < t.minY() || a.minY() - s > t.maxY())
                        return !1;
                    for (var r = a.minX() - s, l = a.maxX() + s, a = r < 0 ? 1 : 0, h = 1 + a, c = a - 1; c <= h; ++c) {
                        var d = 0 === c ? t : new u(t.origin.x - c,t.origin.y,t.size.width,t.size.height);
                        l >= d.minX() && r <= d.maxX() && 0 < (d = this.clipOverlay(d, e, i, n, o)).length && (d.xOffset = c,
                        this._node.shapes.push(d))
                    }
                    return 0 < this._node.shapes.length
                },
                visibilityToleranceAtScale: function() {
                    return 0
                }
            },
            t.exports = s
        }
        ,
        3660: (t,e,i)=>{
            var n = i(2221)
              , o = i(6814)
              , s = i(1070);
            function a(t) {
                Object.defineProperty(this, "_impl", {
                    value: new s(null,this,t)
                })
            }
            a.Events = {
                Select: "select",
                Deselect: "deselect"
            },
            a.prototype = n.inheritPrototype(o.EventTarget, a, {
                get map() {
                    return this._impl.map
                },
                set map(t) {
                    this._impl.map = t
                },
                get data() {
                    return this._impl.data
                },
                set data(t) {
                    this._impl.data = t
                },
                get visible() {
                    return this._impl.visible
                },
                set visible(t) {
                    this._impl.visible = t
                },
                get enabled() {
                    return this._impl.enabled
                },
                set enabled(t) {
                    this._impl.enabled = t
                },
                get selected() {
                    return this._impl.selected
                },
                set selected(t) {
                    this._impl.selected = t
                }
            }),
            t.exports = a
        }
        ,
        8389: (t,e,i)=>{
            var n = i(462)
              , i = i(2221);
            function o(t) {
                n.GroupNode.call(this),
                this._controller = t
            }
            o.prototype = i.inheritPrototype(n.GroupNode, o, {
                stringInfo: function() {
                    return "OverlaysControllerNode"
                }
            }),
            t.exports = o
        }
        ,
        562: (t,e,i)=>{
            var n = i(9614)
              , o = i(8389)
              , s = i(3660)
              , a = i(4618)
              , d = i(2221)
              , c = i(4701)
              , r = i(7664)
              , l = i(5097)
              , u = i(1840)
              , p = i(764).Tints;
            function h(t) {
                n.call(this, t),
                this._node = new o(this),
                this._fadeAnimationController = new a
            }
            h.Overlay = s,
            h.prototype = d.inheritPrototype(n, h, {
                itemConstructor: s,
                itemName: "overlay",
                capitalizedItemName: "Overlay",
                get map() {
                    return this._map
                },
                isItemExposed: function(t) {
                    return t !== this._userLocationAccuracyRingOverlay
                },
                removeUserLocationAccuracyRingOverlay: function() {
                    this._userLocationAccuracyRingOverlay && (this.removeAnyItem(this._userLocationAccuracyRingOverlay),
                    delete this._userLocationAccuracyRingOverlay)
                },
                removedReferenceToMap: function() {
                    this._items.forEach(function(t) {
                        t._impl.setMap(null)
                    })
                },
                mapCameraDidChange: function() {
                    0 !== this._items.length && (l.scheduleASAP(this),
                    this._deletePreviousPointForPickingItem())
                },
                overlayPropertyDidChange: function(t, e) {
                    switch (e) {
                    case "selected":
                        t.selected ? this.selectedItem = t : this.selectedItem = null,
                        this._map.overlaySelectionDidChange(t),
                        l.scheduleASAP(this);
                        break;
                    case "style":
                    case "visible":
                    case "geometry":
                        l.scheduleASAP(this)
                    }
                },
                fadeOverlayTo: function(t, e) {
                    this._fadeAnimationController.fadeOverlayTo(t, e)
                },
                updateUserLocationAccuracyRingOverlay: function(t) {
                    t.coordinate && (this._userLocationAccuracyRingOverlay ? this._userLocationAccuracyRingOverlay.updateForUserLocation(t) : this._userLocationAccuracyRingOverlay = this.addItem(new h.AccuracyRingOverlay(t)))
                },
                addedItem: function(t, e) {
                    n.prototype.addedItem.call(this, t, e),
                    t._impl.setMap(this._map.public),
                    t.selected && (this.selectedItem = t),
                    l.scheduleASAP(this)
                },
                removedItem: function(t) {
                    t._impl.setMap(null),
                    n.prototype.removedItem.call(this, t),
                    l.scheduleASAP(this)
                },
                pickableItemsCloseToPoint: function(t, e, i) {
                    var n = document.createElement("canvas")
                      , o = n.getContext("2d")
                      , s = (n.width = n.height = 1,
                    this._map.camera)
                      , a = e.x - .5
                      , r = e.y - .5
                      , l = (o.translate(-a, -r),
                    "number" == typeof i ? i : this._selectionDistance / c.devicePixelRatio)
                      , h = !1;
                    return t.filter(function(t) {
                        return !!t._impl.shown && (h && (o.clearRect(a, r, n.width, n.height),
                        h = !1),
                        t._impl.node._renderer.render(o, s, l),
                        h = !0,
                        !!o.getImageData(Math.floor(.5), Math.floor(.5), 1, 1).data[3])
                    }, this).reverse()
                },
                performScheduledUpdate: function() {
                    var t = this.map;
                    if (t) {
                        for (var e = t.camera.toRenderingMapRect(), i = t.worldSize, n = Math.ceil(d.log2(i)), o = [], s = this._items, a = 0, r = s.length; a < r; ++a) {
                            var l, h = s[a];
                            h._impl.shown = h._impl.visibleAfterClipping(e, !0, i, n, !0),
                            h === this._userLocationAccuracyRingOverlay && (l = (l = t.mapType) === u.MapTypes.Satellite || l === u.MapTypes.Hybrid ? "satellite" : t.colorScheme === p.Dark ? "dark" : "light",
                            this._userLocationAccuracyRingOverlay.updateIsShown(t.region, t.worldSize, l)),
                            h._impl.shown && !h.selected && (o.push(h._impl.node),
                            h._impl.node.needsDisplay = !0)
                        }
                        var c = this.selectedItem;
                        c && c._impl.shown && (o.push(c._impl.node),
                        c._impl.node.needsDisplay = !0),
                        this._node.children = o
                    }
                }
            }),
            r.jsModules.AccuracyRingOverlay ? h.AccuracyRingOverlay = r.jsModules.AccuracyRingOverlay : r.addEventListener("load", function t(e) {
                e.jsModules.AccuracyRingOverlay && (h.AccuracyRingOverlay = e.jsModules.AccuracyRingOverlay,
                r.removeEventListener("load", t))
            }),
            t.exports = h
        }
        ,
        7016: (t,e,i)=>{
            var n = i(2221)
              , o = i(5598);
            function s() {
                var t, e;
                o(this, s) && (1 === (t = arguments.length) && "object" == typeof arguments[0] ? (this.top = 0,
                this.right = 0,
                this.bottom = 0,
                e = arguments[this.left = 0],
                Object.keys(e).forEach(function(t) {
                    "top" === t || "right" === t || "bottom" === t || "left" === t ? this[t] = e[t] : console.warn("[MapKit] Unknown property `" + t + "` for Padding constructor.")
                }, this)) : (this.top = 0 < t ? arguments[0] : 0,
                this.right = 1 < t ? arguments[1] : 0,
                this.bottom = 2 < t ? arguments[2] : 0,
                this.left = 3 < t ? arguments[3] : 0),
                n.checkType(this.top, "number", "[MapKit] Expected a number for `top` in Padding constructor but got `" + this.top + "` instead."),
                n.checkType(this.left, "number", "[MapKit] Expected a number for `left` in Padding constructor but got `" + this.left + "` instead."),
                n.checkType(this.bottom, "number", "[MapKit] Expected a number for `bottom` in Padding constructor but got `" + this.bottom + "` instead."),
                n.checkType(this.right, "number", "[MapKit] Expected a number for `right` in Padding constructor but got `" + this.right + "` instead."))
            }
            s.Zero = new s,
            s.prototype = {
                constructor: s,
                toString: function() {
                    return "Padding(" + [this.top, this.right, this.bottom, this.left].join(", ") + ")"
                },
                copy: function() {
                    return new s(this.top,this.right,this.bottom,this.left)
                },
                equals: function(t) {
                    return this.top === t.top && this.right === t.right && this.bottom === t.bottom && this.left === t.left
                }
            },
            t.exports = s
        }
        ,
        9648: t=>{
            t.exports = {}
        }
        ,
        863: (t,e,i)=>{
            var n = i(2221)
              , o = i(9648);
            function s(t) {
                return t.map(function(t) {
                    if (n.checkValueIsInEnum(t, o))
                        return t;
                    throw new Error("[MapKit] Unknown category `" + t + "`. Choose from mapkit.PointOfInterestCategory.")
                })
            }
            function a(t) {
                if ("includes"in (t = n.checkOptions(t)) && "excludes"in t)
                    throw new Error("[MapKit] `includes` and `excludes` may not be specified at the same time.");
                if (!("includes"in t || "excludes"in t))
                    throw new Error("[MapKit] Either `includes` or `excludes` should be specified.");
                "includes"in t && (this._includes = s(t.includes)),
                "excludes"in t && (this._excludes = s(t.excludes))
            }
            function r() {
                throw new Error("[MapKit] `PointOfInterestFilter` may not be constructed directly. Use the mapkit.PointOfInterestFilter.including or the mapkit.PointOfInterestFilter.excluding methods.")
            }
            a.prototype = r.prototype = {
                constructor: r,
                _includes: null,
                _excludes: null,
                includesCategory: function(t) {
                    if (n.checkValueIsInEnum(t, o))
                        return this._includes ? -1 !== this._includes.indexOf(t) : this._excludes ? -1 === this._excludes.indexOf(t) : void 0;
                    throw new Error("[MapKit] Unknown category `" + t + "`. Choose from mapkit.PointOfInterestCategory.")
                },
                excludesCategory: function(t) {
                    if (n.checkValueIsInEnum(t, o))
                        return this._includes ? -1 === this._includes.indexOf(t) : this._excludes ? -1 !== this._excludes.indexOf(t) : void 0;
                    throw new Error("[MapKit] Unknown category `" + t + "`. Choose from mapkit.PointOfInterestCategory.")
                }
            },
            Object.defineProperties(r, {
                including: {
                    get: function() {
                        return a.including
                    }
                },
                excluding: {
                    get: function() {
                        return a.excluding
                    }
                }
            }),
            Object.defineProperties(a, {
                exposedConstructor: {
                    value: r
                },
                including: {
                    value: function(t) {
                        return n.checkArray(t, "[MapKit] mapkit.pointOfInterestFilterIncludingCategories expected an array of categories."),
                        new a({
                            includes: t
                        })
                    }
                },
                excluding: {
                    value: function(t) {
                        return n.checkArray(t, "[MapKit] mapkit.pointOfInterestFilterExcludingCategories expected an array of categories."),
                        new a({
                            excludes: t
                        })
                    }
                },
                filterIncludingAllCategories: {
                    get: function() {
                        var t = this.excluding([]);
                        return Object.defineProperty(this, "filterIncludingAllCategories", {
                            value: t
                        }),
                        t
                    },
                    configurable: !0
                },
                filterExcludingAllCategories: {
                    get: function() {
                        var t = this.including([]);
                        return Object.defineProperty(this, "filterExcludingAllCategories", {
                            value: t
                        }),
                        t
                    },
                    configurable: !0
                }
            }),
            t.exports = a
        }
        ,
        6814: (t,e,i)=>{
            var n = i(3838)
              , o = i(811);
            function s() {}
            (s.prototype = Object.create(n.EventTarget.prototype)).dispatchEvent = function(t) {
                return o(n.EventTarget.prototype.dispatchEvent, this, [t], !0)
            }
            ;
            i = {
                EventTarget: s,
                Event: n.Event
            };
            t.exports = i
        }
        ,
        4564: (t,e,i)=>{
            var n, o, s = i(2221);
            function a(t) {
                this.hostNode = t,
                this._elementNodeMap = {}
            }
            window.document && (n = i(7768),
            (o = function(t) {
                n.Node.call(this, t)
            }
            ).prototype = s.inheritPrototype(n.Node, o, {
                toString: function() {
                    return this.stringInfo() + " →"
                }
            })),
            a.prototype = {
                constructor: a,
                appendAssignedElement: function(t, e) {
                    var i = t.slot
                      , n = new o(t);
                    this._elementNodeMap[i] = n,
                    this.hostNode.addChild(n),
                    e || this.hostNode.element.appendChild(t)
                },
                removeAssignedElement: function(t, e) {
                    var t = t.name
                      , i = this._elementNodeMap[t];
                    delete this._elementNodeMap[t],
                    this.hostNode.removeChild(i),
                    e || this.hostNode.element.removeChild(i.element)
                },
                getAssignedElement: function(t) {
                    return this._elementNodeMap[t.name] ? this._elementNodeMap[t.name].element : null
                }
            },
            t.exports = a
        }
        ,
        6257: (t,e,i)=>{
            var l = i(9842)
              , h = i(4701);
            function n(t) {
                this._element = h.htmlElement("div", {
                    class: "mk-style-helper"
                }),
                this.delegate = t
            }
            n.prototype = {
                constructor: n,
                delegate: null,
                get element() {
                    return this._element
                },
                sizeForElement: function(t) {
                    var e, i, n, o = t.cloneNode(!0), s = [], a = [], r = (r = t,
                    e = s,
                    i = a,
                    h.supportsShadowDOM && ("slot" === r.localName ? (e.push(r),
                    i.push(r.name)) : 0 !== (r = r.getElementsByTagName("slot")).length && Array.prototype.forEach.call(r, function(t) {
                        e.push(t),
                        i.push(t.name)
                    }),
                    e.forEach(function(t) {
                        t.name = "mk-slot-disabled"
                    })),
                    this._element.appendChild(o),
                    this.delegate && this.delegate.styleHelperNodeDidMoveToParent && this.delegate.styleHelperNodeDidMoveToParent(o),
                    o), t = function(t) {
                        var e, i, n, o;
                        if (t && t.nodeType === window.Node.ELEMENT_NODE)
                            return o = window.getComputedStyle(t),
                            e = parseFloat(o.marginLeft),
                            i = parseFloat(o.marginTop),
                            n = parseFloat(o.marginRight),
                            o = parseFloat(o.marginBottom),
                            l.rectFromClientRect(t.getBoundingClientRect()).inset(-e, -i, -n, -o)
                    }(r = h.supportsShadowDOM && "slot" === t.localName ? o.assignedNodes()[0] : r);
                    return this._element.removeChild(o),
                    r = s,
                    n = a,
                    h.supportsShadowDOM && r.forEach(function(t, e) {
                        t.name = n[e]
                    }),
                    t && t.size
                },
                backgroundColorForElement: function(t, e) {
                    this._element.appendChild(t),
                    this.delegate && this.delegate.styleHelperNodeDidMoveToParent && this.delegate.styleHelperNodeDidMoveToParent(t);
                    var i, n = t;
                    return h.supportsShadowDOM && "slot" === t.localName && !(n = t.assignedNodes()[0]) ? (this._element.removeChild(t),
                    null) : (i = window.getComputedStyle(n).backgroundColor,
                    e && (n.style.backgroundColor = "transparent"),
                    this._element.removeChild(t),
                    /^transparent|initial|rgba\(.*, 0\)$/.test(i) ? null : i)
                },
                setAnimationForElement: function(t, e, i) {
                    var n, o = t;
                    h.supportsShadowDOM && "slot" === t.localName && !(o = t.assignedNodes()[0]) || (o.style.animation = o.style.webkitAnimation = e,
                    o.addEventListener("animationend", n = function(t) {
                        t.animationName === i && (o.style.animation = o.style.webkitAnimation = "",
                        o.removeEventListener("animationend", n),
                        o.removeEventListener("webkitAnimationEnd", n))
                    }
                    ),
                    o.addEventListener("webkitAnimationEnd", n))
                }
            },
            t.exports = n
        }
        ,
        2444: (t,e,i)=>{
            var c = i(5479)
              , _ = i(2221)
              , d = c.Coordinate
              , u = c.CoordinateRegion
              , p = c.CoordinateSpan
              , g = c.MapRect;
            t.exports = {
                enclosingRegionForCoordinates: function(t) {
                    var i = 0
                      , n = 180
                      , o = -180
                      , s = 0
                      , a = 90
                      , r = -90;
                    t.forEach(function(t) {
                        var e = _.clamp(t.latitude, -90, 90)
                          , e = (a = Math.min(a, e),
                        r = Math.max(r, e),
                        c.wrapLongitude(t.longitude));
                        e < 0 ? (i = Math.min(i, e),
                        o = Math.max(o, e)) : (n = Math.min(n, e),
                        s = Math.max(s, e))
                    });
                    var e, l, h, t = r - a;
                    return h = o < i ? n + (e = s - n) / 2 : s < n ? i + (e = o - i) / 2 : (h = s - i) < (l = 360 - (n - o)) ? i + (e = h) / 2 : n + (e = l) / 2,
                    new u(new d(a + t / 2,h),new p(t,e))
                },
                padMapRect: function(t, e) {
                    _.checkType(e, "object", "[MapKit] MapRect.pad expects a padding object with top, left, bottom, right but got `" + e + "` instead");
                    var i = e.left || 0
                      , n = e.top || 0;
                    return new g(t.origin.x - i,t.origin.y - n,t.size.width + i + (e.right || 0),t.size.height + n + (e.bottom || 0))
                },
                mapRectContains: function(t, e) {
                    var i = e.origin.x
                      , n = e.origin.y
                      , o = t.maxX()
                      , s = t.maxY();
                    return i >= t.origin.x && i <= o && n >= t.origin.y && n <= s && e.maxX() <= o && e.maxY() <= s
                },
                boundingRectForSortedRects: function(t) {
                    if (0 === t.length)
                        return new g;
                    var e;
                    if (1 === t.length)
                        return 0 <= (e = t[0].minX()) && e < 1 ? t[0] : new g(_.mod(e, 1),t[0].minY(),t[0].size.width,t[0].size.height);
                    for (var i = [[t[0].minX(), t[0].maxX()]], n = t[0].minY(), o = t[0].maxY(), s = 1, a = t.length, r = 0; s < a; ++s) {
                        var l = i[r]
                          , h = t[s]
                          , n = Math.min(n, h.minY())
                          , o = Math.max(o, h.maxY());
                        h.minX() <= l[1] ? i[r] = [l[0], Math.max(l[1], h.maxX())] : (i.push([h.minX(), h.maxX()]),
                        ++r)
                    }
                    var c = i.length;
                    if (1 === c)
                        return new g(i[0][0],n,Math.min(i[0][1] - i[0][0], 1),o - n);
                    for (var d = 1 + i[0][0] - i[c - 1][1], u = i[0][0], p = 1; p < c; ++p) {
                        var m = i[p][0] - i[p - 1][1];
                        d < m && (d = m,
                        u = i[p][0])
                    }
                    return new g(_.mod(u, 1),n,1 - d,o - n)
                }
            }
        }
        ,
        6426: (t,e,i)=>{
            i = i(3838),
            i = {
                EventTarget: i.EventTarget,
                Event: i.Event
            };
            t.exports = i
        }
        ,
        7017: (t,e,i)=>{
            var n = i(4891)
              , o = i(5869)
              , s = /^.*(?=\/mapkit([.a-z-]*)\.js)/;
            function a(t) {
                t = s.exec(t.src);
                return t ? t[0] : null
            }
            var r = {
                _basePath: void 0,
                _versionSuffix: "",
                _scriptBasePath: void 0,
                createUrl: function(t, e) {
                    if (void 0 === this._basePath) {
                        if (o.state === o.States.UNINITIALIZED && !e)
                            return;
                        o._distUrl ? (this._basePath = o._distUrl,
                        this._versionSuffix = "?mkjsVersion=" + n.cdnVersion) : n.useLocalResources ? (void 0 === this._scriptBasePath && this.findScriptAndSetBasePath(),
                        this._basePath = this._scriptBasePath,
                        this._versionSuffix = "?mkjsVersion=" + n.cdnVersion) : o.proxyPrefixes ? this._basePath = o.proxyPrefixes[0] + [n.cdnBase, "mk", n.cdnVersion].join("/") : this._basePath = ["https:" + n.cdnBase, "mk", n.cdnVersion].join("/")
                    }
                    return t = t && t.replace(/^\//, "") || "",
                    [this._basePath, t].join("/") + this._versionSuffix
                },
                createSyrupUrl: function() {
                    var t;
                    if (o.state !== o.States.UNINITIALIZED)
                        return t = "/ti/csr/1.x.x",
                        [o._syrupUrl || (o.proxyPrefixes ? o.proxyPrefixes[0] + n.cdnBase + t : "https:" + n.cdnBase + t), "mk-csr.js?mapkitVersion=" + n.version].join("/")
                },
                createImageUrl: function(t) {
                    return this.createUrl("images/" + t)
                },
                findScriptAndSetBasePath: function() {
                    if (document.currentScript) {
                        var t = a(document.currentScript);
                        if (t)
                            return r._scriptBasePath = t,
                            document.currentScript
                    }
                    for (var e = document.scripts, i = 0, n = e.length; i < n; ++i) {
                        var o = a(e[i]);
                        if (null !== o)
                            return this._scriptBasePath = o,
                            e[i]
                    }
                    return null
                }
            };
            n.useLocalResources && "undefined" != typeof window && void 0 !== window.document && r.findScriptAndSetBasePath(),
            o.addEventListener(o.Events.Initialized, function() {
                r._basePath = void 0,
                r._versionSuffix = ""
            }),
            t.exports = r
        }
        ,
        4701: (t,e,o)=>{
            var i, n = o(764).Tints, s = o(1840).MaximumRestrictedRotation, a = window.document && o(5323).SupportsTouches, r = window.document && o(5323).SupportsPointerEvents, l = window.document && "ShadowRoot"in window;
            function h(t, e) {
                var i = window.document.createElementNS(this, t)
                  , n = 1;
                if ("object" == typeof e && null != e && !(e instanceof window.Node))
                    for (var o in ++n,
                    e)
                        i.setAttribute(o, e[o]);
                for (var s = n, a = arguments.length; s < a; ++s) {
                    var r = arguments[s];
                    r instanceof window.Node ? i.appendChild(r) : "string" == typeof r && i.appendChild(document.createTextNode(r))
                }
                return i
            }
            l && window.navigator && window.navigator.appVersion && 602 <= (i = parseInt((navigator.appVersion.match(/AppleWebKit\/(\d+)/) || [])[1], 10)) && i < 605 && (l = !1),
            t.exports = {
                focusColor: "rgb(0, 122, 255)",
                get devicePixelRatio() {
                    return Math.max(Math.round(window.devicePixelRatio), 1) || 1
                },
                roundToDevicePixel: function(t, e) {
                    e = e || this.devicePixelRatio;
                    return Math.round(t * e) / e
                },
                supportsTouches: a,
                supportsPointerEvents: r,
                supportsGestureEvents: !!window.GestureEvent,
                startEventType: r ? "pointerdown" : a ? "touchstart" : "mousedown",
                moveEventType: r ? "pointermove" : a ? "touchmove" : "mousemove",
                endEventType: r ? "pointerup" : a ? "touchend" : "mouseup",
                cancelEventType: r ? "pointercancel" : a ? "touchcancel" : void 0,
                supportsForceTouch: !a && window.document && "webkitForce"in MouseEvent.prototype,
                htmlElement: h.bind("http://www.w3.org/1999/xhtml"),
                svgElement: h.bind("http://www.w3.org/2000/svg"),
                supportsShadowDOM: l,
                insideIframe: window.top !== window,
                getShadowDOMTargetFromEvent: function(t, e) {
                    t = this.containingDocumentOrShadowRoot(t);
                    return t === document ? e.target : (e = e.changedTouches ? e.changedTouches[0] : e,
                    t.elementFromPoint(e.clientX, e.clientY) || document.body)
                },
                containingDocumentOrShadowRoot: function(t) {
                    return this.supportsShadowDOM ? t.getRootNode() : document
                },
                addShadowRootChild: function(t, e) {
                    var i, n = o(7768).Node;
                    return this.supportsShadowDOM ? i = t.createAndAddShadowRootChild() : (i = t.addChild(new n),
                    e = function(t) {
                        for (var e, i = ""; e = t.match(/:host\(/); ) {
                            i += t.substr(0, e.index),
                            t = t.substr(e.index + e[0].length);
                            for (var n = 1; e = t.match(/^([^()]*)([()])?/); ) {
                                if (t = t.substr(e[0].length),
                                "(" === e[2])
                                    n += 1;
                                else if (")" === e[2] && 0 == --n) {
                                    i += e[1];
                                    break
                                }
                                if (i += e[0],
                                !e[2])
                                    break
                            }
                        }
                        return i + t
                    }(e)),
                    i.addChild(new n(this.htmlElement("style", e))),
                    i
                },
                parentNodeForSvgTarget: function(t) {
                    return t.tagName && "div" !== t.tagName.toLowerCase() ? this.parentNodeForSvgTarget(t.parentNode) : t
                },
                imagePathForDevice: function(t, e, i) {
                    var n = Math.floor(this.devicePixelRatio);
                    return e + (1 < (e = -1 !== t.indexOf(n) ? n : n > t[t.length - 1] ? t[t.length - 1] : t[0]) ? "_" + e + "x" : "") + (i || ".png")
                },
                parseQueryString: function(t) {
                    function e(t) {
                        return decodeURIComponent(t.replace(o, " "))
                    }
                    var i, n = {}, o = /\+/g, s = /([^&=]+)=?([^&]*)/g;
                    if ("string" == typeof t)
                        for (; null !== (i = s.exec(t)); )
                            n[e(i[1])] = e(i[2]);
                    return n
                },
                createSVGIcon: function(t, e) {
                    var i = "mk-icon"
                      , e = (e.class && (i += " " + e.class,
                    delete e.class),
                    this.svgElement("svg", e));
                    return e.setAttribute("class", i),
                    e.setAttribute("focusable", !1),
                    e.appendChild(this.svgElement("g")).appendChild(t),
                    e
                },
                convertColorToRGB: function(t) {
                    var e = document.createElement("div");
                    return e.style.setProperty("color", t),
                    e.style.color
                },
                isValidCSSColor: function(t) {
                    return "" !== this.convertColorToRGB(t)
                },
                updateLabel: function(t, e) {
                    t.setAttribute("title", e),
                    t.setAttribute("aria-label", e)
                },
                easeInOut: function(t) {
                    var e = Math.pow(t, 2);
                    return e / (e + Math.pow(1 - t, 2))
                },
                lerp: function(t, e, i) {
                    return (1 - t) * e + t * i
                },
                darkColorScheme: function(t) {
                    return t === n.Dark
                },
                restrictRotation: function(t) {
                    return t < 180 ? Math.min(t, s) : Math.max(t, 360 - s)
                },
                getIntegralZoom: function(t) {
                    return Math.floor(t + 1e-6)
                },
                getCorsAttribute: function(t) {
                    return t ? "use-credentials" : "anonymous"
                }
            }
        }
        ,
        5410: t=>{
            t.exports = ""
        }
        ,
        7585: t=>{
            "use strict";
            t.exports = JSON.parse('{"ar-SA":6,"ca-ES":1,"cs-CZ":1,"da-DK":1,"de-DE":1,"el-GR":1,"en-AU":1,"en-GB":1,"en-US":0,"en-ZA":0,"es-ES":1,"es-MX":1,"fi-FI":1,"fr-CA":0,"fr-FR":1,"he-IL":0,"hi-IN":0,"hr-HR":1,"hu-HU":1,"id-ID":1,"it-IT":1,"ja-JP":0,"ko-KR":0,"ms-MY":1,"nb-NO":1,"nl-NL":1,"pl-PL":1,"pt-BR":0,"pt-PT":1,"ro-RO":1,"ru-RU":1,"sk-SK":1,"sv-SE":1,"th-TH":0,"tr-TR":1,"uk-UA":1,"vi-VN":1,"zh-CN":1,"zh-HK":0,"zh-TW":0}')
        }
        ,
        4891: t=>{
            "use strict";
            t.exports = JSON.parse('{"version":"5.75.4","build":"22.39-205","cdnBase":"//cdn.apple-mapkit.com","cdnVersion":"5.75.4"}')
        }
        ,
        8872: t=>{
            "use strict";
            t.exports = JSON.parse('{"Annotation.Clustering.AccessibilityLabel":"{{n}} locations, {{title}}, {{subtitle}}","Annotation.Clustering.More":"+{{n}} more","Annotation.Clustering.More.Plural":"+{{n}} more","Annotation.Clustering.NoTitle.AccessibilityLabel":"{{n}} locations, {{subtitle}}","Annotation.Generic.AccessibilityLabel":"{{title}}, {{subtitle}}","Annotation.Marker.AccessibilityLabel":"Marker","Annotation.Pin.AccessibilityLabel":"Pin","Annotation.Pin.Green.AccessibilityLabel":"Green Pin","Annotation.Pin.Purple.AccessibilityLabel":"Purple Pin","Annotation.Pin.Red.AccessibilityLabel":"Red Pin","Compass.Degrees.Plural":"{{n}} degrees","Compass.Degrees.Single":"{{n}} degree","Compass.EastIndicator":"E","Compass.NorthIndicator":"N","Compass.SouthIndicator":"S","Compass.Tooltip":"Rotate the map","Compass.WestIndicator":"W","Legal.Apple.URL":"https://www.apple.com/legal/internet-services/maps/legal-en.html","Legal.Label":"Legal","Location.Error.Message":"Your location can only be shown when location services are enabled and you are connected to the Internet.","Location.Error.Support.Label":"Learn more","Location.Subtitle":"Unknown Address","Location.Title":"Current Location","Logo.Apple.Tooltip":"Apple Maps","Logo.AutoNavi.Tooltip":"AutoNavi Maps","MapType.Tooltip":"Change the map type","Mode.Hybrid":"Hybrid","Mode.Satellite":"Satellite","Mode.Standard":"Standard","Scale.Feet.Short":"ft","Scale.Kilometer.Short":"km","Scale.Meter.Short":"m","Scale.Mile.Short":"mi","Track.User.Location.Tooltip":"Show your current location","Zoom.In.Tooltip":"Zoom In","Zoom.Out.Tooltip":"Zoom Out"}')
        }
        ,
        3120: t=>{
            "use strict";
            t.exports = JSON.parse('{"en-AU":"en-GB","en-IE":"en-GB","en-IN":"en-GB","en-NZ":"en-GB","en-SG":"en-GB","en-ZA":"en-GB","es-LA":"es-MX","es-XL":"es-MX","nn-NO":"nb-NO","no-NO":"nb-NO","vi-VI":"vi-VN","iw":"he-IL"}')
        }
        ,
        2245: t=>{
            "use strict";
            t.exports = JSON.parse('["en-US","fr-FR","pt-BR","zh-CN"]')
        }
        ,
        6260: t=>{
            "use strict";
            t.exports = JSON.parse('{"zh":{"CN":"Hans","HK":"Hant","TW":"Hant"}}')
        }
        ,
        1969: t=>{
            "use strict";
            t.exports = ["ar-SA", "he-IL"]
        }
        ,
        8946: t=>{
            "use strict";
            t.exports = JSON.parse('["ar-SA","ca-ES","cs-CZ","da-DK","de-DE","el-GR","en-GB","en-US","es-ES","es-MX","fi-FI","fr-CA","fr-FR","he-IL","hi-IN","hr-HR","hu-HU","id-ID","it-IT","ja-JP","ko-KR","ms-MY","nl-NL","nb-NO","pl-PL","pt-BR","pt-PT","ro-RO","ru-RU","sk-SK","sv-SE","th-TH","tr-TR","uk-UA","vi-VN","zh-CN","zh-HK","zh-TW"]')
        }
        ,
        2602: t=>{
            "use strict";
            t.exports = JSON.parse('["ar","ca","cs","da","de","el","en","en-AU","en-GB","es","es-MX","es-US","fi","fr","fr-CA","he","hi","hr","hu","id","it","ja","ko","ms","nb","nl","pl","pt","pt-PT","ro","ru","sk","sv","th","tr","uk","vi","zh-Hans","zh-Hant","zh-HK"]')
        }
    }
      , o = {};
    window.mapkit = function t(e) {
        var i = o[e];
        return void 0 === i && (i = o[e] = {
            exports: {}
        },
        n[e](i, i.exports, t)),
        i.exports
    }(8717)
}
)();
